import{_ as S}from"./D8YflT2D.js";import{_ as x}from"./bFTfBRhu.js";import{_ as m,a as L,b as j}from"./BlmrrCf-.js";import{a as A}from"./ODRuMBaB.js";import{_ as G,a as P,b as f}from"./BSn2_kZs.js";import{_ as R}from"./Dd9XixDx.js";import{_ as k}from"./DlAUqK2U.js";import{o as g,e as y,w as o,d as n,b as e,a as r}from"./Bt6BF8tg.js";import{_ as F}from"./d46FRxqf.js";import{_ as w}from"./D14qE6Wt.js";import{_ as O}from"./LJeWQp4g.js";import{_ as D}from"./BzSX6JfU.js";import{_ as N}from"./B196FJuh.js";import{_ as $}from"./oBSre_-p.js";const q={};function I(a,t){const s=S,i=x,l=m,d=A,p=G,u=P,b=R,T=f;return g(),y(T,{name:"installNode"},{title:o(()=>[t[0]||(t[0]=n("Install ")),e(s)]),description:o(()=>[r("p",null,[t[6]||(t[6]=n(" The task downloads a ")),e(s),t[7]||(t[7]=n(" distribution, verifies its integrity, and installs it in the directory pointed by the ")),e(i,{name:"nodeInstallDirectory"}),t[8]||(t[8]=n(" property. The URL used to download the distribution is resolved using the ")),e(i,{name:"nodeDistributionUrlRoot"}),t[9]||(t[9]=n(" property and the ")),e(i,{name:"nodeDistributionUrlPathPattern"}),t[10]||(t[10]=n(" property. Checking the distribution integrity consists of downloading a file providing the distribution shasum. This file is expected to be in the same remote web directory than the distribution archive. For example, if the distribution is located at ")),e(l,null,{default:o(()=>t[1]||(t[1]=[n("https://nodejs.org/dist/vX.Y.Z/node-vX.Y.Z-win-x64.zip")])),_:1}),t[11]||(t[11]=n(", the plugin attempts to download the shasum file located at ")),e(l,null,{default:o(()=>t[2]||(t[2]=[n("https://nodejs.org/dist/vX.Y.Z/SHASUMS256.txt")])),_:1}),t[12]||(t[12]=n(". By default, the plugin relies on the VM ")),e(d,null,{default:o(()=>t[3]||(t[3]=[n("network properties")])),_:1}),t[13]||(t[13]=n(" to know if a proxy server shall be used when downloading the distribution and the shasum. A custom proxy server may also be used by defining ")),e(i,{name:"httpsProxyHost"}),t[14]||(t[14]=n(" property (respectively ")),e(i,{name:"httpProxyHost"}),t[15]||(t[15]=n(" property) if the ")),e(i,{name:"nodeDistributionUrlRoot"}),t[16]||(t[16]=n(" property uses the ")),e(l,null,{default:o(()=>t[4]||(t[4]=[n("https")])),_:1}),t[17]||(t[17]=n(" protocol (resp. uses the ")),e(l,null,{default:o(()=>t[5]||(t[5]=[n("http")])),_:1}),t[18]||(t[18]=n(" protocol). "))]),r("p",null,[t[20]||(t[20]=n(" If a ")),e(s),t[21]||(t[21]=n(" distribution is already installed in the system - either as a global installation or as an installation performed by another Gradle (sub-)project - and shall be used instead of a downloaded distribution, take a look at the ")),e(i,{name:"nodeDistributionProvided"}),t[22]||(t[22]=n(" property instead: when ")),e(l,null,{default:o(()=>t[19]||(t[19]=[n("true")])),_:1}),t[23]||(t[23]=n(", this task is ignored if invoked during a Gradle build, and its outcome will always be ")),e(p,{outcome:"SKIPPED"}),t[24]||(t[24]=n(". "))]),r("p",null,[t[26]||(t[26]=n(" The task takes advantage of ")),e(u,{path:"/performance/#incremental_build"},{default:o(()=>t[25]||(t[25]=[n("Gradle incremental build")])),_:1}),t[27]||(t[27]=n(", and is not executed again unless one of its inputs/outputs changed. Consequently, if the task takes part of a Gradle build, its outcome will be ")),e(p,{outcome:"UP-TO-DATE"}),t[28]||(t[28]=n(". "))]),e(b,null,{default:o(()=>t[29]||(t[29]=[n(" This task should not be executed directly. Gradle executes it if the build requires it. ")])),_:1})]),_:1})}const Ft=k(q,[["render",I]]),E={},U={class:"card my-3"},J={class:"card-body"},Y={class:"card-title"},V={class:"card-text"},B={class:"text-muted small"};function M(a,t){const s=x,i=m,l=F,d=w,p=G,u=O,b=D,T=L,v=j,C=f;return g(),y(C,{name:"installFrontend"},{title:o(()=>t[0]||(t[0]=[n("Install frontend dependencies")])),description:o(()=>[r("p",null,[t[6]||(t[6]=n(" Depending on the value of the ")),e(s,{name:"yarnEnabled"}),t[7]||(t[7]=n(" property, this task issues either a ")),e(i,null,{default:o(()=>t[1]||(t[1]=[n("npm install")])),_:1}),t[8]||(t[8]=n(" command or a ")),e(i,null,{default:o(()=>t[2]||(t[2]=[n("yarn install")])),_:1}),t[9]||(t[9]=n(" command, by default. Consequently, the command shall install/update dependencies, and perform any additional actions as described in the ")),e(i,null,{default:o(()=>t[3]||(t[3]=[n("package.json")])),_:1}),t[10]||(t[10]=n(" file located in the directory pointed by the ")),e(s,{name:"packageJsonDirectory"}),t[11]||(t[11]=n(" property. Optionally, this command may be customized with the ")),e(s,{name:"installScript"}),t[12]||(t[12]=n(" property (e.g. to run a ")),e(i,null,{default:o(()=>t[4]||(t[4]=[n("npm ci")])),_:1}),t[13]||(t[13]=n(" command instead). This task depends on the ")),e(l,{name:"installNode"}),t[14]||(t[14]=n(" task, and optionally on the ")),e(l,{name:"installYarn"}),t[15]||(t[15]=n(" task if the ")),e(s,{name:"yarnEnabled"}),t[16]||(t[16]=n(" property is ")),e(i,null,{default:o(()=>t[5]||(t[5]=[n("true")])),_:1}),t[17]||(t[17]=n(". "))]),r("div",U,[r("div",J,[r("h5",Y,[t[19]||(t[19]=n(" About ")),e(d,{path:"/current/userguide/incremental_build.html"},{default:o(()=>t[18]||(t[18]=[n("incremental build")])),_:1}),t[20]||(t[20]=n(" and up-to-date checks "))]),r("p",V,[t[27]||(t[27]=n(" If you execute this task several times in a row, you may notice the ")),e(i,null,{default:o(()=>t[21]||(t[21]=[n("npm")])),_:1}),t[28]||(t[28]=n("/")),e(i,null,{default:o(()=>t[22]||(t[22]=[n("yarn")])),_:1}),t[29]||(t[29]=n(" command is always executed: Gradle does not skip the task based on a previous execution with the ")),e(p,{outcome:"SUCCESS"}),t[30]||(t[30]=n(" outcome. This is the expected behaviour because the task does not declare any input/output Gradle could track, to know the task is already ")),e(p,{outcome:"UP-TO-DATE"}),t[31]||(t[31]=n(" - unlike the ")),e(l,{name:"installNode"}),t[32]||(t[32]=n(" and ")),e(l,{name:"installYarn"}),t[33]||(t[33]=n(" tasks. Both ")),e(u),t[34]||(t[34]=n(" and ")),e(b),t[35]||(t[35]=n(" have their own strategy to limit overhead when dependencies are already up to date. The plugin does not duplicate this logic, considering it is the business of each package manager, and it would hardly perform as well. If you are tempted to tweak the task so as its execution is skipped under certain circumstances (e.g. declaring the large ")),e(i,null,{default:o(()=>t[23]||(t[23]=[n("nodes_modules")])),_:1}),t[36]||(t[36]=n(" directory as an output), you would move this logic in Gradle. Gradle cannot do magic with large directories, and would have to track each file individually to determine whether the task should be executed or skipped. The question may be: is it worth moving the overhead to Gradle to skip task execution - maybe, or accepting the one occuring when ")),e(i,null,{default:o(()=>t[24]||(t[24]=[n("npm")])),_:1}),t[37]||(t[37]=n("/")),e(i,null,{default:o(()=>t[25]||(t[25]=[n("yarn")])),_:1}),t[38]||(t[38]=n(" is executed again? If you are about to tweak this task, take a look at these ")),e(T,{path:"#tweaking-tasks"},{default:o(()=>t[26]||(t[26]=[n("recommendations")])),_:1}),t[39]||(t[39]=n(". "))]),r("div",B,[t[43]||(t[43]=n(" Some related discussions in Gradle forums: [")),e(v,{href:"https://discuss.gradle.org/t/project-level-build-cache-for-javascript-and-yarn-projects/24134",title:"A discussion in Gradle forums"},{default:o(()=>t[40]||(t[40]=[n("1")])),_:1}),t[44]||(t[44]=n("] [")),e(v,{href:"https://discuss.gradle.org/t/gradle-having-problems-with-large-folders-as-task-inputs-outputs/34775",title:"A discussion in Gradle forums"},{default:o(()=>t[41]||(t[41]=[n("2")])),_:1}),t[45]||(t[45]=n("] [")),e(v,{href:"https://discuss.gradle.org/t/incremental-task-false-up-to-date-result/24619",title:"A discussion in Gradle forums"},{default:o(()=>t[42]||(t[42]=[n("3")])),_:1}),t[46]||(t[46]=n("] "))])])])]),_:1})}const wt=k(E,[["render",M]]),H={};function X(a,t){const s=m,i=x,l=F,d=w,p=f;return g(),y(p,{name:"cleanFrontend"},{title:o(()=>t[0]||(t[0]=[n("Clean frontend artifacts")])),description:o(()=>[r("p",null,[t[7]||(t[7]=n(" This task does nothing by default, considering frontend artifacts (minimified Javascript, CSS, HTML files...) are generated in the ")),e(s,null,{default:o(()=>t[1]||(t[1]=[n("${project.buildDir}")])),_:1}),t[8]||(t[8]=n(" directory. If it is not the case, this task may be useful to clean the relevant directory. A clean script shall be defined in the ")),e(s,null,{default:o(()=>t[2]||(t[2]=[n("package.json")])),_:1}),t[9]||(t[9]=n(" file, and the ")),e(i,{name:"cleanScript"}),t[10]||(t[10]=n(" property shall be set with the corresponding ")),e(s,null,{default:o(()=>t[3]||(t[3]=[n("npm")])),_:1}),t[11]||(t[11]=n("/")),e(s,null,{default:o(()=>t[4]||(t[4]=[n("yarn")])),_:1}),t[12]||(t[12]=n(" command. This task depends on the ")),e(l,{name:"installFrontend"}),t[13]||(t[13]=n(" task, and is skipped if the ")),e(i,{name:"cleanScript"}),t[14]||(t[14]=n(" property is ")),e(s,null,{default:o(()=>t[5]||(t[5]=[n("null")])),_:1}),t[15]||(t[15]=n(". Apart from direct execution, the task is also executed when the Gradle lifecycle ")),e(d,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:o(()=>t[6]||(t[6]=[n("clean")])),_:1}),t[16]||(t[16]=n(" task is executed. "))])]),_:1})}const Tt=k(H,[["render",X]]),Z={},z={class:"card my-3"},W={class:"card-body"},K={class:"card-text"};function Q(a,t){const s=m,i=x,l=F,d=w,p=G,u=L,b=f;return g(),y(b,{name:"assembleFrontend"},{title:o(()=>t[0]||(t[0]=[n("Assemble frontend artifacts")])),description:o(()=>[t[20]||(t[20]=n(" This task allows to execute a build script as part of a Gradle build. The build script shall be defined in the ")),e(s,null,{default:o(()=>t[1]||(t[1]=[n("package.json")])),_:1}),t[21]||(t[21]=n(" file, and the ")),e(i,{name:"assembleScript"}),t[22]||(t[22]=n(" property shall be set with the corresponding ")),e(s,null,{default:o(()=>t[2]||(t[2]=[n("npm")])),_:1}),t[23]||(t[23]=n("/")),e(s,null,{default:o(()=>t[3]||(t[3]=[n("yarn")])),_:1}),t[24]||(t[24]=n(" command. This task depends on the ")),e(l,{name:"installFrontend"}),t[25]||(t[25]=n(" task, and is skipped if the ")),e(i,{name:"assembleScript"}),t[26]||(t[26]=n(" property is ")),e(s,null,{default:o(()=>t[4]||(t[4]=[n("null")])),_:1}),t[27]||(t[27]=n(". Apart from direct execution, the task is also executed when the Gradle lifecycle ")),e(d,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:o(()=>t[5]||(t[5]=[n("assemble")])),_:1}),t[28]||(t[28]=n(" task is executed. ")),r("div",z,[r("div",W,[t[19]||(t[19]=r("h5",{class:"card-title"},"About task execution and up-to-date checks",-1)),r("p",K,[t[10]||(t[10]=n(" If you execute this task several times in a row, you may notice the ")),e(s,null,{default:o(()=>t[6]||(t[6]=[n("npm")])),_:1}),t[11]||(t[11]=n("/")),e(s,null,{default:o(()=>t[7]||(t[7]=[n("pnpm")])),_:1}),t[12]||(t[12]=n("/")),e(s,null,{default:o(()=>t[8]||(t[8]=[n("yarn")])),_:1}),t[13]||(t[13]=n(" command is always executed: Gradle does not skip the task based on a previous execution with the ")),e(p,{outcome:"SUCCESS"}),t[14]||(t[14]=n(" outcome. This is the expected behaviour because the task does not declare any input/output Gradle could track, to know the task is already ")),e(p,{outcome:"UP-TO-DATE"}),t[15]||(t[15]=n(" (e.g. unlike tasks ")),e(l,{name:"installNode"}),t[16]||(t[16]=n(" and ")),e(l,{name:"installYarn"}),t[17]||(t[17]=n("). The task provides the ability to plug the developer's own Javascript build process to Gradle, and nothing more. Every Javascript build process is unique: it depends on the project, the languages involved (e.g. TypeScript, JSX, ECMA script, SASS, SCSS...), the directory layout, the build utilities (Webpack...), etc., chosen by the team. Moreover, some build utilities are already able to build artifacts incrementally. The plugin does not duplicate this logic. If you are about to tweak this task, take a look at these ")),e(u,{path:`${a.$config.public.paths.tasks}#tweaking-tasks`},{default:o(()=>t[9]||(t[9]=[n("recommendations")])),_:1},8,["path"]),t[18]||(t[18]=n(". "))])])])]),_:1})}const vt=k(Z,[["render",Q]]),_={};function h(a,t){const s=m,i=x,l=F,d=w,p=f;return g(),y(p,{name:"checkFrontend"},{title:o(()=>t[0]||(t[0]=[n("Check frontend application")])),description:o(()=>[r("p",null,[t[6]||(t[6]=n(" This task may be used to integrate a check script into a Gradle build. The check script shall be defined in the ")),e(s,null,{default:o(()=>t[1]||(t[1]=[n("package.json")])),_:1}),t[7]||(t[7]=n(" file, and the ")),e(i,{name:"checkScript"}),t[8]||(t[8]=n(" property shall be set with the corresponding ")),e(s,null,{default:o(()=>t[2]||(t[2]=[n("npm")])),_:1}),t[9]||(t[9]=n("/")),e(s,null,{default:o(()=>t[3]||(t[3]=[n("yarn")])),_:1}),t[10]||(t[10]=n(" command. A typical check script may lint source files, execute tests, and/or perform additional analysis actions. This task depends on the ")),e(l,{name:"installFrontend"}),t[11]||(t[11]=n(" task, and is skipped if the ")),e(i,{name:"checkScript"}),t[12]||(t[12]=n(" property is ")),e(s,null,{default:o(()=>t[4]||(t[4]=[n("null")])),_:1}),t[13]||(t[13]=n(". Apart from direct execution, the task is also executed when the Gradle lifecycle ")),e(d,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:o(()=>t[5]||(t[5]=[n("check")])),_:1}),t[14]||(t[14]=n(" task is executed. "))])]),_:1})}const St=k(_,[["render",h]]),c={};function tt(a,t){const s=m,i=x,l=F,d=f;return g(),y(d,{name:"publishFrontend"},{title:o(()=>t[0]||(t[0]=[n("Publish frontend artifacts")])),description:o(()=>[r("p",null,[t[7]||(t[7]=n(" This task may be used to integrate a publish script into a Gradle build. The publish script shall be defined in the ")),e(s,null,{default:o(()=>t[1]||(t[1]=[n("package.json")])),_:1}),t[8]||(t[8]=n(" file, and the ")),e(i,{name:"publishScript"}),t[9]||(t[9]=n(" property shall be set with the corresponding ")),e(s,null,{default:o(()=>t[2]||(t[2]=[n("npm")])),_:1}),t[10]||(t[10]=n("/")),e(s,null,{default:o(()=>t[3]||(t[3]=[n("yarn")])),_:1}),t[11]||(t[11]=n(" command. This task depends on the ")),e(l,{name:"assembleFrontend"}),t[12]||(t[12]=n(" task, and is skipped either if the ")),e(i,{name:"assembleScript"}),t[13]||(t[13]=n(" property is ")),e(s,null,{default:o(()=>t[4]||(t[4]=[n("null")])),_:1}),t[14]||(t[14]=n(", or if the ")),e(i,{name:"publishScript"}),t[15]||(t[15]=n(" property is ")),e(s,null,{default:o(()=>t[5]||(t[5]=[n("null")])),_:1}),t[16]||(t[16]=n(". Apart from direct execution, the task is also executed when the Gradle ")),e(s,null,{default:o(()=>t[6]||(t[6]=[n("publish")])),_:1}),t[17]||(t[17]=n(" task is executed. "))])]),_:1})}const Gt=k(c,[["render",tt]]),nt={};function et(a,t){const s=m,i=S,l=F,d=N,p=$,u=f;return g(),y(u,{name:"RunNode",type:""},{title:o(()=>[t[1]||(t[1]=n("Run a custom command with ")),e(s,null,{default:o(()=>t[0]||(t[0]=[n("node")])),_:1})]),description:o(()=>[r("p",null,[t[5]||(t[5]=n(" The plugin provides task type ")),e(s,null,{default:o(()=>t[2]||(t[2]=[n("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode")])),_:1}),t[6]||(t[6]=n(" that allows creating a custom task to run a JS script. The ")),e(s,null,{default:o(()=>t[3]||(t[3]=[n("script")])),_:1}),t[7]||(t[7]=n(" property must be set with the corresponding command. Then, choose whether ")),e(i),t[8]||(t[8]=n(" only is required, or if additional dependencies located in the ")),e(s,null,{default:o(()=>t[4]||(t[4]=[n("package.json")])),_:1}),t[9]||(t[9]=n(" file should be installed: make the task either depends on ")),e(l,{name:"installNode"}),t[10]||(t[10]=n(" task or on ")),e(l,{name:"installFrontend"}),t[11]||(t[11]=n(" task. The code hereafter shows the configuration required to run a JS script: "))]),e(p,{id:"run-node-example"},{groovy:o(()=>[r("pre",null,[e(s,null,{default:o(()=>[t[13]||(t[13]=n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode
tasks.register('myScript', RunNode) {
    `)),e(d,null,{default:o(()=>t[12]||(t[12]=[n(`// dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')`)])),_:1}),t[14]||(t[14]=n(`
    script = 'my-script.js'
}`))]),_:1})])]),kotlin:o(()=>[r("pre",null,[e(s,null,{default:o(()=>[t[16]||(t[16]=n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode
tasks.register<RunNode>("myScript") {
    `)),e(d,null,{default:o(()=>t[15]||(t[15]=[n(`// dependsOn(tasks.named("installNode"))
    // dependsOn(tasks.named("installFrontend"))`)])),_:1}),t[17]||(t[17]=n(`
    script.set("my-script.js")
}`))]),_:1})])]),_:1})]),_:1})}const Lt=k(nt,[["render",et]]),ot={};function st(a,t){const s=m,i=x,l=S,d=F,p=N,u=$,b=f;return g(),y(b,{name:"RunNpx",type:!0},{title:o(()=>[t[1]||(t[1]=n("Run a custom command with ")),e(s,null,{default:o(()=>t[0]||(t[0]=[n("npx")])),_:1})]),description:o(()=>[t[25]||(t[25]=r("blockquote",{class:"blockquote"}," Requires Node.js 8.2.0+ on Unix-like O/S, Node.js 8.5.0+ on Windows O/S ",-1)),r("p",null,[t[8]||(t[8]=n(" The plugin provides the task type ")),e(s,null,{default:o(()=>t[2]||(t[2]=[n("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpx")])),_:1}),t[9]||(t[9]=n(" that allows creating a custom task to run a ")),e(s,null,{default:o(()=>t[3]||(t[3]=[n("npx")])),_:1}),t[10]||(t[10]=n(" command. The ")),e(s,null,{default:o(()=>t[4]||(t[4]=[n("script")])),_:1}),t[11]||(t[11]=n(" property must be set with the corresponding command. The task will fail if the ")),e(i,{name:"yarnEnabled"}),t[12]||(t[12]=n(" property is ")),e(s,null,{default:o(()=>t[5]||(t[5]=[n("true")])),_:1}),t[13]||(t[13]=n(", to prevent unpredictable behaviors with mixed installation of dependencies. Then, choose whether ")),e(l),t[14]||(t[14]=n(" only is required, or if additional dependencies located in the ")),e(s,null,{default:o(()=>t[6]||(t[6]=[n("package.json")])),_:1}),t[15]||(t[15]=n(" file should be installed: make the task either depends on ")),e(d,{name:"installNode"}),t[16]||(t[16]=n(" task or on ")),e(d,{name:"installFrontend"}),t[17]||(t[17]=n(" task. The code hereafter shows the configuration required to output the version of ")),e(s,null,{default:o(()=>t[7]||(t[7]=[n("npx")])),_:1}),t[18]||(t[18]=n(": "))]),e(u,{id:"run-npx-example",class:"my-3"},{groovy:o(()=>[r("pre",null,[e(s,null,{default:o(()=>[t[20]||(t[20]=n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpx
tasks.register('npxVersion', RunNpx) {
    `)),e(p,null,{default:o(()=>t[19]||(t[19]=[n(`// dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')`)])),_:1}),t[21]||(t[21]=n(`
    script = '--version'
}`))]),_:1})])]),kotlin:o(()=>[r("pre",null,[e(s,null,{default:o(()=>[t[23]||(t[23]=n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpx
tasks.register<RunNpx>("npxVersion") {
    `)),e(p,null,{default:o(()=>t[22]||(t[22]=[n(`// dependsOn(tasks.named("installNode"))
    // dependsOn(tasks.named("installFrontend"))`)])),_:1}),t[24]||(t[24]=n(`
    script.set("--version")
}`))]),_:1})])]),_:1})]),_:1})}const Nt=k(ot,[["render",st]]);export{Ft as _,wt as a,Tt as b,vt as c,St as d,Gt as e,Lt as f,Nt as g};
