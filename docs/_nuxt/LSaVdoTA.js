import{u as E,a as j}from"./BkGJl2ZQ.js";import{_ as T}from"./BFqTcm4f.js";import{a as b,_ as f}from"./zck6Z6fF.js";import{_ as X}from"./CxKyWrla.js";import{_ as g}from"./DlAUqK2U.js";import{o as m,c as F,a,b as n,w as t,h as w,f as v,d as e,g as M,u as U}from"./0eoLPSdn.js";import{a as q,_ as H}from"./COc4Puty.js";import{_ as J,a as K,b as W,c as Q,d as Z,e as ee,f as ne,g as te}from"./Cos-Ciw5.js";import{_ as ae}from"./DQimxJDu.js";import{_ as N}from"./BHt_xBA0.js";import{_ as se,a as oe,b as $}from"./B6j9K0o-.js";import{_ as ie}from"./CtBl-4bT.js";import{_ as le}from"./DysKOmB8.js";import{_ as G}from"./C-3WmzZG.js";import{_ as R}from"./Bag9INXo.js";import{u as re}from"./abRkgXpJ.js";import"./D4IM-IFr.js";import"./BSZXaiZV.js";const de={},ue={viewBox:"0 0 510 320",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"},ce=w('<g id="gradleTask"><rect width="100" height="30" fill="chartreuse" stroke="black" rx="3" ry="3"></rect></g><g id="frontendTask"><rect width="100" height="30" fill="cyan" stroke="black" rx="3" ry="3"></rect></g><g id="frontendTaskType"><rect width="100" height="30" fill="gainsboro" stroke="black" rx="3" ry="3"></rect></g><g id="cleanTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">clean</text></g><g id="checkTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">check</text></g><g id="assembleTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">assemble</text></g><g id="publishTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">publish</text></g><g id="installNodeTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> installNode </text></g><g id="installYarnTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> installYarn </text></g><g id="installFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> installFrontend </text></g><g id="cleanFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> cleanFrontend </text></g><g id="checkFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> checkFrontend </text></g><g id="assembleFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> assembleFrontend </text></g><g id="publishFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> publishFrontend </text></g><g id="RunNodeTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">RunNode</text></g><g id="RunNpmYarnTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">RunNpmYarn</text></g><g id="RunNpxTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">RunNpx</text></g><marker id="arrow" viewBox="0 0 10 10" refX="5" refY="5" markerWidth="6" markerHeight="6" orient="auto-start-reverse" fill="violet"><path d="M 0 0 L 10 5 L 0 10 z"></path></marker><g id="arrow"><line x1="60" y1="80" x2="100" y2="20"></line></g>',19),pe={id:"gradleBasePlugin"},_e=a("rect",{x:"0",y:"0",width:"380",height:"70",fill:"none",stroke:"grey"},null,-1),me=a("text",{x:"10",y:"18","font-size":"0.5rem",fill:"grey"},"Gradle Base plugin",-1),ke=a("use",{x:"10",y:"30","xlink:href":"#cleanTask"},null,-1),he=a("use",{x:"140",y:"30","xlink:href":"#checkTask"},null,-1),fe=a("use",{x:"270",y:"30","xlink:href":"#assembleTask"},null,-1),ge=a("g",{id:"gradlePublishingPlugin"},[a("rect",{x:"390",y:"0",width:"120",height:"70",fill:"none",stroke:"grey"}),a("text",{"text-anchor":"end",x:"500",y:"18","font-size":"0.5rem",fill:"grey"},"Gradle Publishing plugin"),a("use",{x:"400",y:"30","xlink:href":"#publishTask"})],-1),xe={id:"frontendGradlePlugin"},ye=a("rect",{x:"0",y:"80",width:"510",height:"240",fill:"none",stroke:"grey"},null,-1),Te=a("text",{"text-anchor":"end",x:"500",y:"238","font-size":"0.5rem",fill:"grey"},"Frontend Gradle plugin",-1),be=a("use",{x:"10",y:"90","xlink:href":"#cleanFrontendTask"},null,-1),Fe=a("use",{x:"140",y:"90","xlink:href":"#checkFrontendTask"},null,-1),we=a("use",{x:"270",y:"90","xlink:href":"#assembleFrontendTask"},null,-1),ve=a("use",{x:"400",y:"90","xlink:href":"#publishFrontendTask"},null,-1),Ne=a("use",{x:"140",y:"150","xlink:href":"#installFrontendTask"},null,-1),$e=a("use",{x:"75",y:"210","xlink:href":"#installNodeTask"},null,-1),Ge=a("use",{x:"205",y:"210","xlink:href":"#installYarnTask"},null,-1),Re=a("line",{x1:"0",y1:"250",x2:"510",y2:"250",stroke:"gainsboro","stroke-dasharray":"4 2"},null,-1),Ye=a("text",{"text-anchor":"middle",x:"255",y:"268","font-size":"0.5rem",fill:"darkgrey"}," Additional task types ",-1),ze=a("use",{x:"75",y:"280","xlink:href":"#RunNodeTaskType"},null,-1),Ce=a("use",{x:"205",y:"280","xlink:href":"#RunNpmYarnTaskType"},null,-1),Pe=a("use",{x:"335",y:"280","xlink:href":"#RunNpxTaskType"},null,-1),Le=w('<use xlink:href="#gradleBasePlugin"></use><use xlink:href="#gradlePublishingPlugin"></use><use xlink:href="#frontendGradlePlugin"></use><line x1="60" y1="60" x2="60" y2="85" stroke="violet" marker-end="url(#arrow)"></line><line x1="190" y1="60" x2="190" y2="85" stroke="violet" marker-end="url(#arrow)"></line><line x1="320" y1="60" x2="320" y2="85" stroke="violet" marker-end="url(#arrow)"></line><line x1="450" y1="60" x2="450" y2="85" stroke="violet" marker-end="url(#arrow)"></line><line x1="60" y1="120" x2="175" y2="145" stroke="violet" marker-end="url(#arrow)"></line><line x1="190" y1="120" x2="190" y2="145" stroke="violet" marker-end="url(#arrow)"></line><line x1="320" y1="120" x2="205" y2="145" stroke="violet" marker-end="url(#arrow)"></line><line x1="400" y1="105" x2="375" y2="105" stroke="violet" marker-end="url(#arrow)"></line><line x1="190" y1="180" x2="125" y2="205" stroke="violet" marker-end="url(#arrow)"></line><line x1="190" y1="180" x2="255" y2="205" stroke="violet" marker-end="url(#arrow)"></line>',13);function De(i,p){const o=T,s=b;return m(),F("svg",ue,[a("defs",null,[ce,a("g",pe,[_e,me,n(o,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:t(()=>[ke]),_:1}),n(o,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:t(()=>[he]),_:1}),n(o,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:t(()=>[fe]),_:1})]),ge,a("g",xe,[ye,Te,n(s,{path:`${i.$config.public.paths.tasks}#cleanFrontend`},{default:t(()=>[be]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#checkFrontend`},{default:t(()=>[Fe]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#assembleFrontend`},{default:t(()=>[we]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#publishFrontend`},{default:t(()=>[ve]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#installFrontend`},{default:t(()=>[Ne]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#installNode`},{default:t(()=>[$e]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#installYarn`},{default:t(()=>[Ge]),_:1},8,["path"]),Re,Ye,n(s,{path:`${i.$config.public.paths.tasks}#RunNode`},{default:t(()=>[ze]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#RunNpmYarn`},{default:t(()=>[Ce]),_:1},8,["path"]),n(s,{path:`${i.$config.public.paths.tasks}#RunNpx`},{default:t(()=>[Pe]),_:1},8,["path"])])]),Le])}const Oe=g(de,[["render",De]]),Ae={};function Se(i,p){const o=ae,s=N,r=f,c=q,d=se,l=oe,_=ie,k=$;return m(),v(k,{name:"installYarn"},{title:t(()=>[e("Install "),n(o,{version:1})]),description:t(()=>[a("p",null,[e(" If the "),n(s,{name:"yarnEnabled"}),e(" property is "),n(r,null,{default:t(()=>[e("true")]),_:1}),e(", the task downloads and install a "),n(o,{version:1}),e(" distribution in the directory pointed by the "),n(s,{name:"yarnInstallDirectory"}),e(". The URL used to download the distribution is resolved using the "),n(s,{name:"yarnDistributionUrlRoot"}),e(" property and the "),n(s,{name:"yarnDistributionUrlPathPattern"}),e(" property. By default, the plugin relies on the VM "),n(c,null,{default:t(()=>[e("network properties")]),_:1}),e(" to know if a proxy server shall be used when downloading the distribution. A custom proxy server may also be used by defining the "),n(s,{name:"httpsProxyHost"}),e(" property (respectively the "),n(s,{name:"httpProxyHost"}),e(" property) if the "),n(s,{name:"yarnDistributionUrlRoot"}),e(" property uses the "),n(r,null,{default:t(()=>[e("https")]),_:1}),e(" protocol (resp. uses the "),n(r,null,{default:t(()=>[e("http")]),_:1}),e(" protocol). ")]),a("p",null,[e(" If a "),n(o,{version:1}),e(" distribution is already installed in the local platform - either as a global installation or as an installation performed by another Gradle (sub-)project - and shall be used instead of a downloaded distribution, take a look at the "),n(s,{name:"yarnDistributionProvided"}),e(" property instead: when "),n(r,null,{default:t(()=>[e("true")]),_:1}),e(", this task is ignored if invoked during a Gradle build, and its outcome will always be "),n(d,{outcome:"SKIPPED"}),e(". ")]),a("p",null,[e(" The task takes advantage of "),n(l,{path:"/performance/#incremental_build"},{default:t(()=>[e("Gradle incremental build")]),_:1}),e(", and is not executed again unless one of its inputs/outputs changed. Consequently, if the task takes part of a Gradle build, its outcome will be "),n(d,{outcome:"UP-TO-DATE"}),e(". ")]),n(_,null,{default:t(()=>[e(" This task should not be executed directly. Gradle executes it if the build requires it. ")]),_:1})]),_:1})}const Ve=g(Ae,[["render",Se]]),Ie={};function Be(i,p){const o=f,s=N,r=le,c=G,d=R,l=$;return m(),v(l,{name:"RunNpmYarn",type:""},{title:t(()=>[e("Run a custom command with "),n(o,null,{default:t(()=>[e("npm")]),_:1}),e(" or "),n(o,null,{default:t(()=>[e("yarn")]),_:1})]),description:t(()=>[a("p",null,[e(" The plugin provides the task type "),n(o,null,{default:t(()=>[e("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpmYarn")]),_:1}),e(" that allows creating a custom task to run a frontend script. The "),n(o,null,{default:t(()=>[e("script")]),_:1}),e(" property must be set with the corresponding command. Depending on the "),n(s,{name:"yarnEnabled"}),e(" property, the task runs either "),n(o,null,{default:t(()=>[e("npm")]),_:1}),e(" or "),n(o,null,{default:t(()=>[e("yarn")]),_:1}),e(". Then, choose the appropriate task dependency: make the task either depends on "),n(r,{name:"installNode"}),e(" task or on "),n(r,{name:"installFrontend"}),e(" task. The code hereafter shows the configuration required to run end-to-end tests: ")]),n(d,{id:"run-npm-yarn-example"},{groovy:t(()=>[a("pre",null,[n(o,null,{default:t(()=>[e(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpmYarn
tasks.register('yarnVersion', RunNpmYarn) {
    `),n(c,null,{default:t(()=>[e(`// dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')`)]),_:1}),e(`
    script = '--version'
}`)]),_:1})])]),kotlin:t(()=>[a("pre",null,[n(o,null,{default:t(()=>[e(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpmYarn
tasks.register<RunNpmYarn>("yarnVersion") {
    `),n(c,null,{default:t(()=>[e(`// dependsOn(tasks.named("installNode"))
    // dependsOn(tasks.named("installFrontend"))`)]),_:1}),e(`
    script.set("--version")
}`)]),_:1})])]),_:1})]),_:1})}const Ee=g(Ie,[["render",Be]]),je=a("p",null,"The plugin registers multiple tasks, that may have dependencies with each other, and also with:",-1),Xe={class:"text-center"},x="Gradle tasks to run node, npm, npx, yarn commands",y="Gradle tasks and types provided by the plugin to run node/npm/npx/yarn: integration, dependencies, customization, recommendations",un=M({__name:"node-corepack-npm-pnpm-yarn-tasks",setup(i){const p=U(),o=`${p.public.canonicalBaseUrl}${p.public.paths.tasks}`;return re({link:[{rel:"canonical",href:o}]}),E({description:y,ogDescription:y,ogTitle:x,ogUrl:o,title:x}),(s,r)=>{const c=j,d=T,l=f,_=X,k=Oe,h=H,Y=J,z=Ve,C=K,P=W,L=Q,D=Z,O=ee,A=ne,S=Ee,V=te,I=b,u=G,B=R;return m(),F("section",null,[n(c,null,{default:t(()=>[e("Tasks")]),_:1}),je,a("ul",null,[a("li",null,[e(" Gradle lifecycle tasks defined in the "),n(d,{path:"/current/userguide/base_plugin.html"},{default:t(()=>[e("Gradle Base plugin")]),_:1}),e(": "),n(l,null,{default:t(()=>[e("clean")]),_:1}),e(", "),n(l,null,{default:t(()=>[e("assemble")]),_:1}),e(", "),n(l,null,{default:t(()=>[e("check")]),_:1}),e(". ")]),a("li",null,[e(" Tasks defined in the Gradle Publishing plugin: "),n(l,null,{default:t(()=>[e("publish")]),_:1}),e(". ")])]),n(_,null,{default:t(()=>[e("Dependency tree")]),_:1}),a("p",Xe,[n(k,{class:"w-75"})]),n(_,null,{default:t(()=>[e("Reference")]),_:1}),a("section",null,[n(h,null,{default:t(()=>[e("Built-in tasks")]),_:1}),n(Y),n(z),n(C),n(P),n(L),n(D),n(O)]),a("section",null,[n(h,null,{default:t(()=>[e("Additional types")]),_:1}),n(A),n(S),n(V)]),a("section",null,[n(h,{id:"tweaking-tasks"},{default:t(()=>[e(" Tweaking the built-in tasks "),n(I,{path:`${s.$config.public.paths.tasks}#app`,class:"small text-info"},{default:t(()=>[e("↑")]),_:1},8,["path"])]),_:1}),a("p",null,[e(" If you need to customize the plugin's built-in tasks (e.g. declare additional I/O or dependencies), it is important to conform to the "),n(d,{path:"/current/userguide/task_configuration_avoidance.html#sec:old_vs_new_configuration_api_overview"},{default:t(()=>[e("Configuration avoidance API")]),_:1}),e(": use references of task providers instead of references of tasks, and continue taking advantage of the lazy configuration strategy the plugin already implements. The examples below introduce the implementation expected with simple cases: ")]),n(B,{id:"lazy-configuration-examples"},{groovy:t(()=>[a("pre",null,[n(l,null,{default:t(()=>[n(u,null,{default:t(()=>[e(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)]),_:1}),e(`
installFrontend {
    dependsOn 'otherTask'
    inputs.files('package.json', 'package-lock.json')
}
`),n(u,null,{default:t(()=>[e(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later. Let's also reinforce this behaviour
// by using its provider to retrieve the task.`)]),_:1}),e(`
tasks.named('installFrontend') {
    dependsOn tasks.named('otherTask')
    inputs.files('package.json', 'package-lock.json')
}

`),n(u,null,{default:t(()=>[e(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)]),_:1}),e(`
task eagerTask {
    dependsOn 'installFrontend'
}
`),n(u,null,{default:t(()=>[e(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)]),_:1}),e(`
tasks.register('lazyTask') {
    dependsOn tasks.named('installFrontend')
}`)]),_:1})])]),kotlin:t(()=>[a("pre",null,[n(l,null,{default:t(()=>[n(u,null,{default:t(()=>[e(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)]),_:1}),e(`
installFrontend {
    dependsOn("otherTask")
    inputs.files("package.json", "package-lock.json")
}
`),n(u,null,{default:t(()=>[e(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later.`)]),_:1}),e(`
tasks.named<InstallTask>("installFrontend") {
    dependsOn(tasks.named("otherTask"))
    inputs.files("package.json", "package-lock.json")
}

`),n(u,null,{default:t(()=>[e(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)]),_:1}),e(`
task eagerTask {
    dependsOn("installFrontend")
}
`),n(u,null,{default:t(()=>[e(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)]),_:1}),e(`
tasks.register("lazyTask") {
    dependsOn(tasks.named("installFrontend"))
}`)]),_:1})])]),_:1}),a("p",null,[e(" If your application uses the legacy syntax, you may find further instructions to migrate to the modern syntax in this Gradle "),n(d,{path:"/current/userguide/task_configuration_avoidance.html#sec:task_configuration_avoidance_migration_guidelines"},{default:t(()=>[e("guide")]),_:1}),e(". ")])])])}}});export{un as default};
