import{u as V,a as I}from"./D8YflT2D.js";import{_ as F}from"./D14qE6Wt.js";import{a as v,_ as j}from"./BlmrrCf-.js";import{_ as X}from"./BFUaQN98.js";import{_ as Q}from"./DlAUqK2U.js";import{o as w,c as $,a,g as T,b as e,w as s,f as U,d as t,u as q}from"./Bt6BF8tg.js";import{_ as H}from"./ODRuMBaB.js";import{_,a as W,b as J,c as K,d as Z,e as c,f as nn,g as en,h as tn}from"./BksvSkMa.js";import{_ as sn,a as ln,b as an,c as rn,d as on}from"./DhnqJpIY.js";import{_ as dn}from"./d46FRxqf.js";import{_ as un}from"./oBSre_-p.js";import{_ as pn}from"./B196FJuh.js";import{u as mn}from"./U9e_5WVs.js";import"./CAdOYEvR.js";import"./bFTfBRhu.js";import"./BSn2_kZs.js";import"./Dd9XixDx.js";import"./DqVRC5Wu.js";import"./LJeWQp4g.js";import"./CFN0ZZoK.js";import"./xnPBSRrJ.js";import"./Bq9rqCyi.js";import"./BzSX6JfU.js";const kn={},fn={viewBox:"0 0 640 440",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"},gn={id:"gradleBasePlugin"},xn={id:"frontendGradlePlugin"};function Tn(o,l){const p=F,r=v;return w(),$("svg",fn,[a("defs",null,[l[23]||(l[23]=T('<g id="gradleTask"><rect width="120" height="30" fill="chartreuse" stroke="black" rx="3" ry="3"></rect></g><g id="frontendTask"><rect width="120" height="30" fill="cyan" stroke="black" rx="3" ry="3"></rect></g><g id="frontendTaskType"><rect width="100" height="30" fill="gainsboro" stroke="black" rx="3" ry="3"></rect></g><g id="cleanTask"><use xlink:href="#gradleTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">clean</text></g><g id="checkTask"><use xlink:href="#gradleTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">check</text></g><g id="assembleTask"><use xlink:href="#gradleTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">assemble</text></g><g id="publishTask"><use xlink:href="#gradleTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">publish</text></g><g id="installNodeTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> installNode </text></g><g id="installCorepackTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> installCorepack </text></g><g id="resolvePackageManagerTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> resolvePackageManager </text></g><g id="installPackageManagerTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> installPackageManager </text></g><g id="installFrontendTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> installFrontend </text></g><g id="cleanFrontendTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> cleanFrontend </text></g><g id="checkFrontendTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> checkFrontend </text></g><g id="assembleFrontendTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> assembleFrontend </text></g><g id="publishFrontendTask"><use xlink:href="#frontendTask"></use><text x="60" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> publishFrontend </text></g><g id="RunNodeTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">RunNode</text></g><g id="RunCorepackTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem"> RunCorepack </text></g><g id="RunNpmTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">RunNpm</text></g><g id="RunPnpmTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">RunPnpm</text></g><g id="RunYarnTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.6rem">RunYarn</text></g><marker id="arrow" viewBox="0 0 10 10" refX="5" refY="5" markerWidth="6" markerHeight="6" orient="auto-start-reverse" fill="violet"><path d="M 0 0 L 10 5 L 0 10 z"></path></marker>',22)),a("g",gn,[l[3]||(l[3]=a("rect",{x:"0",y:"0",width:"460",height:"70",fill:"none",stroke:"grey"},null,-1)),l[4]||(l[4]=a("text",{x:"20",y:"18","font-size":"0.5rem",fill:"grey"},"Gradle Base plugin",-1)),e(p,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:s(()=>l[0]||(l[0]=[a("use",{x:"20",y:"30","xlink:href":"#cleanTask"},null,-1)])),_:1}),e(p,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:s(()=>l[1]||(l[1]=[a("use",{x:"170",y:"30","xlink:href":"#checkTask"},null,-1)])),_:1}),e(p,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:s(()=>l[2]||(l[2]=[a("use",{x:"320",y:"30","xlink:href":"#assembleTask"},null,-1)])),_:1})]),l[24]||(l[24]=a("g",{id:"gradlePublishingPlugin"},[a("rect",{x:"480",y:"0",width:"160",height:"70",fill:"none",stroke:"grey"}),a("text",{"text-anchor":"end",x:"620",y:"18","font-size":"0.5rem",fill:"grey"},"Gradle Publishing plugin"),a("use",{x:"500",y:"30","xlink:href":"#publishTask"})],-1)),a("g",xn,[l[19]||(l[19]=a("rect",{x:"0",y:"80",width:"640",height:"360",fill:"none",stroke:"grey"},null,-1)),l[20]||(l[20]=a("text",{"text-anchor":"end",x:"620",y:"238","font-size":"0.5rem",fill:"grey"},"Frontend Gradle plugin",-1)),e(r,{path:`${o.$config.public.paths.tasks}#cleanFrontend`},{default:s(()=>l[5]||(l[5]=[a("use",{x:"20",y:"90","xlink:href":"#cleanFrontendTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#checkFrontend`},{default:s(()=>l[6]||(l[6]=[a("use",{x:"170",y:"90","xlink:href":"#checkFrontendTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#assembleFrontend`},{default:s(()=>l[7]||(l[7]=[a("use",{x:"320",y:"90","xlink:href":"#assembleFrontendTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#publishFrontend`},{default:s(()=>l[8]||(l[8]=[a("use",{x:"500",y:"90","xlink:href":"#publishFrontendTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#installFrontend`},{default:s(()=>l[9]||(l[9]=[a("use",{x:"170",y:"150","xlink:href":"#installFrontendTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#installPackageManager`},{default:s(()=>l[10]||(l[10]=[a("use",{x:"170",y:"210","xlink:href":"#installPackageManagerTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#installCorepack`},{default:s(()=>l[11]||(l[11]=[a("use",{x:"20",y:"270","xlink:href":"#installCorepackTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#resolvePackageManager`},{default:s(()=>l[12]||(l[12]=[a("use",{x:"320",y:"270","xlink:href":"#resolvePackageManagerTask"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#installNode`},{default:s(()=>l[13]||(l[13]=[a("use",{x:"170",y:"330","xlink:href":"#installNodeTask"},null,-1)])),_:1},8,["path"]),l[21]||(l[21]=a("line",{x1:"0",y1:"370",x2:"640",y2:"370",stroke:"gainsboro","stroke-dasharray":"4 2"},null,-1)),l[22]||(l[22]=a("text",{"text-anchor":"middle",x:"320",y:"388","font-size":"0.5rem",fill:"darkgrey"}," Additional task types ",-1)),e(r,{path:`${o.$config.public.paths.tasks}#RunNode`},{default:s(()=>l[14]||(l[14]=[a("use",{x:"10",y:"400","xlink:href":"#RunNodeTaskType"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#RunCorepack`},{default:s(()=>l[15]||(l[15]=[a("use",{x:"140",y:"400","xlink:href":"#RunCorepackTaskType"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#RunNpm`},{default:s(()=>l[16]||(l[16]=[a("use",{x:"270",y:"400","xlink:href":"#RunNpmTaskType"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#RunPnpm`},{default:s(()=>l[17]||(l[17]=[a("use",{x:"400",y:"400","xlink:href":"#RunPnpmTaskType"},null,-1)])),_:1},8,["path"]),e(r,{path:`${o.$config.public.paths.tasks}#RunYarn`},{default:s(()=>l[18]||(l[18]=[a("use",{x:"530",y:"400","xlink:href":"#RunYarnTaskType"},null,-1)])),_:1},8,["path"])])]),l[25]||(l[25]=T('<use xlink:href="#gradleBasePlugin"></use><use xlink:href="#gradlePublishingPlugin"></use><use xlink:href="#frontendGradlePlugin"></use><line x1="80" y1="60" x2="80" y2="87" stroke="violet" marker-end="url(#arrow)"></line><line x1="230" y1="60" x2="230" y2="87" stroke="violet" marker-end="url(#arrow)"></line><line x1="380" y1="60" x2="380" y2="87" stroke="violet" marker-end="url(#arrow)"></line><line x1="560" y1="60" x2="560" y2="87" stroke="violet" marker-end="url(#arrow)"></line><line x1="500" y1="105" x2="443" y2="105" stroke="violet" marker-end="url(#arrow)"></line><path d="M 80 120 Q 80 133, 140 133 T 200 147" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="230" y1="120" x2="230" y2="147" stroke="violet" marker-end="url(#arrow)"></line><path d="M 380 120 Q 380 133, 320 133 T 260 147" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="230" y1="180" x2="230" y2="207" stroke="violet" marker-end="url(#arrow)"></line><path d="M 200 240 Q 200 253, 140 253 T 80 267" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><path d="M 260 240 Q 260 253, 320 253 T 380 267" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><path d="M 80 300 Q 80 313, 140 313 T 200 327" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><path d="M 380 300 Q 380 313, 320 313 T 260 327" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path>',16))])}const yn=Q(kn,[["render",Tn]]),bn={class:"text-center"},y="Gradle tasks to run node, corepack, npm, pnpm, yarn commands",b="Gradle tasks and types provided by the plugin to run node/corepack/npm/pnpm/yarn: integration, dependencies, customization, recommendations",Xn=U({__name:"node-corepack-npm-pnpm-yarn-tasks",setup(o){const l=q(),p=`${l.public.canonicalBaseUrl}${l.public.paths.tasks}`;return mn({link:[{rel:"canonical",href:p}]}),V({description:b,ogDescription:b,ogTitle:y,ogUrl:p,title:y}),(r,n)=>{const h=I,k=F,i=j,g=X,R=yn,m=H,N=_,C=W,z=J,P=K,A=Z,G=c,M=nn,O=en,Y=tn,E=sn,S=ln,D=an,B=rn,L=on,x=v,d=dn,f=un,u=pn;return w(),$("section",null,[e(h,null,{default:s(()=>n[0]||(n[0]=[t("Tasks")])),_:1}),n[82]||(n[82]=a("p",null,"The plugin registers multiple tasks, that may have dependencies with each other, and also with:",-1)),a("ul",null,[a("li",null,[n[5]||(n[5]=t(" Gradle lifecycle tasks defined in the ")),e(k,{path:"/current/userguide/base_plugin.html"},{default:s(()=>n[1]||(n[1]=[t("Gradle Base plugin")])),_:1}),n[6]||(n[6]=t(": ")),e(i,null,{default:s(()=>n[2]||(n[2]=[t("clean")])),_:1}),n[7]||(n[7]=t(", ")),e(i,null,{default:s(()=>n[3]||(n[3]=[t("assemble")])),_:1}),n[8]||(n[8]=t(", ")),e(i,null,{default:s(()=>n[4]||(n[4]=[t("check")])),_:1}),n[9]||(n[9]=t(". "))]),a("li",null,[n[11]||(n[11]=t(" Tasks defined in the Gradle Publishing plugin: ")),e(i,null,{default:s(()=>n[10]||(n[10]=[t("publish")])),_:1}),n[12]||(n[12]=t(". "))])]),e(g,null,{default:s(()=>n[13]||(n[13]=[t("Dependency tree")])),_:1}),a("p",bn,[e(R,{class:"w-100"})]),e(g,null,{default:s(()=>n[14]||(n[14]=[t("Reference")])),_:1}),a("section",null,[e(m,null,{default:s(()=>n[15]||(n[15]=[t("Built-in tasks")])),_:1}),e(N),e(C),e(z),e(P),e(A),e(G),e(M),e(O),e(Y)]),a("section",null,[e(m,null,{default:s(()=>n[16]||(n[16]=[t("Additional types")])),_:1}),e(E),e(S),e(D),e(B),e(L)]),a("section",null,[e(m,{id:"custom-environment-variables"},{default:s(()=>[n[19]||(n[19]=t(" Environment variables in ")),e(i,null,{default:s(()=>n[17]||(n[17]=[t("node")])),_:1}),n[20]||(n[20]=t("-based tasks ")),e(x,{path:`${r.$config.public.paths.tasks}#app`,class:"small text-info"},{default:s(()=>n[18]||(n[18]=[t("↑")])),_:1},8,["path"])]),_:1}),a("p",null,[n[29]||(n[29]=t(" The plugin provides multiple tasks or types that execute under-the-hood a ")),e(i,null,{default:s(()=>n[21]||(n[21]=[t("node")])),_:1}),n[30]||(n[30]=t("-based command: ")),e(d,{name:"installCorepack"}),n[31]||(n[31]=t(", ")),e(d,{name:"installPackageManager"}),n[32]||(n[32]=t(", ")),e(d,{name:"installFrontend"}),n[33]||(n[33]=t(", ")),e(d,{name:"cleanFrontend"}),n[34]||(n[34]=t(", ")),e(d,{name:"assembleFrontend"}),n[35]||(n[35]=t(", ")),e(d,{name:"checkFrontend"}),n[36]||(n[36]=t(", ")),e(d,{name:"publishFrontend"}),n[37]||(n[37]=t(", ")),e(d,{name:"RunNode"}),n[38]||(n[38]=t(", ")),e(d,{name:"RunCorepack"}),n[39]||(n[39]=t(", ")),e(d,{name:"RunNpm"}),n[40]||(n[40]=t(", ")),e(d,{name:"RunPnpm"}),n[41]||(n[41]=t(", ")),e(d,{name:"RunYarn"}),n[42]||(n[42]=t(". These tasks forward environment variables visible by the Gradle process to ")),e(i,null,{default:s(()=>n[22]||(n[22]=[t("node")])),_:1}),n[43]||(n[43]=t(", ")),e(i,null,{default:s(()=>n[23]||(n[23]=[t("corepack")])),_:1}),n[44]||(n[44]=t(", ")),e(i,null,{default:s(()=>n[24]||(n[24]=[t("npm")])),_:1}),n[45]||(n[45]=t(", ")),e(i,null,{default:s(()=>n[25]||(n[25]=[t("pnpm")])),_:1}),n[46]||(n[46]=t(", ")),e(i,null,{default:s(()=>n[26]||(n[26]=[t("yarn")])),_:1}),n[47]||(n[47]=t(" commands. These variables may be overwritten and/or new variables may be added to the environment forwarded to the command. If you need to alter the ")),e(i,null,{default:s(()=>n[27]||(n[27]=[t("PATH")])),_:1}),n[48]||(n[48]=t(" environment variable, and though this is generally a rare situation, keep in mind the plugin adds its own paths so as the relevant ")),e(i,null,{default:s(()=>n[28]||(n[28]=[t("node")])),_:1}),n[49]||(n[49]=t(" executable can be found. "))]),n[81]||(n[81]=a("p",null,"Example hereafter shows how to customize the environment for a given task:",-1)),e(f,null,{groovy:s(()=>[a("pre",null,[e(i,null,{default:s(()=>n[50]||(n[50]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AssembleTask
tasks.named('assembleFrontend', AssembleTask) {
    environmentVariables.put('NODE_OPTIONS', '--max_old_space_size=50 --title="Assembling frontend"')
}`)])),_:1})])]),kotlin:s(()=>[a("pre",null,[e(i,null,{default:s(()=>n[51]||(n[51]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AssembleTask
tasks.named<AssembleTask>("assembleFrontend") {
    environmentVariables.put("NODE_OPTIONS", "--max_old_space_size=50 --title=\\"Assembling frontend\\"")
}`)])),_:1})])]),_:1}),a("p",null,[n[53]||(n[53]=t(" Example hereafter shows how to apply an environment variable to all tasks running a ")),e(i,null,{default:s(()=>n[52]||(n[52]=[t("node")])),_:1}),n[54]||(n[54]=t("-based command: "))]),e(f,null,{groovy:s(()=>[a("pre",null,[e(i,null,{default:s(()=>n[55]||(n[55]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AbstractRunCommandTask
tasks.withType(AbstractRunCommandTask) {
    environmentVariables.put('NODE_DEBUG', 'module')
}`)])),_:1})])]),kotlin:s(()=>[a("pre",null,[e(i,null,{default:s(()=>n[56]||(n[56]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AbstractRunCommandTask
tasks.withType<AbstractRunCommandTask> {
    environmentVariables.put("NODE_DEBUG", "module")
}`)])),_:1})])]),_:1}),e(m,{id:"builtin-tasks-customization"},{default:s(()=>[n[58]||(n[58]=t(" Built-in tasks customization ")),e(x,{path:`${r.$config.public.paths.tasks}#app`,class:"small text-info"},{default:s(()=>n[57]||(n[57]=[t("↑")])),_:1},8,["path"])]),_:1}),a("p",null,[n[60]||(n[60]=t(" If you need to customize the plugin's built-in tasks (e.g. declare additional I/O or dependencies), it is important to conform to the ")),e(k,{path:"/current/userguide/task_configuration_avoidance.html#sec:old_vs_new_configuration_api_overview"},{default:s(()=>n[59]||(n[59]=[t("Configuration avoidance API")])),_:1}),n[61]||(n[61]=t(": use references of task providers instead of references of tasks, and continue taking advantage of the lazy configuration strategy the plugin already implements. The examples below introduce the implementation expected with simple cases: "))]),e(f,null,{groovy:s(()=>[a("pre",null,[e(i,null,{default:s(()=>[e(u,null,{default:s(()=>n[62]||(n[62]=[t(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)])),_:1}),n[66]||(n[66]=t(`
installFrontend {
    dependsOn 'otherTask'
    inputs.files('package.json', 'package-lock.json')
}
`)),e(u,null,{default:s(()=>n[63]||(n[63]=[t(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later. Let's also reinforce this behaviour
// by using its provider to retrieve the task.`)])),_:1}),n[67]||(n[67]=t(`
tasks.named('installFrontend') {
    dependsOn tasks.named('otherTask')
    inputs.files('package.json', 'package-lock.json')
}

`)),e(u,null,{default:s(()=>n[64]||(n[64]=[t(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)])),_:1}),n[68]||(n[68]=t(`
task eagerTask {
    dependsOn 'installFrontend'
}
`)),e(u,null,{default:s(()=>n[65]||(n[65]=[t(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)])),_:1}),n[69]||(n[69]=t(`
tasks.register('lazyTask') {
    dependsOn tasks.named('installFrontend')
}`))]),_:1})])]),kotlin:s(()=>[a("pre",null,[e(i,null,{default:s(()=>[e(u,null,{default:s(()=>n[70]||(n[70]=[t(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)])),_:1}),n[74]||(n[74]=t(`
installFrontend {
    dependsOn("otherTask")
    inputs.files("package.json", "package-lock.json")
}
`)),e(u,null,{default:s(()=>n[71]||(n[71]=[t(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later.`)])),_:1}),n[75]||(n[75]=t(`
tasks.named<InstallFrontendTask>("installFrontend") {
    dependsOn(tasks.named("otherTask"))
    inputs.files("package.json", "package-lock.json")
}

`)),e(u,null,{default:s(()=>n[72]||(n[72]=[t(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)])),_:1}),n[76]||(n[76]=t(`
task eagerTask {
    dependsOn("installFrontend")
}
`)),e(u,null,{default:s(()=>n[73]||(n[73]=[t(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)])),_:1}),n[77]||(n[77]=t(`
tasks.register("lazyTask") {
    dependsOn(tasks.named("installFrontend"))
}`))]),_:1})])]),_:1}),a("p",null,[n[79]||(n[79]=t(" If your application uses the legacy syntax, you may find further instructions to migrate to the modern syntax in this Gradle ")),e(k,{path:"/current/userguide/task_configuration_avoidance.html#sec:task_configuration_avoidance_migration_guidelines"},{default:s(()=>n[78]||(n[78]=[t("guide")])),_:1}),n[80]||(n[80]=t(". "))])])])}}});export{Xn as default};
