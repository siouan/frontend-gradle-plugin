import{_}from"./D8YflT2D.js";import{_ as k}from"./BlmrrCf-.js";import{_ as b}from"./d46FRxqf.js";import{_ as g}from"./bFTfBRhu.js";import{_ as v}from"./DqVRC5Wu.js";import{a as F,_ as p}from"./DvfPIEfj.js";import{_ as u}from"./DlAUqK2U.js";import{o as a,e as m,w as r,a as o,d as n,b as e,c as P}from"./Bt6BF8tg.js";const $={};function N(f,t){const l=_,s=k,d=b,i=g,y=v,w=F,x=p;return a(),m(x,{name:"nodeDistributionProvided",type:"boolean","default-value":"false","task-names":["installNode","resolvePackageManager","installPackageManager","installFrontend","cleanFrontend","assembleFrontend","checkFrontend","publishFrontend"]},{default:r(()=>[o("p",null,[t[0]||(t[0]=n("Whether the ")),e(l),t[1]||(t[1]=n(" distribution is already provided, and shall not be downloaded."))]),o("ol",null,[o("li",null,[t[3]||(t[3]=n(" When ")),e(s,null,{default:r(()=>t[2]||(t[2]=[n("false")])),_:1}),t[4]||(t[4]=n(", task ")),e(d,{name:"installNode"}),t[5]||(t[5]=n(" downloads a ")),e(l),t[6]||(t[6]=n(" distribution using properties ")),e(i,{name:"nodeVersion"}),t[7]||(t[7]=n(", ")),e(i,{name:"nodeDistributionUrlRoot"}),t[8]||(t[8]=n(", ")),e(i,{name:"nodeDistributionUrlPathPattern"}),t[9]||(t[9]=n(", and installs it in the directory pointed by the ")),e(i,{name:"nodeInstallDirectory"}),t[10]||(t[10]=n(" property. "))]),o("li",null,[o("p",null,[t[13]||(t[13]=n(" When ")),e(s,null,{default:r(()=>t[11]||(t[11]=[n("true")])),_:1}),t[14]||(t[14]=n(", the plugin relies on the directory pointed by the ")),e(i,{name:"nodeInstallDirectory"}),t[15]||(t[15]=n(" property to locate the ")),e(l),t[16]||(t[16]=n(" distribution. Other ")),e(s,null,{default:r(()=>t[12]||(t[12]=[n("node*")])),_:1}),t[17]||(t[17]=n(" properties should not be used for clarity. "))]),e(w,null,{default:r(()=>[t[21]||(t[21]=n("CAUTION: globally installed distribution is modified when using the plugin and ")),e(y),t[22]||(t[22]=n(". Executables ")),e(s,null,{default:r(()=>t[18]||(t[18]=[n("npm")])),_:1}),t[23]||(t[23]=n(", ")),e(s,null,{default:r(()=>t[19]||(t[19]=[n("pnpm")])),_:1}),t[24]||(t[24]=n(", ")),e(s,null,{default:r(()=>t[20]||(t[20]=[n("yarn")])),_:1}),t[25]||(t[25]=n(" that may already exists within ")),e(l),t[26]||(t[26]=n(" install directory are overwritten when task ")),e(d,{name:"installPackageManager"}),t[27]||(t[27]=n(" is run."))]),_:1})])])]),_:1})}const Q=u($,[["render",N]]),I={};function M(f,t){const l=_,s=g,d=p;return a(),m(d,{name:"nodeInstallDirectory",type:"java.io.File","default-value":'project.layout.projectDirectory.dir("node")',"task-names":["installNode","resolvePackageManager","installPackageManager","installFrontend","cleanFrontend","assembleFrontend","checkFrontend","publishFrontend"]},{default:r(()=>[o("p",null,[t[0]||(t[0]=n(" Directory where the ")),e(l),t[1]||(t[1]=n(" distribution shall be installed or is already installed (depending on the value of property ")),e(s,{name:"nodeDistributionProvided"}),t[2]||(t[2]=n("). "))])]),_:1})}const h=u(I,[["render",M]]),j={};function L(f,t){const l=k,s=_,d=v,i=b,y=p;return a(),m(y,{name:"corepackVersion",type:"java.lang.String",required:!1,"default-value":null,example:"0.28.2","task-names":["installCorepack"]},{default:r(()=>[o("p",null,[t[2]||(t[2]=n(" When ")),e(l,null,{default:r(()=>t[0]||(t[0]=[n("null")])),_:1}),t[3]||(t[3]=n(", the ")),e(s),t[4]||(t[4]=n(" distribution is not touched and the plugin relies on the default version of ")),e(d),t[5]||(t[5]=n(" embedded in the distribution. Setting this property to a non-")),e(l,null,{default:r(()=>t[1]||(t[1]=[n("null")])),_:1}),t[6]||(t[6]=n(" value should not be necessary most of the time, since Corepack is expected to be more and more stable. But situations may exist where Corepack is not able to download the package manager correctly, and upgrading the default version embedded is the only way-out. There are 2 options when setting this property: "))]),o("ul",null,[o("li",null,[t[8]||(t[8]=n("Set a specific version with a value such as ")),e(l,null,{default:r(()=>t[7]||(t[7]=[n("X.Y.Z")])),_:1}),t[9]||(t[9]=n("."))]),o("li",null,[t[11]||(t[11]=n(" Set the latest version with the ")),e(l,null,{default:r(()=>t[10]||(t[10]=[n("latest")])),_:1}),t[12]||(t[12]=n(" value. Note that this will not update Corepack automatically if a newer version is released after the ")),e(i,{name:"installCorepack"}),t[13]||(t[13]=n(" task has run. "))])])]),_:1})}const c=u(j,[["render",L]]),C={},D={class:"text-center overflow-x-auto"},T={class:"text-monospace"},S={class:"text-primary"};function B(f,t){const l=_,s=k,d=b,i=g,y=p;return a(),m(y,{name:"maxDownloadAttempts",type:"java.lang.Integer","default-value":"1","task-names":["installNode"]},{default:r(()=>[o("p",null,[t[2]||(t[2]=n(" Based on this property, the plugin may retry to download the ")),e(l),t[3]||(t[3]=n(" distribution in case of error. A value of ")),e(s,null,{default:r(()=>t[0]||(t[0]=[n("1")])),_:1}),t[4]||(t[4]=n(" indicates the plugin will not retry download (one attempt only). This property applies to the distribution file download as well as its shasum file download (see task ")),e(d,{name:"installNode"}),t[5]||(t[5]=n(") used to validate the distribution file's integrity. Connectivity errors (distribution server reachability, network failures) and ")),e(i,{name:"retryHttpStatuses"},{default:r(()=>t[1]||(t[1]=[n("some HTTP errors")])),_:1}),t[6]||(t[6]=n(" trigger a retry of the download if more attempts are permitted thanks to this property. The retry strategy is based on the exponential backoff algorithm to determine the waiting time before the next download attempt: "))]),o("p",D,[(a(),P("math",T,[o("mrow",null,[o("mi",null,[e(s,null,{default:r(()=>t[7]||(t[7]=[n("waiting time (ms)")])),_:1})]),t[9]||(t[9]=o("mo",null,"=",-1)),t[10]||(t[10]=o("mi",{class:"text-info"},"min",-1)),t[11]||(t[11]=o("mo",{fence:"true"},"(",-1)),o("mi",null,[e(i,{name:"retryInitialIntervalMs"})]),t[12]||(t[12]=o("mo",{class:"text-danger"},"×",-1)),o("msup",null,[o("mi",S,[e(i,{name:"retryIntervalMultiplier"})]),t[8]||(t[8]=o("mrow",null,[o("mo",{fence:"true"},"("),o("mi",null,"attempted downloads"),o("mo",{class:"text-danger"},"−"),o("mn",null,"1"),o("mo",{fence:"true"},")")],-1))]),t[13]||(t[13]=o("mo",{separator:"true"},",",-1)),o("mi",null,[e(i,{name:"retryMaxIntervalMs"})]),t[14]||(t[14]=o("mo",{fence:"true"},")",-1))])]))])]),_:1})}const tt=u(C,[["render",B]]),A={};function V(f,t){const l=p;return a(),m(l,{name:"retryHttpStatuses",type:"java.util.Set<java.lang.Integer>","default-value":"[408, 429, 500, 502, 503, 504]","task-names":["installNode"]},{default:r(()=>t[0]||(t[0]=[o("p",null," This property identifies HTTP error responses that may trigger a new download attempt based on their status code. ",-1)])),_:1})}const nt=u(A,[["render",V]]),W={};function H(f,t){const l=g,s=p;return a(),m(s,{name:"retryInitialIntervalMs",type:"java.lang.Integer","default-value":"1000","task-names":["installNode"]},{default:r(()=>[o("p",null,[t[0]||(t[0]=n(" Interval (ms) between the first and the second download attempt, if permitted with the ")),e(l,{name:"maxDownloadAttempts"}),t[1]||(t[1]=n(" property. "))])]),_:1})}const et=u(W,[["render",H]]),U={};function E(f,t){const l=p;return a(),m(l,{name:"retryIntervalMultiplier",type:"java.lang.Double","default-value":"2.0","task-names":["installNode"]},{default:r(()=>t[0]||(t[0]=[o("p",null,"Multiplier used to compute exponential intervals between download attempts.",-1)])),_:1})}const ot=u(U,[["render",E]]),O={};function q(f,t){const l=g,s=p;return a(),m(s,{name:"retryMaxIntervalMs",type:"java.lang.Integer","default-value":"30000","task-names":["installNode"]},{default:r(()=>[o("p",null,[t[0]||(t[0]=n(" Maximum interval (ms) between each download attempts (see property ")),e(l,{name:"maxDownloadAttempts"}),t[1]||(t[1]=n("). "))])]),_:1})}const rt=u(O,[["render",q]]);export{Q as _,h as a,c as b,tt as c,nt as d,et as e,ot as f,rt as g};
