import{u as nn,a as en}from"./pxczNYIJ.js";import{_ as E}from"./BOufzIrK.js";import{a as D,_ as y}from"./c6tsABtt.js";import{_ as tn}from"./B2PBjYl0.js";import{_ as rn}from"./DlAUqK2U.js";import{o as f,c as Y,a,g as I,b as r,w as s,f as T,e as x,d as t,u as sn}from"./CPdTkOzn.js";import{_ as on}from"./s0z2JT-x.js";import{_ as an,a as ln,b as dn,c as pn,d as un,e as mn,f as kn,g as gn,h as fn}from"./BUXSMjPJ.js";import{_ as F}from"./1ktSNDAW.js";import{T as i,c as d,b}from"./tWA0xS_5.js";import{_ as C}from"./CU-mwjLd.js";import{_ as v}from"./BE7txKzx.js";import{u as yn}from"./CtXgoLjO.js";import"./BWaDds42.js";import"./D9-hoJGw.js";import"./DAH-GGfd.js";import"./D6leYXVZ.js";import"./D9YCSiNI.js";import"./L44TgIuP.js";import"./D0m3koNe.js";import"./D1UsOuFE.js";import"./B6alVScc.js";const Tn={},xn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 720 460"},bn={id:"gradlePlugins"},Rn={id:"frontendGradlePlugin"};function Fn(l,o){const k=E,n=D;return f(),Y("svg",xn,[a("defs",null,[o[34]||(o[34]=I('<g id="gradleTaskContainer"><rect width="100" height="30" fill="#00ff00" stroke="#000000" rx="3" ry="3"></rect></g><g id="frontendCommonTaskContainer"><rect width="100" height="30" fill="cyan" stroke="#000000" rx="3" ry="3"></rect></g><g id="frontendInstantTaskContainer"><rect width="100" height="30" fill="cyan" stroke="#000000" rx="3" ry="3"></rect></g><g id="frontendTaskTypeContainer"><rect width="100" height="30" fill="cyan" stroke="#000000" rx="3" ry="3"></rect></g><g id="cleanTaskShape"><use xlink:href="#gradleTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">clean</text></g><g id="checkTaskShape"><use xlink:href="#gradleTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">check</text></g><g id="assembleTaskShape"><use xlink:href="#gradleTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">assemble</text></g><g id="publishTaskShape"><use xlink:href="#gradleTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">publish</text></g><g id="installNodeTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">installNode</text></g><g id="installCorepackTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">installCorepack</text></g><g id="resolvePackageManagerTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">resolvePackageManager</text></g><g id="installPackageManagerTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">installPackageManager</text></g><g id="installFrontendTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">installFrontend</text></g><g id="cleanFrontendTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">cleanFrontend</text></g><g id="checkFrontendTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">checkFrontend</text></g><g id="assembleFrontendTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">assembleFrontend</text></g><g id="publishFrontendTaskShape"><use xlink:href="#frontendCommonTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">publishFrontend</text></g><g id="runNodeTaskShape"><use xlink:href="#frontendInstantTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">runNode</text></g><g id="runCorepackTaskShape"><use xlink:href="#frontendInstantTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">runCorepack</text></g><g id="runNpmTaskShape"><use xlink:href="#frontendInstantTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">runNpm</text></g><g id="runPnpmTaskShape"><use xlink:href="#frontendInstantTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">runPnpm</text></g><g id="runYarnTaskShape"><use xlink:href="#frontendInstantTaskContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">runYarn</text></g><g id="RunNodeTaskTypeShape"><use xlink:href="#frontendTaskTypeContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">RunNodeTaskType</text></g><g id="RunCorepackTaskTypeShape"><use xlink:href="#frontendTaskTypeContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">RunCorepackTaskType</text></g><g id="RunNpmTaskTypeShape"><use xlink:href="#frontendTaskTypeContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">RunNpmTaskType</text></g><g id="RunPnpmTaskTypeShape"><use xlink:href="#frontendTaskTypeContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">RunPnpmTaskType</text></g><g id="RunYarnTaskTypeShape"><use xlink:href="#frontendTaskTypeContainer"></use><text x="50" y="15" dominant-baseline="middle" text-anchor="middle" font-size="0.5rem">RunYarnTaskType</text></g><marker id="arrow" viewBox="0 0 10 10" refX="5" refY="5" markerWidth="6" markerHeight="6" orient="auto-start-reverse" fill="violet"><path d="M 0 0 L 10 5 L 0 10 z"></path></marker>',28)),a("g",bn,[o[3]||(o[3]=a("rect",{x:"0",y:"0",width:"480",height:"70",fill:"none",stroke:"grey",rx:"10"},null,-1)),o[4]||(o[4]=a("text",{x:"10",y:"18","dominant-baseline":"middle","text-anchor":"begin","font-size":"0.5rem",fill:"green",class:"text-uppercase"},"Gradle Base plugin",-1)),r(k,{path:"/current/userguide/base_plugin.html#sec:base_tasks",class:"text-decoration-none"},{default:s(()=>o[0]||(o[0]=[a("use",{x:"10",y:"30","xlink:href":"#cleanTaskShape"},null,-1)])),_:1}),r(k,{path:"/current/userguide/base_plugin.html#sec:base_tasks",class:"text-decoration-none"},{default:s(()=>o[1]||(o[1]=[a("use",{x:"130",y:"30","xlink:href":"#checkTaskShape"},null,-1)])),_:1}),r(k,{path:"/current/userguide/base_plugin.html#sec:base_tasks",class:"text-decoration-none"},{default:s(()=>o[2]||(o[2]=[a("use",{x:"250",y:"30","xlink:href":"#assembleTaskShape"},null,-1)])),_:1}),o[5]||(o[5]=a("line",{x1:"360",y1:"0",x2:"360",y2:"70",stroke:"gainsboro","stroke-dasharray":"4 2"},null,-1)),o[6]||(o[6]=a("text",{x:"370",y:"18","dominant-baseline":"middle","text-anchor":"begin","font-size":"0.5rem",fill:"green",class:"text-uppercase"},"Gradle Publishing plugin",-1)),o[7]||(o[7]=a("use",{x:"370",y:"30","xlink:href":"#publishTaskShape"},null,-1))]),a("g",Rn,[o[27]||(o[27]=a("rect",{x:"0",y:"90",width:"720",height:"370",fill:"none",stroke:"grey",rx:"10"},null,-1)),o[28]||(o[28]=a("text",{x:"10",y:"235","dominant-baseline":"middle","text-anchor":"begin","font-size":"0.5rem",fill:"green",class:"text-uppercase"},"Frontend Gradle plugin",-1)),r(n,{path:`${l.$config.public.paths.tasks}#cleanFrontend`,class:"text-decoration-none"},{default:s(()=>o[8]||(o[8]=[a("use",{x:"10",y:"100","xlink:href":"#cleanFrontendTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#checkFrontend`,class:"text-decoration-none"},{default:s(()=>o[9]||(o[9]=[a("use",{x:"130",y:"100","xlink:href":"#checkFrontendTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#assembleFrontend`,class:"text-decoration-none"},{default:s(()=>o[10]||(o[10]=[a("use",{x:"250",y:"100","xlink:href":"#assembleFrontendTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#publishFrontend`,class:"text-decoration-none"},{default:s(()=>o[11]||(o[11]=[a("use",{x:"370",y:"100","xlink:href":"#publishFrontendTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#installFrontend`,class:"text-decoration-none"},{default:s(()=>o[12]||(o[12]=[a("use",{x:"130",y:"180","xlink:href":"#installFrontendTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#installPackageManager`,class:"text-decoration-none"},{default:s(()=>o[13]||(o[13]=[a("use",{x:"130",y:"260","xlink:href":"#installPackageManagerTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#resolvePackageManager`,class:"text-decoration-none"},{default:s(()=>o[14]||(o[14]=[a("use",{x:"10",y:"340","xlink:href":"#resolvePackageManagerTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#installCorepack`,class:"text-decoration-none"},{default:s(()=>o[15]||(o[15]=[a("use",{x:"250",y:"340","xlink:href":"#installCorepackTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#installNode`,class:"text-decoration-none"},{default:s(()=>o[16]||(o[16]=[a("use",{x:"130",y:"420","xlink:href":"#installNodeTaskShape"},null,-1)])),_:1},8,["path"]),o[29]||(o[29]=a("text",{x:"470",y:"195","dominant-baseline":"middle","text-anchor":"end","font-size":"0.5rem",fill:"darkgrey"},"Lifecycle tasks",-1)),o[30]||(o[30]=a("line",{x1:"480",y1:"90",x2:"480",y2:"460",stroke:"gainsboro","stroke-dasharray":"4 2"},null,-1)),r(n,{path:`${l.$config.public.paths.tasks}#runNpm`,class:"text-decoration-none"},{default:s(()=>o[17]||(o[17]=[a("use",{x:"490",y:"220","xlink:href":"#runNpmTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#runPnpm`,class:"text-decoration-none"},{default:s(()=>o[18]||(o[18]=[a("use",{x:"490",y:"260","xlink:href":"#runPnpmTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#runYarn`,class:"text-decoration-none"},{default:s(()=>o[19]||(o[19]=[a("use",{x:"490",y:"300","xlink:href":"#runYarnTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#runCorepack`,class:"text-decoration-none"},{default:s(()=>o[20]||(o[20]=[a("use",{x:"490",y:"340","xlink:href":"#runCorepackTaskShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#runNode`,class:"text-decoration-none"},{default:s(()=>o[21]||(o[21]=[a("use",{x:"490",y:"420","xlink:href":"#runNodeTaskShape"},null,-1)])),_:1},8,["path"]),o[31]||(o[31]=a("text",{x:"540",y:"195","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.5rem",fill:"darkgrey"},"Instant tasks",-1)),o[32]||(o[32]=a("line",{x1:"600",y1:"90",x2:"600",y2:"460",stroke:"gainsboro","stroke-dasharray":"4 2"},null,-1)),r(n,{path:`${l.$config.public.paths.tasks}#RunNpmTaskType`,class:"text-decoration-none"},{default:s(()=>o[22]||(o[22]=[a("use",{x:"610",y:"220","xlink:href":"#RunNpmTaskTypeShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#RunPnpmTaskType`,class:"text-decoration-none"},{default:s(()=>o[23]||(o[23]=[a("use",{x:"610",y:"260","xlink:href":"#RunPnpmTaskTypeShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#RunYarnTaskType`,class:"text-decoration-none"},{default:s(()=>o[24]||(o[24]=[a("use",{x:"610",y:"300","xlink:href":"#RunYarnTaskTypeShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#RunCorepackTaskType`,class:"text-decoration-none"},{default:s(()=>o[25]||(o[25]=[a("use",{x:"610",y:"340","xlink:href":"#RunCorepackTaskTypeShape"},null,-1)])),_:1},8,["path"]),r(n,{path:`${l.$config.public.paths.tasks}#RunNodeTaskType`,class:"text-decoration-none"},{default:s(()=>o[26]||(o[26]=[a("use",{x:"610",y:"420","xlink:href":"#RunNodeTaskTypeShape"},null,-1)])),_:1},8,["path"]),o[33]||(o[33]=a("text",{x:"660",y:"195","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.5rem",fill:"darkgrey"},"Task types",-1))])]),o[35]||(o[35]=I('<use xlink:href="#gradlePlugins"></use><use xlink:href="#frontendGradlePlugin"></use><line x1="60" y1="60" x2="60" y2="97" stroke="violet" marker-end="url(#arrow)"></line><line x1="180" y1="60" x2="180" y2="97" stroke="violet" marker-end="url(#arrow)"></line><line x1="300" y1="60" x2="300" y2="97" stroke="violet" marker-end="url(#arrow)"></line><line x1="420" y1="60" x2="420" y2="97" stroke="violet" marker-end="url(#arrow)"></line><line x1="370" y1="115" x2="353" y2="115" stroke="violet" marker-end="url(#arrow)"></line><path d="M 60 130 Q 60 153, 110 153 T 160 177" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="180" y1="130" x2="180" y2="177" stroke="violet" marker-end="url(#arrow)"></line><path d="M 300 130 Q 300 153, 250 153 T 200 177" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="180" y1="210" x2="180" y2="257" stroke="violet" marker-end="url(#arrow)"></line><path d="M 160 290 Q 160 313, 110 313 T 60 337" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><path d="M 200 290 Q 200 313, 250 313 T 300 337" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><path d="M 60 370 Q 60 393, 110 393 T 160 417" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><path d="M 300 370 Q 300 393, 250 393 T 200 417" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><path d="M 490 235 Q 362 235, 360 255 T 233 275" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="600" y1="90" x2="600" y2="460" stroke="gainsboro" stroke-dasharray="4 2"></line><line x1="610" y1="235" x2="590" y2="235" stroke="red" stroke-dasharray="1 1"></line><line x1="490" y1="275" x2="233" y2="275" stroke="violet" marker-end="url(#arrow)"></line><line x1="610" y1="275" x2="590" y2="275" stroke="red" stroke-dasharray="1 1"></line><path d="M 490 315 Q 362 315, 360 295 T 233 275" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="610" y1="315" x2="590" y2="315" stroke="red" stroke-dasharray="1 1"></line><line x1="490" y1="355" x2="353" y2="355" stroke="violet" marker-end="url(#arrow)"></line><line x1="610" y1="355" x2="590" y2="355" stroke="red" stroke-dasharray="1 1"></line><line x1="490" y1="435" x2="233" y2="435" stroke="violet" marker-end="url(#arrow)"></line><line x1="610" y1="435" x2="590" y2="435" stroke="red" stroke-dasharray="1 1"></line>',26))])}const vn=rn(Tn,[["render",Fn]]),wn=T({__name:"run-node-task",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=F,m=b;return f(),x(m,{name:"runNode","depending-task-names":["installNode"],inputs:o,example:'gradle runNode "--args=--title Test script.js"'},{title:s(()=>[n[1]||(n[1]=t("Run an instant command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("node")])),_:1}),n[2]||(n[2]=t(" from Gradle command line"))]),description:s(()=>[a("p",null,[n[4]||(n[4]=t(" This task allows to execute a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("node")])),_:1}),n[5]||(n[5]=t(" command from a Gradle command line. To define custom inputs, outputs, or environment, it is recommended to register a custom task using ")),r(u,{name:"RunNodeTaskType"}),n[6]||(n[6]=t(" rather than overriding the default configuration of this task. "))])]),_:1})}}}),Cn=T({__name:"run-corepack-task",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=F,m=b;return f(),x(m,{name:"runCorepack","depending-task-names":["installCorepack"],inputs:o,example:'gradle runCorepack "--args=enable yarn"'},{title:s(()=>[n[1]||(n[1]=t("Run an instant command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("corepack")])),_:1}),n[2]||(n[2]=t(" from Gradle command line"))]),description:s(()=>[a("p",null,[n[4]||(n[4]=t(" This task allows to execute a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("corepack")])),_:1}),n[5]||(n[5]=t(" command from a Gradle command line. To define custom inputs, outputs, or environment, it is recommended to register a custom task using ")),r(u,{name:"RunCorepackTaskType"}),n[6]||(n[6]=t(" rather than overriding the default configuration of this task. "))])]),_:1})}}}),Sn=T({__name:"run-npm-task",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=F,m=b;return f(),x(m,{name:"runNpm","depending-task-names":["installPackageManager"],inputs:o,example:'gradle runNpm "--args=install jest -D"'},{title:s(()=>[n[1]||(n[1]=t("Run an instant command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("npm")])),_:1}),n[2]||(n[2]=t(" from Gradle command line"))]),description:s(()=>[a("p",null,[n[4]||(n[4]=t(" This task allows to execute a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("npm")])),_:1}),n[5]||(n[5]=t(" command from a Gradle command line. To define custom inputs, outputs, or environment, it is recommended to register a custom task using ")),r(u,{name:"RunNpmTaskType"}),n[6]||(n[6]=t(" rather than overriding the default configuration of this task. "))])]),_:1})}}}),Pn=T({__name:"run-pnpm-task",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=F,m=b;return f(),x(m,{name:"runPnpm","depending-task-names":["installPackageManager"],inputs:o,example:'gradle runPnpm "--args=add jest -D"'},{title:s(()=>[n[1]||(n[1]=t("Run an instant command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("pnpm")])),_:1}),n[2]||(n[2]=t(" from Gradle command line"))]),description:s(()=>[a("p",null,[n[4]||(n[4]=t(" This task allows to execute a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("pnpm")])),_:1}),n[5]||(n[5]=t(" command from a Gradle command line. To define custom inputs, outputs, or environment, it is recommended to register a custom task using ")),r(u,{name:"RunPnpmTaskType"}),n[6]||(n[6]=t(" rather than overriding the default configuration of this task. "))])]),_:1})}}}),Nn=T({__name:"run-yarn-task",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=F,m=b;return f(),x(m,{name:"runYarn","depending-task-names":["installPackageManager"],inputs:o,example:'gradle runYarn "--args=add jest -D"'},{title:s(()=>[n[1]||(n[1]=t("Run an instant command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("yarn")])),_:1}),n[2]||(n[2]=t(" from Gradle command line"))]),description:s(()=>[a("p",null,[n[4]||(n[4]=t(" This task allows to execute a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("yarn")])),_:1}),n[5]||(n[5]=t(" command from a Gradle command line. To define custom inputs, outputs, or environment, it is recommended to register a custom task using ")),r(u,{name:"RunYarnTaskType"}),n[6]||(n[6]=t(" rather than overriding the default configuration of this task. "))])]),_:1})}}}),In=T({__name:"run-node-task-type",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=C,m=v,p=b;return f(),x(p,{name:"RunNodeTaskType",type:"",inputs:o,"custom-environment-variables-supported":""},{title:s(()=>[n[1]||(n[1]=t("Register a task running a custom command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("node")])),_:1})]),description:s(()=>[a("p",null,[n[6]||(n[6]=t(" Task type ")),r(e,null,{default:s(()=>n[2]||(n[2]=[t("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNodeTaskType")])),_:1}),n[7]||(n[7]=t(" allows to register a custom task executing a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("node")])),_:1}),n[8]||(n[8]=t(" command. The ")),r(e,null,{default:s(()=>n[4]||(n[4]=[t("args")])),_:1}),n[9]||(n[9]=t(" property must be defined with the corresponding arguments, either in the build script or on the command line. The example hereafter shows how to register a task in a build script to output the version of ")),r(e,null,{default:s(()=>n[5]||(n[5]=[t("node")])),_:1}),n[10]||(n[10]=t(": "))]),r(m,{id:"run-node-example"},{groovy:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[12]||(n[12]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNodeTaskType
tasks.register('customNodeTask', RunNodeTaskType) {
    dependsOn 'installNode'
    `)),r(u,null,{default:s(()=>n[11]||(n[11]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn 'installFrontend'`)])),_:1}),n[13]||(n[13]=t(`
    args = '-v'
}`))]),_:1})])]),kotlin:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[15]||(n[15]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNodeTaskType
tasks.register<RunNodeTaskType>("customNodeTask") {
    dependsOn("installNode")
    `)),r(u,null,{default:s(()=>n[14]||(n[14]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn("installFrontend")`)])),_:1}),n[16]||(n[16]=t(`
    args.set("-v")
}`))]),_:1})])]),_:1}),a("p",null,[n[19]||(n[19]=t(" The ")),r(e,null,{default:s(()=>n[17]||(n[17]=[t("args")])),_:1}),n[20]||(n[20]=t(" property may be defined or overwritten on the command line: ")),r(e,null,{default:s(()=>n[18]||(n[18]=[t('gradle customNodeTask "--args=-v"')])),_:1})])]),_:1})}}}),On=T({__name:"run-corepack-task-type",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=v,m=b;return f(),x(m,{name:"RunCorepackTaskType",type:"",inputs:o,"custom-environment-variables-supported":""},{title:s(()=>[n[1]||(n[1]=t("Register a task running a custom command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("corepack")])),_:1})]),description:s(()=>[a("p",null,[n[6]||(n[6]=t(" Task type ")),r(e,null,{default:s(()=>n[2]||(n[2]=[t("org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepackTaskType")])),_:1}),n[7]||(n[7]=t(" allows to register a custom task executing a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("corepack")])),_:1}),n[8]||(n[8]=t(" command. The ")),r(e,null,{default:s(()=>n[4]||(n[4]=[t("args")])),_:1}),n[9]||(n[9]=t(" property must be defined with the corresponding arguments, either in the build script or on the command line. The example hereafter shows how to register a task in a build script to output the version of ")),r(e,null,{default:s(()=>n[5]||(n[5]=[t("corepack")])),_:1}),n[10]||(n[10]=t(": "))]),r(u,{id:"run-corepack-example"},{groovy:s(()=>[a("pre",null,[r(e,null,{default:s(()=>n[11]||(n[11]=[t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepackTaskType
tasks.register('customCorepackTask', RunCorepackTaskType) {
    dependsOn 'installCorepack'
    args = '-v'
}`)])),_:1})])]),kotlin:s(()=>[a("pre",null,[r(e,null,{default:s(()=>n[12]||(n[12]=[t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepackTaskType
tasks.register<RunCorepackTaskType>("customCorepackTask") {
    dependsOn("installCorepack")
    args.set("-v")
}`)])),_:1})])]),_:1}),a("p",null,[n[15]||(n[15]=t(" The ")),r(e,null,{default:s(()=>n[13]||(n[13]=[t("args")])),_:1}),n[16]||(n[16]=t(" property may be defined or overwritten on the command line: ")),r(e,null,{default:s(()=>n[14]||(n[14]=[t('gradle customCorepackTask "--args=-v"')])),_:1})])]),_:1})}}}),$n=T({__name:"run-npm-task-type",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=C,m=v,p=b;return f(),x(p,{name:"RunNpmTaskType",type:"",inputs:o,"custom-environment-variables-supported":""},{title:s(()=>[n[1]||(n[1]=t("Register a task running a custom command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("npm")])),_:1})]),description:s(()=>[a("p",null,[n[6]||(n[6]=t(" Task type ")),r(e,null,{default:s(()=>n[2]||(n[2]=[t("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpmTaskType")])),_:1}),n[7]||(n[7]=t(" allows to register a custom task executing a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("npm")])),_:1}),n[8]||(n[8]=t(" command. The ")),r(e,null,{default:s(()=>n[4]||(n[4]=[t("args")])),_:1}),n[9]||(n[9]=t(" property must be defined with the corresponding arguments, either in the build script or on the command line. The example hereafter shows how to register a task in a build script to output the version of ")),r(e,null,{default:s(()=>n[5]||(n[5]=[t("npm")])),_:1}),n[10]||(n[10]=t(": "))]),r(m,{id:"run-npm-example"},{groovy:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[12]||(n[12]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpmTaskType
tasks.register('customNpmTask', RunNpmTaskType) {
    dependsOn 'installPackageManager'
    `)),r(u,null,{default:s(()=>n[11]||(n[11]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn 'installFrontend'`)])),_:1}),n[13]||(n[13]=t(`
    args = '-v'
}`))]),_:1})])]),kotlin:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[15]||(n[15]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpmTaskType
tasks.register<RunNpmTaskType>("customNpmTask") {
    dependsOn("installPackageManager")
    `)),r(u,null,{default:s(()=>n[14]||(n[14]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn("installFrontend")`)])),_:1}),n[16]||(n[16]=t(`
    args.set("-v")
}`))]),_:1})])]),_:1}),a("p",null,[n[19]||(n[19]=t(" The ")),r(e,null,{default:s(()=>n[17]||(n[17]=[t("args")])),_:1}),n[20]||(n[20]=t(" property may be defined or overwritten on the command line: ")),r(e,null,{default:s(()=>n[18]||(n[18]=[t('gradle customNpmTask "--args=-v"')])),_:1})])]),_:1})}}}),En=T({__name:"run-pnpm-task-type",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=C,m=v,p=b;return f(),x(p,{name:"RunPnpmTaskType",type:"",inputs:o,"custom-environment-variables-supported":""},{title:s(()=>[n[1]||(n[1]=t("Register a task running a custom command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("pnpm")])),_:1})]),description:s(()=>[a("p",null,[n[6]||(n[6]=t(" Task type ")),r(e,null,{default:s(()=>n[2]||(n[2]=[t("org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpmTaskType")])),_:1}),n[7]||(n[7]=t(" allows to register a custom task executing a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("pnpm")])),_:1}),n[8]||(n[8]=t(" command. The ")),r(e,null,{default:s(()=>n[4]||(n[4]=[t("args")])),_:1}),n[9]||(n[9]=t(" property must be defined with the corresponding arguments, either in the build script or on the command line. The example hereafter shows how to register a task in a build script to output the version of ")),r(e,null,{default:s(()=>n[5]||(n[5]=[t("pnpm")])),_:1}),n[10]||(n[10]=t(": "))]),r(m,{id:"run-pnpm-example"},{groovy:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[12]||(n[12]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpmTaskType
tasks.register('customPnpmTask', RunPnpmTaskType) {
    dependsOn 'installPackageManager'
    `)),r(u,null,{default:s(()=>n[11]||(n[11]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn 'installFrontend'`)])),_:1}),n[13]||(n[13]=t(`
    args = '-v'
}`))]),_:1})])]),kotlin:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[15]||(n[15]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpmTaskType
tasks.register<RunPnpmTaskType>("customPnpmTask") {
    dependsOn("installPackageManager")
    `)),r(u,null,{default:s(()=>n[14]||(n[14]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn("installFrontend"`)])),_:1}),n[16]||(n[16]=t(`
    args.set("-v")
}`))]),_:1})])]),_:1}),a("p",null,[n[19]||(n[19]=t(" The ")),r(e,null,{default:s(()=>n[17]||(n[17]=[t("args")])),_:1}),n[20]||(n[20]=t(" property may be defined or overwritten on the command line: ")),r(e,null,{default:s(()=>n[18]||(n[18]=[t('gradle customPnpmTask "--args=-v"')])),_:1})])]),_:1})}}}),Dn=T({__name:"run-yarn-task-type",setup(l){const o=[{name:"packageJsonDirectory",type:i.FILE,binding:d.PROPERTY,property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:i.FILE,binding:d.PROPERTY,property:"nodeInstallDirectory"},{name:"args",type:i.STRING,binding:d.USER,commandLineOptionSupported:!0}];return(k,n)=>{const e=y,u=C,m=v,p=b;return f(),x(p,{name:"RunYarnTaskType",type:"",inputs:o,"custom-environment-variables-supported":""},{title:s(()=>[n[1]||(n[1]=t("Register a task running a custom command with ")),r(e,null,{default:s(()=>n[0]||(n[0]=[t("yarn")])),_:1})]),description:s(()=>[a("p",null,[n[6]||(n[6]=t(" Task type ")),r(e,null,{default:s(()=>n[2]||(n[2]=[t("org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarnTaskType")])),_:1}),n[7]||(n[7]=t(" allows to register a custom task executing a ")),r(e,null,{default:s(()=>n[3]||(n[3]=[t("yarn")])),_:1}),n[8]||(n[8]=t(" command. The ")),r(e,null,{default:s(()=>n[4]||(n[4]=[t("args")])),_:1}),n[9]||(n[9]=t(" property must be defined with the corresponding arguments, either in the build script or on the command line. The example hereafter shows how to register a task in a build script to output the version of ")),r(e,null,{default:s(()=>n[5]||(n[5]=[t("yarn")])),_:1}),n[10]||(n[10]=t(": "))]),r(m,{id:"run-yarn-example"},{groovy:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[12]||(n[12]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarnTaskType
tasks.register('customYarnTask', RunYarnTaskType) {
    dependsOn 'installPackageManager'
    `)),r(u,null,{default:s(()=>n[11]||(n[11]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn 'installFrontend'`)])),_:1}),n[13]||(n[13]=t(`
    args = '-v'
}`))]),_:1})])]),kotlin:s(()=>[a("pre",null,[r(e,null,{default:s(()=>[n[15]||(n[15]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarnTaskType
tasks.register<RunYarnTaskType>("customYarnTask") {
    dependsOn("installPackageManager")
    `)),r(u,null,{default:s(()=>n[14]||(n[14]=[t(`// If the command requires additional dependencies located in the 'package.json' file,
    // replace the previous task dependency with the one hereafter:
    //dependsOn("installFrontend")`)])),_:1}),n[16]||(n[16]=t(`
    args.set("-v")
}`))]),_:1})])]),_:1}),a("p",null,[n[19]||(n[19]=t(" The ")),r(e,null,{default:s(()=>n[17]||(n[17]=[t("args")])),_:1}),n[20]||(n[20]=t(" property may be defined or overwritten on the command line: ")),r(e,null,{default:s(()=>n[18]||(n[18]=[t('gradle customYarnTask "--args=-v"')])),_:1})])]),_:1})}}}),O="Gradle tasks to run node, corepack, npm, pnpm, yarn commands",$="Gradle tasks and types provided by the plugin to run node/corepack/npm/pnpm/yarn: integration, dependencies, customization, recommendations",ee=T({__name:"node-corepack-npm-pnpm-yarn-tasks",setup(l){const o=sn(),k=`${o.public.canonicalBaseUrl}${o.public.paths.tasks}`;return yn({link:[{rel:"canonical",href:k}]}),nn({description:$,ogDescription:$,ogTitle:O,ogUrl:k,title:O}),(n,e)=>{const u=en,m=E,p=y,P=tn,L=vn,w=on,G=an,z=ln,M=dn,A=pn,j=un,J=mn,U=kn,B=gn,q=fn,X=wn,Q=Cn,V=Sn,H=Pn,W=Nn,K=In,Z=On,h=$n,_=En,c=Dn,N=D,g=F,S=v,R=C;return f(),Y("section",null,[r(u,null,{default:s(()=>e[0]||(e[0]=[t("Tasks")])),_:1}),e[83]||(e[83]=a("p",null,"The plugin registers multiple tasks, that may have dependencies with each other, and also with:",-1)),a("ul",null,[a("li",null,[e[5]||(e[5]=t(" Gradle lifecycle tasks defined in the ")),r(m,{path:"/current/userguide/base_plugin.html"},{default:s(()=>e[1]||(e[1]=[t("Gradle Base plugin")])),_:1}),e[6]||(e[6]=t(": ")),r(p,null,{default:s(()=>e[2]||(e[2]=[t("clean")])),_:1}),e[7]||(e[7]=t(", ")),r(p,null,{default:s(()=>e[3]||(e[3]=[t("assemble")])),_:1}),e[8]||(e[8]=t(", ")),r(p,null,{default:s(()=>e[4]||(e[4]=[t("check")])),_:1}),e[9]||(e[9]=t(". "))]),a("li",null,[e[11]||(e[11]=t(" Tasks defined in the Gradle Publishing plugin: ")),r(p,null,{default:s(()=>e[10]||(e[10]=[t("publish")])),_:1}),e[12]||(e[12]=t(". "))])]),r(P,{id:"dependency-tree"},{default:s(()=>e[13]||(e[13]=[t("Dependency tree")])),_:1}),a("section",null,[r(L,{class:"mx-5 mb-3"})]),r(P,null,{default:s(()=>e[14]||(e[14]=[t("Reference")])),_:1}),a("section",null,[r(w,null,{default:s(()=>e[15]||(e[15]=[t("Lifecycle tasks")])),_:1}),r(G),r(z),r(M),r(A),r(j),r(J),r(U),r(B),r(q)]),a("section",null,[r(w,null,{default:s(()=>e[16]||(e[16]=[t("Instant tasks")])),_:1}),r(X),r(Q),r(V),r(H),r(W)]),a("section",null,[r(w,null,{default:s(()=>e[17]||(e[17]=[t("Task types")])),_:1}),r(K),r(Z),r(h),r(_),r(c)]),a("section",null,[r(w,{id:"custom-environment-variables"},{default:s(()=>[e[20]||(e[20]=t(" Environment variables in ")),r(p,null,{default:s(()=>e[18]||(e[18]=[t("node")])),_:1}),e[21]||(e[21]=t("-based tasks ")),r(N,{path:`${n.$config.public.paths.tasks}#app`,class:"small text-info"},{default:s(()=>e[19]||(e[19]=[t("↑")])),_:1},8,["path"])]),_:1}),a("p",null,[e[30]||(e[30]=t(" The plugin provides multiple tasks or types that execute under-the-hood a ")),r(p,null,{default:s(()=>e[22]||(e[22]=[t("node")])),_:1}),e[31]||(e[31]=t("-based command: ")),r(g,{name:"installCorepack"}),e[32]||(e[32]=t(", ")),r(g,{name:"installPackageManager"}),e[33]||(e[33]=t(", ")),r(g,{name:"installFrontend"}),e[34]||(e[34]=t(", ")),r(g,{name:"cleanFrontend"}),e[35]||(e[35]=t(", ")),r(g,{name:"assembleFrontend"}),e[36]||(e[36]=t(", ")),r(g,{name:"checkFrontend"}),e[37]||(e[37]=t(", ")),r(g,{name:"publishFrontend"}),e[38]||(e[38]=t(", ")),r(g,{name:"RunNodeTaskType"}),e[39]||(e[39]=t(", ")),r(g,{name:"RunCorepackTaskType"}),e[40]||(e[40]=t(", ")),r(g,{name:"RunNpmTaskType"}),e[41]||(e[41]=t(", ")),r(g,{name:"RunPnpmTaskType"}),e[42]||(e[42]=t(", ")),r(g,{name:"RunYarnTaskType"}),e[43]||(e[43]=t(". These tasks forward environment variables visible by the Gradle process to ")),r(p,null,{default:s(()=>e[23]||(e[23]=[t("node")])),_:1}),e[44]||(e[44]=t(", ")),r(p,null,{default:s(()=>e[24]||(e[24]=[t("corepack")])),_:1}),e[45]||(e[45]=t(", ")),r(p,null,{default:s(()=>e[25]||(e[25]=[t("npm")])),_:1}),e[46]||(e[46]=t(", ")),r(p,null,{default:s(()=>e[26]||(e[26]=[t("pnpm")])),_:1}),e[47]||(e[47]=t(", ")),r(p,null,{default:s(()=>e[27]||(e[27]=[t("yarn")])),_:1}),e[48]||(e[48]=t(" commands. These variables may be overwritten and/or new variables may be added to the environment forwarded to the command. If you need to alter the ")),r(p,null,{default:s(()=>e[28]||(e[28]=[t("PATH")])),_:1}),e[49]||(e[49]=t(" environment variable, and though this is generally a rare situation, keep in mind the plugin adds its own paths so as the relevant ")),r(p,null,{default:s(()=>e[29]||(e[29]=[t("node")])),_:1}),e[50]||(e[50]=t(" executable can be found. "))]),e[82]||(e[82]=a("p",null,"Example hereafter shows how to customize the environment for a given task:",-1)),r(S,null,{groovy:s(()=>[a("pre",null,[r(p,null,{default:s(()=>e[51]||(e[51]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AssembleTask
tasks.named('assembleFrontend', AssembleTask) {
    environmentVariables.put('NODE_OPTIONS', '--max_old_space_size=50 --title="Assembling frontend"')
}`)])),_:1})])]),kotlin:s(()=>[a("pre",null,[r(p,null,{default:s(()=>e[52]||(e[52]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AssembleTask
tasks.named<AssembleTask>("assembleFrontend") {
    environmentVariables.put("NODE_OPTIONS", "--max_old_space_size=50 --title=\\"Assembling frontend\\"")
}`)])),_:1})])]),_:1}),a("p",null,[e[54]||(e[54]=t(" Example hereafter shows how to apply an environment variable to all tasks running a ")),r(p,null,{default:s(()=>e[53]||(e[53]=[t("node")])),_:1}),e[55]||(e[55]=t("-based command: "))]),r(S,null,{groovy:s(()=>[a("pre",null,[r(p,null,{default:s(()=>e[56]||(e[56]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AbstractRunCommandTask
tasks.withType(AbstractRunCommandTask) {
    environmentVariables.put('NODE_DEBUG', 'module')
}`)])),_:1})])]),kotlin:s(()=>[a("pre",null,[r(p,null,{default:s(()=>e[57]||(e[57]=[t(`
import org.siouan.frontendgradleplugin.infrastructure.gradle.AbstractRunCommandTask
tasks.withType<AbstractRunCommandTask> {
    environmentVariables.put("NODE_DEBUG", "module")
}`)])),_:1})])]),_:1}),r(w,{id:"builtin-tasks-customization"},{default:s(()=>[e[59]||(e[59]=t(" Built-in tasks customization ")),r(N,{path:`${n.$config.public.paths.tasks}#app`,class:"small text-info"},{default:s(()=>e[58]||(e[58]=[t("↑")])),_:1},8,["path"])]),_:1}),a("p",null,[e[61]||(e[61]=t(" If you need to customize the plugin's built-in tasks (e.g. declare additional I/O or dependencies), it is important to conform to the ")),r(m,{path:"/current/userguide/task_configuration_avoidance.html#sec:old_vs_new_configuration_api_overview"},{default:s(()=>e[60]||(e[60]=[t("Configuration avoidance API")])),_:1}),e[62]||(e[62]=t(": use references of task providers instead of references of tasks, and continue taking advantage of the lazy configuration strategy the plugin already implements. The examples below introduce the implementation expected with simple cases: "))]),r(S,null,{groovy:s(()=>[a("pre",null,[r(p,null,{default:s(()=>[r(R,null,{default:s(()=>e[63]||(e[63]=[t(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)])),_:1}),e[67]||(e[67]=t(`
installFrontend {
    dependsOn 'otherTask'
    inputs.files('package.json', 'package-lock.json')
}
`)),r(R,null,{default:s(()=>e[64]||(e[64]=[t(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later. Let's also reinforce this behaviour
// by using its provider to retrieve the task.`)])),_:1}),e[68]||(e[68]=t(`
tasks.named('installFrontend') {
    dependsOn 'otherTask'
    inputs.files('package.json', 'package-lock.json')
}

`)),r(R,null,{default:s(()=>e[65]||(e[65]=[t(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)])),_:1}),e[69]||(e[69]=t(`
task eagerTask {
    dependsOn 'installFrontend'
}
`)),r(R,null,{default:s(()=>e[66]||(e[66]=[t(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)])),_:1}),e[70]||(e[70]=t(`
tasks.register('lazyTask') {
    dependsOn 'installFrontend'
}`))]),_:1})])]),kotlin:s(()=>[a("pre",null,[r(p,null,{default:s(()=>[r(R,null,{default:s(()=>e[71]||(e[71]=[t(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)])),_:1}),e[75]||(e[75]=t(`
installFrontend {
    dependsOn("otherTask")
    inputs.files("package.json", "package-lock.json")
}
`)),r(R,null,{default:s(()=>e[72]||(e[72]=[t(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later.`)])),_:1}),e[76]||(e[76]=t(`
tasks.named<InstallFrontendTask>("installFrontend") {
    dependsOn("otherTask")
    inputs.files("package.json", "package-lock.json")
}

`)),r(R,null,{default:s(()=>e[73]||(e[73]=[t(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)])),_:1}),e[77]||(e[77]=t(`
task eagerTask {
    dependsOn("installFrontend")
}
`)),r(R,null,{default:s(()=>e[74]||(e[74]=[t(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)])),_:1}),e[78]||(e[78]=t(`
tasks.register("lazyTask") {
    dependsOn("installFrontend")
}`))]),_:1})])]),_:1}),a("p",null,[e[80]||(e[80]=t(" If your application uses the legacy syntax, you may find further instructions to migrate to the modern syntax in this Gradle ")),r(m,{path:"/current/userguide/task_configuration_avoidance.html#sec:task_configuration_avoidance_migration_guidelines"},{default:s(()=>e[79]||(e[79]=[t("guide")])),_:1}),e[81]||(e[81]=t(". "))])])])}}});export{ee as default};
