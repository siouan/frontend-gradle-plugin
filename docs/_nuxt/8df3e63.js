(window.webpackJsonp=window.webpackJsonp||[]).push([[88,4,11,12,15,22,31,66,67,72],{316:function(e,t,n){"use strict";n.r(t);var r=n(0).a.component("fgp-info",{}),o=n(13),component=Object(o.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("p",{staticClass:"text-info px-2"},[t("i",{staticClass:"fas fa-info-circle mr-1"}),e._t("default")],2)}),[],!1,null,null,null);t.default=component.exports},318:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(84),l="https://nodejs.org",d=r.a.component("fgp-nodejs-link",{components:{fgpLink:o.default},props:{path:{type:String,default:"/"},label:{type:String,default:null}},computed:{internalLabel:function(){return this.label||this.$t("navigation.nodejs.label")},nodeUrl:function(){return this.path?"".concat(l).concat(this.path):l}}}),c=n(13),component=Object(c.a)(d,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-link",{attrs:{href:e.nodeUrl}},[e._v(e._s(e.internalLabel))])}),[],!1,null,null,null);t.default=component.exports},319:function(e,t,n){"use strict";n.r(t);n(49),n(38),n(48),n(19),n(86),n(39),n(87);var r=n(32),o=n(0),l=n(63);function d(object,e){var t=Object.keys(object);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(object);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(object,e).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?d(Object(source),!0).forEach((function(t){Object(r.a)(e,t,source[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(source)):d(Object(source)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(source,t))}))}return e}var f=o.a.component("fgp-gradle-scripts",{computed:c({groovyTabClass:function(){return{active:this.groovyTabVisible}},kotlinTabClass:function(){return{active:this.kotlinTabVisible}}},Object(l.b)("gradle-scripts",["groovyTabVisible","kotlinTabVisible"])),methods:c({},Object(l.c)("gradle-scripts",["setGroovyTabVisible","setKotlinTabVisible"]))}),k=n(13),component=Object(k.a)(f,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"mb-2"},[t("ul",{staticClass:"nav nav-tabs"},[t("li",{staticClass:"nav-item"},[t("nuxt-link",{staticClass:"nav-link",class:e.groovyTabClass,attrs:{to:"#",append:"",event:""},nativeOn:{click:function(t){return t.preventDefault(),e.setGroovyTabVisible.apply(null,arguments)}}},[e._v("Groovy")])],1),e._v(" "),t("li",{staticClass:"nav-item"},[t("nuxt-link",{staticClass:"nav-link",class:e.kotlinTabClass,attrs:{to:"#",append:"",event:""},nativeOn:{click:function(t){return t.preventDefault(),e.setKotlinTabVisible.apply(null,arguments)}}},[e._v("Kotlin")])],1)]),e._v(" "),t("div",{staticClass:"pt-3 pb-1 pl-3 bg-light"},[t("div",{directives:[{name:"show",rawName:"v-show",value:e.groovyTabVisible,expression:"groovyTabVisible"}]},[e._t("groovy")],2),e._v(" "),t("div",{directives:[{name:"show",rawName:"v-show",value:e.kotlinTabVisible,expression:"kotlinTabVisible"}]},[e._t("kotlin")],2)])])}),[],!1,null,null,null);t.default=component.exports},321:function(e,t,n){"use strict";n.r(t);var r=n(0).a.component("fgp-main-title",{}),o=n(13),component=Object(o.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("header",[t("h1",[e._t("default")],2)])}),[],!1,null,null,null);t.default=component.exports;installComponents(component,{Header:n(114).default})},323:function(e,t,n){"use strict";n(324),n(19),n(31);t.a={head:function(){var e={meta:[],link:[]};return e.title=this.htmlTitle?this.htmlTitle:"Frontend Gradle plugin",this.metaDescription&&e.meta.push({hid:"description",name:"description",content:this.metaDescription}),e.meta.push({name:"og:title",content:e.title}),e.meta.push({name:"og:description",content:e.meta.find((function(meta){return"description"===meta.name})).content}),this.linkCanonicalHref&&e.link.push({rel:"canonical",href:this.linkCanonicalHref}),e}}},324:function(e,t,n){"use strict";var r=n(2),o=n(88).find,l=n(141),d="find",c=!0;d in[]&&Array(1)[d]((function(){c=!1})),r({target:"Array",proto:!0,forced:c},{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),l(d)},326:function(e,t,n){"use strict";n.r(t);var r=n(0).a.component("fgp-sub-title",{}),o=n(13),component=Object(o.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("header",[t("h2",[e._t("default")],2)])}),[],!1,null,null,null);t.default=component.exports;installComponents(component,{Header:n(114).default})},328:function(e,t,n){"use strict";n.r(t);var r=n(0).a.component("fgp-code-comment",{}),o=n(13),component=Object(o.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("span",{staticClass:"text-muted"},[e._t("default")],2)}),[],!1,null,null,null);t.default=component.exports},332:function(e,t,n){"use strict";n.r(t);var r=n(0).a.component("fgp-sub-sub-title",{}),o=n(13),component=Object(o.a)(r,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("header",[t("h3",{staticClass:"px-2 rounded border bg-light"},[e._t("default")],2)])}),[],!1,null,null,null);t.default=component.exports;installComponents(component,{Header:n(114).default})},337:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(84),l=r.a.component("fgp-gradle-guides-link",{components:{fgpLink:o.default},props:{path:{type:String,default:null}}}),d=n(13),component=Object(d.a)(l,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-link",{attrs:{href:"https://guides.gradle.org".concat(e.path)}},[e._t("default")],2)}),[],!1,null,null,null);t.default=component.exports},375:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(327),l=n(310),d=n(313),c=n(308),f=r.a.component("fgp-assemble-frontend-task",{components:{fgpCode:code.default,fgpGradleTaskOutcomeLink:o.default,fgpPropertyLink:l.default,fgpTask:d.default,fgpTaskLink:c.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"assembleScript"}]}}}),k=n(13),component=Object(k.a)(f,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"assembleFrontend",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Assemble frontend artifacts")]},proxy:!0},{key:"skipConditions",fn:function(){return[e._v("\n        property "),t("fgp-property-link",{attrs:{name:"assembleScript"}}),e._v(" is not "),t("fgp-code",[e._v("null")]),e._v(".\n    ")]},proxy:!0},{key:"description",fn:function(){return[e._v("\n        This task allows to execute a build script as part of a Gradle build. The build script shall be defined in\n        the "),t("fgp-code",[e._v("package.json")]),e._v(" file, and the "),t("fgp-property-link",{attrs:{name:"assembleScript"}}),e._v(" property\n        shall be set with the corresponding\n        "),t("fgp-code",[e._v("npm")]),e._v("/"),t("fgp-code",[e._v("pnpm")]),e._v("/"),t("fgp-code",[e._v("yarn")]),e._v(" command. This task depends on\n        the "),t("fgp-task-link",{attrs:{name:"installFrontend"}}),e._v(" task, and is skipped if the\n        "),t("fgp-property-link",{attrs:{name:"assembleScript"}}),e._v(" property is "),t("fgp-code",[e._v("null")]),e._v(". Apart from direct\n        execution, the task is also executed when the Gradle lifecycle\n        "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/base_plugin.html#sec:base_tasks"}},[e._v("assemble")]),e._v(" task is executed.\n\n        "),t("div",{staticClass:"card my-3"},[t("div",{staticClass:"card-body"},[t("h5",{staticClass:"card-title"},[e._v("About\n                    "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/incremental_build.html"}},[e._v("incremental build")]),e._v("\n                    and up-to-date checks")],1),e._v(" "),t("p",{staticClass:"card-text"},[e._v("\n                    If you execute this task several times in a row, you may notice the\n                    "),t("fgp-code",[e._v("npm")]),e._v("/"),t("fgp-code",[e._v("pnpm")]),e._v("/"),t("fgp-code",[e._v("yarn")]),e._v(" command is always\n                    executed: Gradle does not skip the task based on a previous execution with the\n                    "),t("fgp-gradle-task-outcome-link",{attrs:{outcome:"SUCCESS"}}),e._v(" outcome. This is the expected behaviour\n                    because the task does not declare any input/output Gradle could track, to know the task is\n                    already "),t("fgp-gradle-task-outcome-link",{attrs:{outcome:"UP-TO-DATE"}}),e._v(" (e.g. unlike task\n                    "),t("fgp-task-link",{attrs:{name:"installNode"}}),e._v("). The task provides the ability to plug the developer's own\n                    Javascript build process to Gradle, and nothing more. Every Javascript build process is unique:\n                    it depends on the project, the languages involved (e.g. TypeScript, JSX, ECMA script, SASS,\n                    SCSS...), the directory layout, the build utilities (Webpack...), etc., chosen by the team.\n                    Moreover, some build utilities are already able to build artifacts incrementally. The plugin\n                    does not duplicate this logic. If you are about to tweak this task, take a look at these\n                    "),t("fgp-site-link",{attrs:{path:"#tweaking-tasks"}},[e._v("recommendations")]),e._v(".\n                ")],1)])])]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},376:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(310),l=n(313),d=n(308),c=r.a.component("fgp-check-frontend-task",{components:{fgpCode:code.default,fgpPropertyLink:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"checkScript"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"checkFrontend",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Check frontend application")]},proxy:!0},{key:"skipConditions",fn:function(){return[e._v("\n        property "),t("fgp-property-link",{attrs:{name:"checkScript"}}),e._v(" is not "),t("fgp-code",[e._v("null")]),e._v(".\n    ")]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n            This task may be used to integrate a check script into a Gradle build. The check script shall be defined\n            in the "),t("fgp-code",[e._v("package.json")]),e._v(" file, and the "),t("fgp-property-link",{attrs:{name:"checkScript"}}),e._v(" property\n            shall be set with the corresponding\n            "),t("fgp-code",[e._v("npm")]),e._v("/"),t("fgp-code",[e._v("pnpm")]),e._v("/"),t("fgp-code",[e._v("yarn")]),e._v(" command. A typical check\n            script may lint source files, execute tests, and/or perform additional analysis actions. This task\n            depends on the "),t("fgp-task-link",{attrs:{name:"installFrontend"}}),e._v(" task, and is skipped if the\n            "),t("fgp-property-link",{attrs:{name:"checkScript"}}),e._v(" property is "),t("fgp-code",[e._v("null")]),e._v(". Apart from direct\n            execution, the task is also executed when the Gradle lifecycle\n            "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/base_plugin.html#sec:base_tasks"}},[e._v("check")]),e._v("\n            task is executed.\n        ")],1)]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},377:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(310),l=n(313),d=n(308),c=r.a.component("fgp-clean-frontend-task",{components:{fgpCode:code.default,fgpPropertyLink:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"cleanScript"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"cleanFrontend",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Clean frontend artifacts")]},proxy:!0},{key:"skipConditions",fn:function(){return[e._v("\n        property "),t("fgp-property-link",{attrs:{name:"cleanScript"}}),e._v(" is not "),t("fgp-code",[e._v("null")]),e._v(".\n    ")]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n            This task does nothing by default, considering frontend artifacts (minimified Javascript, CSS, HTML\n            files...) are generated in the "),t("fgp-code",[e._v("${project.buildDir}")]),e._v(" directory. If it is not the\n            case, this task may be useful to clean the relevant directory. A clean script shall be defined in the\n            "),t("fgp-code",[e._v("package.json")]),e._v(" file, and the "),t("fgp-property-link",{attrs:{name:"cleanScript"}}),e._v(" property shall\n            be set with the corresponding\n            "),t("fgp-code",[e._v("npm")]),e._v("/"),t("fgp-code",[e._v("pnpm")]),e._v("/"),t("fgp-code",[e._v("yarn")]),e._v(" command. This task depends\n            on the "),t("fgp-task-link",{attrs:{name:"installFrontend"}}),e._v(" task, and is skipped if the\n            "),t("fgp-property-link",{attrs:{name:"cleanScript"}}),e._v(" property is "),t("fgp-code",[e._v("null")]),e._v(". Apart from direct\n            execution, the task is also executed when the Gradle lifecycle\n            "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/base_plugin.html#sec:base_tasks"}},[e._v("clean")]),e._v("\n            task is executed.\n        ")],1)]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},378:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(140),l=n(85),d=r.a.component("fgp-dependency-tree",{components:{fgpSiteLink:o.default},mixins:[l.a]}),c=n(13),component=Object(c.a)(d,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("svg",{attrs:{viewBox:"0 0 640 440",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[t("defs",[t("g",{attrs:{id:"gradleTask"}},[t("rect",{attrs:{width:"120",height:"30",fill:"chartreuse",stroke:"black",rx:"3",ry:"3"}})]),e._v(" "),t("g",{attrs:{id:"frontendTask"}},[t("rect",{attrs:{width:"120",height:"30",fill:"cyan",stroke:"black",rx:"3",ry:"3"}})]),e._v(" "),t("g",{attrs:{id:"frontendTaskType"}},[t("rect",{attrs:{width:"100",height:"30",fill:"gainsboro",stroke:"black",rx:"3",ry:"3"}})]),e._v(" "),t("g",{attrs:{id:"cleanTask"}},[t("use",{attrs:{"xlink:href":"#gradleTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("clean")])]),e._v(" "),t("g",{attrs:{id:"checkTask"}},[t("use",{attrs:{"xlink:href":"#gradleTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("check")])]),e._v(" "),t("g",{attrs:{id:"assembleTask"}},[t("use",{attrs:{"xlink:href":"#gradleTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("assemble")])]),e._v(" "),t("g",{attrs:{id:"publishTask"}},[t("use",{attrs:{"xlink:href":"#gradleTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("publish")])]),e._v(" "),t("g",{attrs:{id:"installNodeTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                installNode\n            ")])]),e._v(" "),t("g",{attrs:{id:"resolvePackageManagerTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                resolvePackageManager\n            ")])]),e._v(" "),t("g",{attrs:{id:"installPackageManagerTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                installPackageManager\n            ")])]),e._v(" "),t("g",{attrs:{id:"installFrontendTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                installFrontend\n            ")])]),e._v(" "),t("g",{attrs:{id:"cleanFrontendTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                cleanFrontend\n            ")])]),e._v(" "),t("g",{attrs:{id:"checkFrontendTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                checkFrontend\n            ")])]),e._v(" "),t("g",{attrs:{id:"assembleFrontendTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                assembleFrontend\n            ")])]),e._v(" "),t("g",{attrs:{id:"publishFrontendTask"}},[t("use",{attrs:{"xlink:href":"#frontendTask"}}),e._v(" "),t("text",{attrs:{x:"60",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("\n                publishFrontend\n            ")])]),e._v(" "),t("g",{attrs:{id:"RunNodeTaskType"}},[t("use",{attrs:{"xlink:href":"#frontendTaskType"}}),e._v(" "),t("text",{attrs:{x:"50",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("RunNode")])]),e._v(" "),t("g",{attrs:{id:"RunCorepackTaskType"}},[t("use",{attrs:{"xlink:href":"#frontendTaskType"}}),e._v(" "),t("text",{attrs:{x:"50",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("RunCorepack")])]),e._v(" "),t("g",{attrs:{id:"RunNpmTaskType"}},[t("use",{attrs:{"xlink:href":"#frontendTaskType"}}),e._v(" "),t("text",{attrs:{x:"50",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("RunNpm")])]),e._v(" "),t("g",{attrs:{id:"RunPnpmTaskType"}},[t("use",{attrs:{"xlink:href":"#frontendTaskType"}}),e._v(" "),t("text",{attrs:{x:"50",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("RunPnpm")])]),e._v(" "),t("g",{attrs:{id:"RunYarnTaskType"}},[t("use",{attrs:{"xlink:href":"#frontendTaskType"}}),e._v(" "),t("text",{attrs:{x:"50",y:"16","dominant-baseline":"middle","text-anchor":"middle","font-size":"0.6rem"}},[e._v("RunYarn")])]),e._v(" "),t("marker",{attrs:{id:"arrow",viewBox:"0 0 10 10",refX:"5",refY:"5",markerWidth:"6",markerHeight:"6",orient:"auto-start-reverse"}},[t("path",{attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})]),e._v(" "),t("g",{attrs:{id:"gradleBasePlugin"}},[t("rect",{attrs:{x:"0",y:"0",width:"460",height:"70",fill:"none",stroke:"grey"}}),e._v(" "),t("text",{attrs:{x:"20",y:"18","font-size":"0.5rem",fill:"grey"}},[e._v("Gradle Base plugin")]),e._v(" "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/base_plugin.html#sec:base_tasks"}},[t("use",{attrs:{x:"20",y:"30","xlink:href":"#cleanTask"}})]),e._v(" "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/base_plugin.html#sec:base_tasks"}},[t("use",{attrs:{x:"170",y:"30","xlink:href":"#checkTask"}})]),e._v(" "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/base_plugin.html#sec:base_tasks"}},[t("use",{attrs:{x:"320",y:"30","xlink:href":"#assembleTask"}})])],1),e._v(" "),t("g",{attrs:{id:"gradlePublishingPlugin"}},[t("rect",{attrs:{x:"480",y:"0",width:"160",height:"70",fill:"none",stroke:"grey"}}),e._v(" "),t("text",{attrs:{"text-anchor":"end",x:"620",y:"18","font-size":"0.5rem",fill:"grey"}},[e._v("Gradle Publishing plugin")]),e._v(" "),t("use",{attrs:{x:"500",y:"30","xlink:href":"#publishTask"}})]),e._v(" "),t("g",{attrs:{id:"frontendGradlePlugin"}},[t("rect",{attrs:{x:"0",y:"80",width:"640",height:"360",fill:"none",stroke:"grey"}}),e._v(" "),t("text",{attrs:{"text-anchor":"end",x:"620",y:"238","font-size":"0.5rem",fill:"grey"}},[e._v("Frontend Gradle plugin")]),e._v(" "),t("fgp-site-link",{attrs:{path:"#cleanFrontend"}},[t("use",{attrs:{x:"20",y:"90","xlink:href":"#cleanFrontendTask"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#checkFrontend"}},[t("use",{attrs:{x:"170",y:"90","xlink:href":"#checkFrontendTask"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#assembleFrontend"}},[t("use",{attrs:{x:"320",y:"90","xlink:href":"#assembleFrontendTask"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#publishFrontend"}},[t("use",{attrs:{x:"500",y:"90","xlink:href":"#publishFrontendTask"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#installFrontend"}},[t("use",{attrs:{x:"170",y:"150","xlink:href":"#installFrontendTask"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#installPackageManager"}},[t("use",{attrs:{x:"170",y:"210","xlink:href":"#installPackageManagerTask"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#resolvePackageManager"}},[t("use",{attrs:{x:"170",y:"270","xlink:href":"#resolvePackageManagerTask"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#installNode"}},[t("use",{attrs:{x:"170",y:"330","xlink:href":"#installNodeTask"}})]),e._v(" "),t("line",{attrs:{x1:"0",y1:"370",x2:"640",y2:"370",stroke:"gainsboro","stroke-dasharray":"4 2"}}),e._v(" "),t("text",{attrs:{"text-anchor":"middle",x:"320",y:"388","font-size":"0.5rem",fill:"darkgrey"}},[e._v("\n                Additional task types\n            ")]),e._v(" "),t("fgp-site-link",{attrs:{path:"#RunNode"}},[t("use",{attrs:{x:"10",y:"400","xlink:href":"#RunNodeTaskType"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#RunCorepack"}},[t("use",{attrs:{x:"140",y:"400","xlink:href":"#RunCorepackTaskType"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#RunNpm"}},[t("use",{attrs:{x:"270",y:"400","xlink:href":"#RunNpmTaskType"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#RunPnpm"}},[t("use",{attrs:{x:"400",y:"400","xlink:href":"#RunPnpmTaskType"}})]),e._v(" "),t("fgp-site-link",{attrs:{path:"#RunYarn"}},[t("use",{attrs:{x:"530",y:"400","xlink:href":"#RunYarnTaskType"}})])],1)]),e._v(" "),t("use",{attrs:{"xlink:href":"#gradleBasePlugin"}}),e._v(" "),t("use",{attrs:{"xlink:href":"#gradlePublishingPlugin"}}),e._v(" "),t("use",{attrs:{"xlink:href":"#frontendGradlePlugin"}}),e._v(" "),t("line",{attrs:{x1:"80",y1:"60",x2:"80",y2:"87",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"230",y1:"60",x2:"230",y2:"87",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"380",y1:"60",x2:"380",y2:"87",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"560",y1:"60",x2:"560",y2:"87",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("path",{attrs:{d:"M 80 120 Q 80 133, 140 133 T 200 147",stroke:"black",fill:"transparent","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"230",y1:"120",x2:"230",y2:"147",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("path",{attrs:{d:"M 380 120 Q 380 133, 320 133 T 260 147",stroke:"black",fill:"transparent","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"500",y1:"105",x2:"443",y2:"105",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"230",y1:"180",x2:"230",y2:"207",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"230",y1:"240",x2:"230",y2:"267",stroke:"black","marker-end":"url(#arrow)"}}),e._v(" "),t("line",{attrs:{x1:"230",y1:"300",x2:"230",y2:"327",stroke:"black","marker-end":"url(#arrow)"}})])}),[],!1,null,null,null);t.default=component.exports},379:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(337),l=n(327),d=n(316),c=n(318),f=n(313),k=r.a.component("fgp-install-node-task",{components:{fgpGradleGuidesLink:o.default,fgpGradleTaskOutcomeLink:l.default,fgpInfo:d.default,fgpNodejsLink:c.default,fgpTask:f.default},data:function(){return{inputs:[{name:"nodeVersion",type:"S",binding:"P",property:"nodeVersion"},{name:"nodeDistributionUrlRoot",type:"S",binding:"P",property:"nodeDistributionUrlRoot"},{name:"nodeDistributionUrlPathPattern",type:"S",binding:"P",property:"nodeDistributionUrlPathPattern"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"}],outputs:[{name:"nodeExecutableFile",type:"RF",binding:"C"}]}}}),v=n(13),component=Object(v.a)(k,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"installNode",inputs:e.inputs,outputs:e.outputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Install "),t("fgp-nodejs-link")]},proxy:!0},{key:"nodeExecutableFile",fn:function(){return[t("fgp-property-link",{attrs:{name:"nodeInstallDirectory"}}),t("fgp-code",[e._v("/node.exe")]),e._v(" or\n        "),t("fgp-property-link",{attrs:{name:"nodeInstallDirectory"}}),t("fgp-code",[e._v("/bin/node")]),e._v(" depending on the O/S.\n    ")]},proxy:!0},{key:"skipConditions",fn:function(){return[e._v("\n        property "),t("fgp-property-link",{attrs:{name:"nodeDistributionProvided"}}),e._v(" is "),t("fgp-code",[e._v("true")]),e._v(".\n    ")]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n            The task downloads a "),t("fgp-nodejs-link"),e._v(" distribution, verifies its integrity, and installs it in the\n            directory pointed by the "),t("fgp-property-link",{attrs:{name:"nodeInstallDirectory"}}),e._v(" property. The URL used to\n            download the distribution is resolved using the\n            "),t("fgp-property-link",{attrs:{name:"nodeDistributionUrlRoot"}}),e._v(" property and the\n            "),t("fgp-property-link",{attrs:{name:"nodeDistributionUrlPathPattern"}}),e._v(" property. Checking the distribution\n            integrity consists of downloading a file providing the distribution shasum. This file is expected to be\n            in the same remote web directory than the distribution archive. For example, if the distribution is\n            located at "),t("fgp-code",[e._v("https://nodejs.org/dist/vX.Y.Z/node-vX.Y.Z-win-x64.zip")]),e._v(", the plugin\n            attempts to download the shasum file located at\n            "),t("fgp-code",[e._v("https://nodejs.org/dist/vX.Y.Z/SHASUMS256.txt")]),e._v(". By default, the plugin relies on the\n            VM "),t("fgp-java-network-properties-link",[e._v("network properties")]),e._v(" to know if a\n            proxy server shall be used when downloading the distribution and the shasum. A custom proxy server may\n            also be used by defining "),t("fgp-property-link",{attrs:{name:"httpsProxyHost"}}),e._v(" property (respectively\n            "),t("fgp-property-link",{attrs:{name:"httpProxyHost"}}),e._v(" property) if the\n            "),t("fgp-property-link",{attrs:{name:"nodeDistributionUrlRoot"}}),e._v(" property uses the "),t("fgp-code",[e._v("https")]),e._v("\n            protocol (resp. uses the "),t("fgp-code",[e._v("http")]),e._v(" protocol).\n        ")],1),e._v(" "),t("p",[e._v("\n            If a "),t("fgp-nodejs-link"),e._v(" distribution is already installed in the system - either as a global\n            installation or as an installation performed by another Gradle (sub-)project - and shall be used instead\n            of a downloaded distribution, take a look at the\n            "),t("fgp-property-link",{attrs:{name:"nodeDistributionProvided"}}),e._v(" property instead: when "),t("fgp-code",[e._v("true")]),e._v(",\n            this task is ignored if invoked during a Gradle build, and its outcome will always be\n            "),t("fgp-gradle-task-outcome-link",{attrs:{outcome:"SKIPPED"}}),e._v(".\n        ")],1),e._v(" "),t("p",[e._v("\n            The task takes advantage of\n            "),t("fgp-gradle-guides-link",{attrs:{path:"/performance/#incremental_build"}},[e._v("Gradle incremental build")]),e._v(", and is not executed again unless one of its inputs/outputs changed. Consequently, if the task takes\n            part of a Gradle build, its outcome will be "),t("fgp-gradle-task-outcome-link",{attrs:{outcome:"UP-TO-DATE"}}),e._v(".\n        ")],1),e._v(" "),t("fgp-info",[e._v("\n            This task should not be executed directly. Gradle executes it if the build requires it.\n        ")])]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},380:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(316),l=n(313),d=n(308),c=r.a.component("fgp-install-package-manager-task",{components:{fgpCode:code.default,fgpInfo:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageManagerSpecificationFile",type:"RF",binding:"C"}],outputs:[{name:"packageManagerExecutableFile",type:"RF",binding:"C"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"installPackageManager",inputs:e.inputs,outputs:e.outputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Install package manager")]},proxy:!0},{key:"packageManagerSpecificationFile",fn:function(){return[t("fgp-property-link",{attrs:{name:"cacheDirectory"}}),t("fgp-code",[e._v("/resolvePackageManager/package-manager-specification.txt")])]},proxy:!0},{key:"packageManagerExecutableFile",fn:function(){return[t("fgp-property-link",{attrs:{name:"nodeInstallDirectory"}}),t("fgp-code",[e._v("/[npm|pnpm|yarn].cmd")]),e._v(" or\n        "),t("fgp-property-link",{attrs:{name:"nodeInstallDirectory"}}),t("fgp-code",[e._v("/bin/[npm|pnpm|yarn]")]),e._v(" depending on the O/S.\n    ")]},proxy:!0},{key:"skipConditions",fn:function(){return[e._v("\n        file "),t("fgp-property-link",{attrs:{name:"cacheDirectory"}}),t("fgp-code",[e._v("/resolvePackageManager/package-manager-executable-path.txt")]),e._v(" does not exist.\n    ")]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n            The task installs the package manager resolved with task "),t("fgp-task-link",{attrs:{name:"resolvePackageManager"}}),e._v(",\n            by executing command "),t("fgp-code",[e._v("corepack enable <package-manager>")]),e._v(".\n        ")],1),e._v(" "),t("p",[e._v("\n            The task takes advantage of\n            "),t("fgp-gradle-guides-link",{attrs:{path:"/performance/#incremental_build"}},[e._v("Gradle incremental build")]),e._v(", and is not executed again unless one of its\n            inputs/outputs changed. Consequently, if the task takes part of a Gradle build, its outcome will be\n            "),t("fgp-gradle-task-outcome-link",{attrs:{outcome:"UP-TO-DATE"}}),e._v(".\n        ")],1),e._v(" "),t("fgp-info",[e._v("\n            This task should not be executed directly. Gradle executes it if the build requires it.\n        ")])]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},381:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(310),l=n(313),d=n(308),c=r.a.component("fgp-publish-frontend-task",{components:{fgpCode:code.default,fgpPropertyLink:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"publishScript"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"publishFrontend",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Publish frontend artifacts")]},proxy:!0},{key:"skipConditions",fn:function(){return[e._v("\n        properties "),t("fgp-property-link",{attrs:{name:"assembleScript"}}),e._v(" and "),t("fgp-property-link",{attrs:{name:"publishScript"}}),e._v(" are\n        both not "),t("fgp-code",[e._v("null")]),e._v(".\n    ")]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n            This task may be used to integrate a publish script into a Gradle build. The publish script shall be\n            defined in the "),t("fgp-code",[e._v("package.json")]),e._v(" file, and the\n            "),t("fgp-property-link",{attrs:{name:"publishScript"}}),e._v(" property shall be set with the corresponding\n            "),t("fgp-code",[e._v("npm")]),e._v("/"),t("fgp-code",[e._v("pnpm")]),e._v("/"),t("fgp-code",[e._v("yarn")]),e._v(" command. This task depends\n            on the "),t("fgp-task-link",{attrs:{name:"assembleFrontend"}}),e._v(" task, and is skipped either if the\n            "),t("fgp-property-link",{attrs:{name:"assembleScript"}}),e._v(" property is "),t("fgp-code",[e._v("null")]),e._v(", or if the\n            "),t("fgp-property-link",{attrs:{name:"publishScript"}}),e._v(" property is "),t("fgp-code",[e._v("null")]),e._v(". Apart from direct\n            execution, the task is also executed when the Gradle "),t("fgp-code",[e._v("publish")]),e._v(" task is executed.\n        ")],1)]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},382:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(316),l=n(313),d=r.a.component("fgp-resolve-package-manager-task",{components:{fgpCode:code.default,fgpInfo:o.default,fgpTask:l.default},data:function(){return{inputs:[{name:"packageJsonFile",type:"RF",binding:"C"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"}],outputs:[{name:"packageManagerSpecificationFile",type:"RF",binding:"C"},{name:"packageManagerExecutablePathFile",type:"RF",binding:"C"}]}}}),c=n(13),component=Object(c.a)(d,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"resolvePackageManager",inputs:e.inputs,outputs:e.outputs,cacheable:""},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Resolve package manager")]},proxy:!0},{key:"packageJsonFile",fn:function(){return[t("fgp-property-link",{attrs:{name:"packageJsonDirectory"}}),t("fgp-code",[e._v("/package.json")])]},proxy:!0},{key:"packageManagerSpecificationFile",fn:function(){return[t("fgp-property-link",{attrs:{name:"cacheDirectory"}}),t("fgp-code",[e._v("/resolvePackageManager/package-manager-specification.txt")])]},proxy:!0},{key:"packageManagerExecutablePathFile",fn:function(){return[t("fgp-property-link",{attrs:{name:"cacheDirectory"}}),t("fgp-code",[e._v("/resolvePackageManager/package-manager-executable-path.txt")])]},proxy:!0},{key:"skipConditions",fn:function(){return[e._v("\n        file "),t("fgp-property-link",{attrs:{name:"packageJsonDirectory"}}),t("fgp-code",[e._v("/package.json")]),e._v(" does not exist.\n    ")]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n            The task identifies the name and the version of the package manager applicable to the project by parsing\n            the "),t("fgp-nodejs-link",{attrs:{path:"/api/packages.html#packagemanager",label:"packageManager"}}),e._v(" property located\n            in the "),t("fgp-code",[e._v("package.json")]),e._v(" file (pointed by the\n            "),t("fgp-property-link",{attrs:{name:"packageJsonDirectory"}}),e._v(" property). For example, if the\n            "),t("fgp-code",[e._v("package.json")]),e._v(" file contains "),t("fgp-code",[e._v('"packageManager": "npm@9.6.7"')]),e._v(",\n            the task resolves "),t("fgp-code",[e._v("npm")]),e._v(" as the name of the package manager, and\n            "),t("fgp-code",[e._v("9.6.7")]),e._v(" as its version.\n        ")],1),e._v(" "),t("p",[e._v("\n            The task takes advantage of\n            "),t("fgp-gradle-guides-link",{attrs:{path:"/performance/#incremental_build"}},[e._v("Gradle incremental build")]),e._v(", and is not executed again unless one of its\n            inputs/outputs changed. Consequently, if the task takes part of a Gradle build, its outcome will be\n            "),t("fgp-gradle-task-outcome-link",{attrs:{outcome:"UP-TO-DATE"}}),e._v(".\n        ")],1),e._v(" "),t("fgp-info",[e._v("\n            This task should not be executed directly. Gradle executes it if the build requires it.\n        ")])]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},383:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(319),l=n(313),d=r.a.component("fgp-run-corepack-task-type",{components:{fgpCode:code.default,fgpGradleScripts:o.default,fgpTask:l.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}]}}}),c=n(13),component=Object(c.a)(d,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"RunCorepack",type:"",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Run a custom command with "),t("fgp-code",[e._v("corepack")])]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n                The plugin provides task type\n                "),t("fgp-code",[e._v("org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepack")]),e._v(" that allows creating\n                a custom task to run a "),t("fgp-code",[e._v("corepack")]),e._v(" command. The "),t("fgp-code",[e._v("script")]),e._v(" property must\n                be set with the corresponding command. The code hereafter shows the configuration required to output the\n                version of "),t("fgp-code",[e._v("corepack")]),e._v(":\n            ")],1),e._v(" "),t("fgp-gradle-scripts",{staticClass:"my-3",attrs:{id:"run-corepack-example"},scopedSlots:e._u([{key:"groovy",fn:function(){return[t("pre",[t("fgp-code",[e._v("import org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepack\ntasks.register('corepackVersion', RunCorepack) {\n    script = '--version'\n}")])],1)]},proxy:!0},{key:"kotlin",fn:function(){return[t("pre",[t("fgp-code",[e._v('import org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepack\ntasks.register<RunCorepack>("corepackVersion") {\n    script.set("--version")\n}')])],1)]},proxy:!0}])})]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},384:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(319),l=n(313),d=n(308),c=r.a.component("fgp-run-node-task-type",{components:{fgpCode:code.default,fgpGradleScripts:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"RunNode",type:"",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Run a custom command with "),t("fgp-code",[e._v("node")])]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n                The plugin provides task type\n                "),t("fgp-code",[e._v("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode")]),e._v(" that allows creating\n                a custom task to run a JS script. The "),t("fgp-code",[e._v("script")]),e._v(" property must be set with the\n                corresponding command. Then, choose whether "),t("fgp-nodejs-link"),e._v(" only is required, or if additional\n                dependencies located in the "),t("fgp-code",[e._v("package.json")]),e._v(" file should be installed: make the task\n                either depends on "),t("fgp-task-link",{attrs:{name:"installNode"}}),e._v(" task or on\n                "),t("fgp-task-link",{attrs:{name:"installFrontend"}}),e._v(" task. The code hereafter shows the configuration required to\n                run a JS script:\n            ")],1),e._v(" "),t("fgp-gradle-scripts",{staticClass:"my-3",attrs:{id:"run-node-example"},scopedSlots:e._u([{key:"groovy",fn:function(){return[t("pre",[t("fgp-code",[e._v("import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode\ntasks.register('myScript', RunNode) {\n    "),t("fgp-code-comment",[e._v("// dependsOn tasks.named('installNode')\n    // dependsOn tasks.named('installFrontend')")]),e._v("\n    script = 'my-script.js'\n}")],1)],1)]},proxy:!0},{key:"kotlin",fn:function(){return[t("pre",[t("fgp-code",[e._v('import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode\ntasks.register<RunNode>("myScript") {\n    '),t("fgp-code-comment",[e._v('// dependsOn(tasks.named("installNode"))\n    // dependsOn(tasks.named("installFrontend"))')]),e._v('\n    script.set("my-script.js")\n}')],1)],1)]},proxy:!0}])})]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},385:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(319),l=n(313),d=n(308),c=r.a.component("fgp-run-npm-task-type",{components:{fgpCode:code.default,fgpGradleScripts:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"RunNpm",type:"",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Run a custom command with "),t("fgp-code",[e._v("npm")])]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n                The plugin provides task type\n                "),t("fgp-code",[e._v("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm")]),e._v(" that allows creating\n                a custom task to run a "),t("fgp-code",[e._v("npm")]),e._v(" command. The "),t("fgp-code",[e._v("script")]),e._v(" property must\n                be set with the corresponding command. Then, choose whether additional dependencies located in the\n                "),t("fgp-code",[e._v("package.json")]),e._v(" file should be installed: make the task either depends on\n                "),t("fgp-task-link",{attrs:{name:"installPackageManager"}}),e._v(" task or on "),t("fgp-task-link",{attrs:{name:"installFrontend"}}),e._v(" task.\n                The code hereafter shows the configuration required to output the version of "),t("fgp-code",[e._v("npm")]),e._v(":\n            ")],1),e._v(" "),t("fgp-gradle-scripts",{staticClass:"my-3",attrs:{id:"run-npm-example"},scopedSlots:e._u([{key:"groovy",fn:function(){return[t("pre",[t("fgp-code",[e._v("import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm\ntasks.register('npmVersion', RunNpm) {\n    "),t("fgp-code-comment",[e._v("// dependsOn tasks.named('installPackageManager')\n    // dependsOn tasks.named('installFrontend')")]),e._v("\n    script = '--version'\n}")],1)],1)]},proxy:!0},{key:"kotlin",fn:function(){return[t("pre",[t("fgp-code",[e._v('import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm\ntasks.register<RunNpm>("npmVersion") {\n    '),t("fgp-code-comment",[e._v('// dependsOn(tasks.named("installPackageManager"))\n    // dependsOn(tasks.named("installFrontend"))')]),e._v('\n    script.set("--version")\n}')],1)],1)]},proxy:!0}])})]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},386:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(319),l=n(313),d=n(308),c=r.a.component("fgp-run-pnpm-task-type",{components:{fgpCode:code.default,fgpGradleScripts:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"RunPnpm",type:"",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Run a custom command with "),t("fgp-code",[e._v("pnpm")])]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n                The plugin provides task type\n                "),t("fgp-code",[e._v("org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpm")]),e._v(" that allows creating\n                a custom task to run a "),t("fgp-code",[e._v("pnpm")]),e._v(" command. The "),t("fgp-code",[e._v("script")]),e._v(" property must\n                be set with the corresponding command. Then, choose whether additional dependencies located in the\n                "),t("fgp-code",[e._v("package.json")]),e._v(" file should be installed: make the task either depends on\n                "),t("fgp-task-link",{attrs:{name:"installPackageManager"}}),e._v(" task or on "),t("fgp-task-link",{attrs:{name:"installFrontend"}}),e._v(" task.\n                The code hereafter shows the configuration required to output the version of "),t("fgp-code",[e._v("pnpm")]),e._v(":\n            ")],1),e._v(" "),t("fgp-gradle-scripts",{staticClass:"my-3",attrs:{id:"run-pnpm-example"},scopedSlots:e._u([{key:"groovy",fn:function(){return[t("pre",[t("fgp-code",[e._v("import org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpm\ntasks.register('pnpmVersion', RunPnpm) {\n    "),t("fgp-code-comment",[e._v("// dependsOn tasks.named('installPackageManager')\n    // dependsOn tasks.named('installFrontend')")]),e._v("\n    script = '--version'\n}")],1)],1)]},proxy:!0},{key:"kotlin",fn:function(){return[t("pre",[t("fgp-code",[e._v('import org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpm\ntasks.register<RunPnpm>("pnpmVersion") {\n    '),t("fgp-code-comment",[e._v('// dependsOn(tasks.named("installPackageManager"))\n    // dependsOn(tasks.named("installFrontend"))')]),e._v('\n    script.set("--version")\n}')],1)],1)]},proxy:!0}])})]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},387:function(e,t,n){"use strict";n.r(t);var r=n(0),code=n(112),o=n(319),l=n(313),d=n(308),c=r.a.component("fgp-run-yarn-task-type",{components:{fgpCode:code.default,fgpGradleScripts:o.default,fgpTask:l.default,fgpTaskLink:d.default},data:function(){return{inputs:[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}]}}}),f=n(13),component=Object(f.a)(c,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("fgp-task",{attrs:{name:"RunYarn",type:"",inputs:e.inputs},scopedSlots:e._u([{key:"title",fn:function(){return[e._v("Run a custom command with "),t("fgp-code",[e._v("yarn")])]},proxy:!0},{key:"description",fn:function(){return[t("p",[e._v("\n                The plugin provides task type\n                "),t("fgp-code",[e._v("org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn")]),e._v(" that allows creating\n                a custom task to run a "),t("fgp-code",[e._v("yarn")]),e._v(" command. The "),t("fgp-code",[e._v("script")]),e._v(" property must\n                be set with the corresponding command. Then, choose whether additional dependencies located in the\n                "),t("fgp-code",[e._v("package.json")]),e._v(" file should be installed: make the task either depends on\n                "),t("fgp-task-link",{attrs:{name:"installPackageManager"}}),e._v(" task or on "),t("fgp-task-link",{attrs:{name:"installFrontend"}}),e._v(" task.\n                The code hereafter shows the configuration required to output the version of "),t("fgp-code",[e._v("yarn")]),e._v(":\n            ")],1),e._v(" "),t("fgp-gradle-scripts",{staticClass:"my-3",attrs:{id:"run-yarn-example"},scopedSlots:e._u([{key:"groovy",fn:function(){return[t("pre",[t("fgp-code",[e._v("import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn\ntasks.register('yarnVersion', RunYarn) {\n    "),t("fgp-code-comment",[e._v("// dependsOn tasks.named('installPackageManager')\n    // dependsOn tasks.named('installFrontend')")]),e._v("\n    script = '--version'\n}")],1)],1)]},proxy:!0},{key:"kotlin",fn:function(){return[t("pre",[t("fgp-code",[e._v('import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn\ntasks.register<RunYarn>("yarnVersion") {\n    '),t("fgp-code-comment",[e._v('// dependsOn(tasks.named("installPackageManager"))\n    // dependsOn(tasks.named("installFrontend"))')]),e._v('\n    script.set("--version")\n}')],1)],1)]},proxy:!0}])})]},proxy:!0}])})}),[],!1,null,null,null);t.default=component.exports},395:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(375),l=n(376),d=n(377),code=n(112),c=n(328),f=n(378),k=n(319),v=n(391),_=n(379),m=n(380),y=n(321),h=n(323),x=n(381),T=n(382),P=n(383),w=n(384),F=n(385),S=n(386),C=n(387),D=n(332),O=n(326),R=r.a.component("fgp-node-corepack-npm-pnpm-yarn-tasks",{components:{fgpAssembleFrontendTask:o.default,fgpCheckFrontendTask:l.default,fgpCleanFrontendTask:d.default,fgpCode:code.default,fgpCodeComment:c.default,fgpDependencyTree:f.default,fgpGradleScripts:k.default,fgpInstallFrontendTask:v.default,fgpInstallNodeTask:_.default,fgpInstallPackageManagerTask:m.default,fgpMainTitle:y.default,fgpPublishFrontendTask:x.default,fgpResolvePackageManagerTask:T.default,fgpRunCorepackTaskType:P.default,fgpRunNodeTaskType:w.default,fgpRunNpmTaskType:F.default,fgpRunPnpmTaskType:S.default,fgpRunYarnTaskType:C.default,fgpSubSubTitle:D.default,fgpSubTitle:O.default},mixins:[h.a],data:function(){return{htmlTitle:"Gradle tasks to run node, corepack, npm, pnpm, yarn commands",metaDescription:"Gradle tasks and types provided by the plugin to run node/corepack/npm/pnpm/yarn: integration, dependencies, customization, recommendations",linkCanonicalHref:"https://siouan.github.io/frontend-gradle-plugin/node-corepack-npm-pnpm-yarn-tasks/"}}}),j=n(13),component=Object(j.a)(R,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("section",[t("fgp-main-title",[e._v("Tasks")]),e._v(" "),t("p",[e._v("\n            The plugin registers multiple tasks, that may have dependencies with each other, and also with:\n        ")]),e._v(" "),t("ul",[t("li",[e._v("\n                Gradle lifecycle tasks defined in the\n                "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/base_plugin.html"}},[e._v("Gradle Base plugin")]),e._v(": "),t("fgp-code",[e._v("clean")]),e._v(", "),t("fgp-code",[e._v("assemble")]),e._v(", "),t("fgp-code",[e._v("check")]),e._v(".\n            ")],1),e._v(" "),t("li",[e._v("Tasks defined in the Gradle Publishing plugin: "),t("fgp-code",[e._v("publish")]),e._v(".")],1)]),e._v(" "),t("fgp-sub-title",[e._v("Dependency tree")]),e._v(" "),t("p",{staticClass:"text-center"},[t("fgp-dependency-tree",{staticClass:"w-100"})],1),e._v(" "),t("fgp-sub-title",[e._v("Reference")]),e._v(" "),t("section",[t("fgp-sub-sub-title",[e._v("Built-in tasks")]),e._v(" "),t("fgp-install-node-task"),e._v(" "),t("fgp-resolve-package-manager-task"),e._v(" "),t("fgp-install-package-manager-task"),e._v(" "),t("fgp-install-frontend-task"),e._v(" "),t("fgp-clean-frontend-task"),e._v(" "),t("fgp-assemble-frontend-task"),e._v(" "),t("fgp-check-frontend-task"),e._v(" "),t("fgp-publish-frontend-task")],1),e._v(" "),t("section",[t("fgp-sub-sub-title",[e._v("Additional types")]),e._v(" "),t("fgp-run-node-task-type"),e._v(" "),t("fgp-run-corepack-task-type"),e._v(" "),t("fgp-run-npm-task-type"),e._v(" "),t("fgp-run-pnpm-task-type"),e._v(" "),t("fgp-run-yarn-task-type")],1),e._v(" "),t("section",[t("fgp-sub-sub-title",{attrs:{id:"tweaking-tasks"}},[e._v("\n                Tweaking the built-in tasks\n                "),t("fgp-site-link",{staticClass:"small text-info",attrs:{path:"#app"}},[e._v("↑")])],1),e._v(" "),t("p",[e._v("\n                If you need to customize the plugin's built-in tasks (e.g. declare additional I/O or dependencies), it\n                is important to conform to the\n                "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/task_configuration_avoidance.html#sec:old_vs_new_configuration_api_overview"}},[e._v("Configuration avoidance API")]),e._v(": use references of task providers instead of references of tasks, and continue taking advantage of the\n                lazy configuration strategy the plugin already implements. The examples below introduce the\n                implementation expected with simple cases:\n            ")],1),e._v(" "),t("fgp-gradle-scripts",{staticClass:"mt-3",attrs:{id:"lazy-configuration-examples"},scopedSlots:e._u([{key:"groovy",fn:function(){return[t("pre",[t("fgp-code",[t("fgp-code-comment",[e._v("// Configuring a predefined task.\n// FORMER SYNTAX: task 'installFrontend' is immediately created and configured, as well as task\n// 'otherTask', even if both tasks are not executed.")]),e._v("\ninstallFrontend {\n    dependsOn 'otherTask'\n    inputs.files('package.json', 'package-lock.json')\n}\n"),t("fgp-code-comment",[e._v("// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.\n// Consequently, task 'otherTask' is also created and configured later. Let's also reinforce this behaviour\n// by using its provider to retrieve the task.")]),e._v("\ntasks.named('installFrontend') {\n    dependsOn tasks.named('otherTask')\n    inputs.files('package.json', 'package-lock.json')\n}\n\n"),t("fgp-code-comment",[e._v("// Defining a new task\n// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task\n// 'installFrontend', even if both tasks are not executed.")]),e._v("\ntask eagerTask {\n    dependsOn 'installFrontend'\n}\n"),t("fgp-code-comment",[e._v("// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.\n// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this\n// behaviour by using its provider to retrieve the task.")]),e._v("\ntasks.register('lazyTask') {\n    dependsOn tasks.named('installFrontend')\n}")],1)],1)]},proxy:!0},{key:"kotlin",fn:function(){return[t("pre",[t("fgp-code",[t("fgp-code-comment",[e._v("// Configuring a predefined task.\n// FORMER SYNTAX: task 'installFrontend' is immediately created and configured, as well as task\n// 'otherTask', even if both tasks are not executed.")]),e._v('\ninstallFrontend {\n    dependsOn("otherTask")\n    inputs.files("package.json", "package-lock.json")\n}\n'),t("fgp-code-comment",[e._v("// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.\n// Consequently, task 'otherTask' is also created and configured later.")]),e._v('\ntasks.named<InstallTask>("installFrontend") {\n    dependsOn(tasks.named("otherTask"))\n    inputs.files("package.json", "package-lock.json")\n}\n\n'),t("fgp-code-comment",[e._v("// Defining a new task\n// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task\n// 'installFrontend', even if both tasks are not executed.")]),e._v('\ntask eagerTask {\n    dependsOn("installFrontend")\n}\n'),t("fgp-code-comment",[e._v("// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.\n// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this\n// behaviour by using its provider to retrieve the task.")]),e._v('\ntasks.register("lazyTask") {\n    dependsOn(tasks.named("installFrontend"))\n}')],1)],1)]},proxy:!0}])}),e._v(" "),t("p",[e._v("\n                If your application uses the legacy syntax, you may find further instructions to migrate to the modern\n                syntax in this Gradle\n                "),t("fgp-gradle-docs-link",{attrs:{path:"/current/userguide/task_configuration_avoidance.html#sec:task_configuration_avoidance_migration_guidelines"}},[e._v("guide")]),e._v(".\n            ")],1)],1)],1)}),[],!1,null,null,null);t.default=component.exports}}]);