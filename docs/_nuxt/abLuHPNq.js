import{b,_ as k}from"./zck6Z6fF.js";import{g as u,o as c,f as m,w as e,l as R,d as n,b as t,a as r}from"./0eoLPSdn.js";import{_ as P}from"./BkGJl2ZQ.js";import{_ as y}from"./DysKOmB8.js";import{_ as F}from"./C-3WmzZG.js";import{_ as f}from"./Bag9INXo.js";import{b as h}from"./B6j9K0o-.js";const S=u({__name:"npm-docs-link",props:{path:{default:null},hoverStyleDisabled:{type:Boolean,default:!1}},setup(_){return(o,g)=>{const d=b;return c(),m(d,{href:`https://docs.npmjs.com${o.path}`,"hover-style-disabled":o.hoverStyleDisabled},{default:e(()=>[R(o.$slots,"default")]),_:3},8,["href","hover-style-disabled"])}}}),V=u({__name:"run-node-task-type",setup(_){const o=[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}];return(g,d)=>{const a=k,l=P,s=y,p=F,i=f,v=h;return c(),m(v,{name:"RunNode",type:"",inputs:o,"custom-environment-variables-supported":""},{title:e(()=>[n("Run a custom command with "),t(a,null,{default:e(()=>[n("node")]),_:1})]),description:e(()=>[r("p",null,[n(" The plugin provides task type "),t(a,null,{default:e(()=>[n("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode")]),_:1}),n(" that allows creating a custom task to run a JS script. The "),t(a,null,{default:e(()=>[n("script")]),_:1}),n(" property must be set with the corresponding command. Then, choose whether "),t(l),n(" only is required, or if additional dependencies located in the "),t(a,null,{default:e(()=>[n("package.json")]),_:1}),n(" file should be installed: make the task either depends on "),t(s,{name:"installNode"}),n(" task or on "),t(s,{name:"installFrontend"}),n(" task. The code hereafter shows the configuration required to run a JS script: ")]),t(i,{id:"run-node-example"},{groovy:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode
tasks.register('nodeVersion', RunNode) {
    `),t(p,null,{default:e(()=>[n(`// dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')`)]),_:1}),n(`
    script = '-v'
}`)]),_:1})])]),kotlin:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNode
tasks.register<RunNode>("nodeVersion") {
    `),t(p,null,{default:e(()=>[n(`// dependsOn(tasks.named("installNode"))
    // dependsOn(tasks.named("installFrontend"))`)]),_:1}),n(`
    script.set("-v")
}`)]),_:1})])]),_:1})]),_:1})}}}),J=u({__name:"run-corepack-task-type",setup(_){const o=[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}];return(g,d)=>{const a=k,l=f,s=h;return c(),m(s,{name:"RunCorepack",type:"",inputs:o,"custom-environment-variables-supported":""},{title:e(()=>[n("Run a custom command with "),t(a,null,{default:e(()=>[n("corepack")]),_:1})]),description:e(()=>[r("p",null,[n(" The plugin provides task type "),t(a,null,{default:e(()=>[n("org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepack")]),_:1}),n(" that allows creating a custom task to run a "),t(a,null,{default:e(()=>[n("corepack")]),_:1}),n(" command. The "),t(a,null,{default:e(()=>[n("script")]),_:1}),n(" property must be set with the corresponding command. The code hereafter shows the configuration required to output the version of "),t(a,null,{default:e(()=>[n("corepack")]),_:1}),n(": ")]),t(l,{id:"run-corepack-example"},{groovy:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepack
tasks.register('corepackVersion', RunCorepack) {
    dependsOn tasks.named('installCorepack')
    script = '-v'
}`)]),_:1})])]),kotlin:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunCorepack
tasks.register<RunCorepack>("corepackVersion") {
    dependsOn(tasks.named("installCorepack"))
    script.set("-v")
}`)]),_:1})])]),_:1})]),_:1})}}}),I=u({__name:"run-npm-task-type",setup(_){const o=[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}];return(g,d)=>{const a=k,l=y,s=F,p=f,i=h;return c(),m(i,{name:"RunNpm",type:"",inputs:o,"custom-environment-variables-supported":""},{title:e(()=>[n("Run a custom command with "),t(a,null,{default:e(()=>[n("npm")]),_:1})]),description:e(()=>[r("p",null,[n(" The plugin provides task type "),t(a,null,{default:e(()=>[n("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm")]),_:1}),n(" that allows creating a custom task to run a "),t(a,null,{default:e(()=>[n("npm")]),_:1}),n(" command. The "),t(a,null,{default:e(()=>[n("script")]),_:1}),n(" property must be set with the corresponding command. Then, choose whether additional dependencies located in the "),t(a,null,{default:e(()=>[n("package.json")]),_:1}),n(" file should be installed: make the task either depends on "),t(l,{name:"installPackageManager"}),n(" task or on "),t(l,{name:"installFrontend"}),n(" task. The code hereafter shows the configuration required to output the version of "),t(a,null,{default:e(()=>[n("npm")]),_:1}),n(": ")]),t(p,{id:"run-npm-example"},{groovy:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm
tasks.register('npmVersion', RunNpm) {
    `),t(s,null,{default:e(()=>[n(`// dependsOn tasks.named('installPackageManager')
    // dependsOn tasks.named('installFrontend')`)]),_:1}),n(`
    script = '-v'
}`)]),_:1})])]),kotlin:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm
tasks.register<RunNpm>("npmVersion") {
    `),t(s,null,{default:e(()=>[n(`// dependsOn(tasks.named("installPackageManager"))
    // dependsOn(tasks.named("installFrontend"))`)]),_:1}),n(`
    script.set("-v")
}`)]),_:1})])]),_:1})]),_:1})}}}),$=u({__name:"run-pnpm-task-type",setup(_){const o=[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}];return(g,d)=>{const a=k,l=y,s=F,p=f,i=h;return c(),m(i,{name:"RunPnpm",type:"",inputs:o,"custom-environment-variables-supported":""},{title:e(()=>[n("Run a custom command with "),t(a,null,{default:e(()=>[n("pnpm")]),_:1})]),description:e(()=>[r("p",null,[n(" The plugin provides task type "),t(a,null,{default:e(()=>[n("org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpm")]),_:1}),n(" that allows creating a custom task to run a "),t(a,null,{default:e(()=>[n("pnpm")]),_:1}),n(" command. The "),t(a,null,{default:e(()=>[n("script")]),_:1}),n(" property must be set with the corresponding command. Then, choose whether additional dependencies located in the "),t(a,null,{default:e(()=>[n("package.json")]),_:1}),n(" file should be installed: make the task either depends on "),t(l,{name:"installPackageManager"}),n(" task or on "),t(l,{name:"installFrontend"}),n(" task. The code hereafter shows the configuration required to output the version of "),t(a,null,{default:e(()=>[n("pnpm")]),_:1}),n(": ")]),t(p,{id:"run-pnpm-example"},{groovy:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpm
tasks.register('pnpmVersion', RunPnpm) {
    `),t(s,null,{default:e(()=>[n(`// dependsOn tasks.named('installPackageManager')
    // dependsOn tasks.named('installFrontend')`)]),_:1}),n(`
    script = '-v'
}`)]),_:1})])]),kotlin:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunPnpm
tasks.register<RunPnpm>("pnpmVersion") {
    `),t(s,null,{default:e(()=>[n(`// dependsOn(tasks.named("installPackageManager"))
    // dependsOn(tasks.named("installFrontend"))`)]),_:1}),n(`
    script.set("-v")
}`)]),_:1})])]),_:1})]),_:1})}}}),M=u({__name:"run-yarn-task-type",setup(_){const o=[{name:"packageJsonDirectory",type:"F",binding:"P",property:"packageJsonDirectory"},{name:"nodeInstallDirectory",type:"F",binding:"P",property:"nodeInstallDirectory"},{name:"script",type:"S",binding:"P",property:"script"}];return(g,d)=>{const a=k,l=y,s=F,p=f,i=h;return c(),m(i,{name:"RunYarn",type:"",inputs:o,"custom-environment-variables-supported":""},{title:e(()=>[n("Run a custom command with "),t(a,null,{default:e(()=>[n("yarn")]),_:1})]),description:e(()=>[r("p",null,[n(" The plugin provides task type "),t(a,null,{default:e(()=>[n("org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn")]),_:1}),n(" that allows creating a custom task to run a "),t(a,null,{default:e(()=>[n("yarn")]),_:1}),n(" command. The "),t(a,null,{default:e(()=>[n("script")]),_:1}),n(" property must be set with the corresponding command. Then, choose whether additional dependencies located in the "),t(a,null,{default:e(()=>[n("package.json")]),_:1}),n(" file should be installed: make the task either depends on "),t(l,{name:"installPackageManager"}),n(" task or on "),t(l,{name:"installFrontend"}),n(" task. The code hereafter shows the configuration required to output the version of "),t(a,null,{default:e(()=>[n("yarn")]),_:1}),n(": ")]),t(p,{id:"run-yarn-example"},{groovy:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn
tasks.register('yarnVersion', RunYarn) {
    `),t(s,null,{default:e(()=>[n(`// dependsOn tasks.named('installPackageManager')
    // dependsOn tasks.named('installFrontend')`)]),_:1}),n(`
    script = '-v'
}`)]),_:1})])]),kotlin:e(()=>[r("pre",null,[t(a,null,{default:e(()=>[n(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn
tasks.register<RunYarn>("yarnVersion") {
    `),t(s,null,{default:e(()=>[n(`// dependsOn(tasks.named("installPackageManager"))
    // dependsOn(tasks.named("installFrontend"))`)]),_:1}),n(`
    script.set("-v")
}`)]),_:1})])]),_:1})]),_:1})}}});export{S as _,V as a,J as b,I as c,$ as d,M as e};
