import{_ as x,u as ae,a as se}from"./BkGJl2ZQ.js";import{_ as le}from"./CxKyWrla.js";import{_ as w,a as ie}from"./zck6Z6fF.js";import{_ as b}from"./BHt_xBA0.js";import{_ as pe}from"./Bag9INXo.js";import{_ as ce,a as ue}from"./COc4Puty.js";import{_ as k}from"./DysKOmB8.js";import{_ as D}from"./BnmEXoAC.js";import{a as _e,_ as m,b as de,c as me,d as he,e as fe,f as ye,g as ge,h as be,i as Pe,j as xe,k as we,l as ke,m as ve,n as Fe,o as Se,p as De,q as Ie,r as Me,s as je}from"./g2CN4m-W.js";import{_ as h}from"./DlAUqK2U.js";import{o as u,f,w as n,a as r,d as e,b as t,g as Ne,c as $e,u as He}from"./0eoLPSdn.js";import{_ as Ce,a as Ue}from"./DgvL49CU.js";import{_ as Te}from"./C-3WmzZG.js";import{_ as Le}from"./BPoizGhu.js";import{u as Ve}from"./abRkgXpJ.js";import"./D4IM-IFr.js";import"./CtBl-4bT.js";const Re={};function Ee(_,p){const s=x,l=w,c=k,i=b,d=D,a=_e,o=m;return u(),f(o,{name:"nodeDistributionProvided",type:"boolean","default-value":"false","task-names":["installNode","resolvePackageManager","installPackageManager","installFrontend","cleanFrontend","assembleFrontend","checkFrontend","publishFrontend"]},{default:n(()=>[r("p",null,[e("Whether the "),t(s),e(" distribution is already provided, and shall not be downloaded.")]),r("ol",null,[r("li",null,[e(" When "),t(l,null,{default:n(()=>[e("false")]),_:1}),e(", task "),t(c,{name:"installNode"}),e(" downloads a "),t(s),e(" distribution using properties "),t(i,{name:"nodeVersion"}),e(", "),t(i,{name:"nodeDistributionUrlRoot"}),e(", "),t(i,{name:"nodeDistributionUrlPathPattern"}),e(", and installs it in the directory pointed by the "),t(i,{name:"nodeInstallDirectory"}),e(" property. ")]),r("li",null,[r("p",null,[e(" When "),t(l,null,{default:n(()=>[e("true")]),_:1}),e(", the plugin relies on the directory pointed by the "),t(i,{name:"nodeInstallDirectory"}),e(" property to locate the "),t(s),e(" distribution. Other "),t(l,null,{default:n(()=>[e("node*")]),_:1}),e(" properties should not be used for clarity. ")]),t(a,null,{default:n(()=>[e("CAUTION: globally installed distribution is modified when using the plugin and "),t(d),e(". Executables "),t(l,null,{default:n(()=>[e("npm")]),_:1}),e(", "),t(l,null,{default:n(()=>[e("pnpm")]),_:1}),e(", "),t(l,null,{default:n(()=>[e("yarn")]),_:1}),e(" that may already exists within "),t(s),e(" install directory are overwritten when task "),t(c,{name:"installPackageManager"}),e(" is run.")]),_:1})])])]),_:1})}const Ae=h(Re,[["render",Ee]]),Oe={};function We(_,p){const s=x,l=b,c=m;return u(),f(c,{name:"nodeInstallDirectory",type:"java.io.File","default-value":'project.layout.projectDirectory.dir("node")',"task-names":["installNode","resolvePackageManager","installPackageManager","installFrontend","cleanFrontend","assembleFrontend","checkFrontend","publishFrontend"]},{default:n(()=>[r("p",null,[e(" Directory where the "),t(s),e(" distribution shall be installed or is already installed (depending on the value of property "),t(l,{name:"nodeDistributionProvided"}),e("). ")])]),_:1})}const Be=h(Oe,[["render",We]]),qe={};function Je(_,p){const s=w,l=x,c=D,i=k,d=m;return u(),f(d,{name:"corepackVersion",type:"java.lang.String",required:!1,"default-value":null,example:"0.28.2","task-names":["installCorepack"]},{default:n(()=>[r("p",null,[e(" When "),t(s,null,{default:n(()=>[e("null")]),_:1}),e(", the "),t(l),e(" distribution is not touched and the plugin relies on the default version of "),t(c),e(" embedded in the distribution. Setting this property to a non-"),t(s,null,{default:n(()=>[e("null")]),_:1}),e(" value should not be necessary most of the time, since Corepack is expected to be more and more stable. But situations may exist where Corepack is not able to download the package manager correctly, and upgrading the default version embedded is the only way-out. There are 2 options when setting this property: ")]),r("ul",null,[r("li",null,[e("Set a specific version with a value such as "),t(s,null,{default:n(()=>[e("X.Y.Z")]),_:1}),e(".")]),r("li",null,[e(" Set the latest version with the "),t(s,null,{default:n(()=>[e("latest")]),_:1}),e(" value. Note that this will not update Corepack automatically if a newer version is released after the "),t(i,{name:"installCorepack"}),e(" task has run. ")])])]),_:1})}const Ge=h(qe,[["render",Je]]),Ye={},Ke={class:"text-center overflow-x-auto"},Xe={class:"text-monospace"},Ze=r("mo",null,"=",-1),ze=r("mi",{class:"text-info"},"min",-1),Qe=r("mo",{fence:"true"},"(",-1),et=r("mo",{class:"text-danger"},"×",-1),tt={class:"text-primary"},nt=r("mrow",null,[r("mo",{fence:"true"},"("),r("mi",null,"attempted downloads"),r("mo",{class:"text-danger"},"−"),r("mn",null,"1"),r("mo",{fence:"true"},")")],-1),ot=r("mo",{separator:"true"},",",-1),rt=r("mo",{fence:"true"},")",-1);function at(_,p){const s=x,l=w,c=k,i=b,d=m;return u(),f(d,{name:"maxDownloadAttempts",type:"java.lang.Integer","default-value":"1","task-names":["installNode"]},{default:n(()=>[r("p",null,[e(" Based on this property, the plugin may retry to download the "),t(s),e(" distribution in case of error. A value of "),t(l,null,{default:n(()=>[e("1")]),_:1}),e(" indicates the plugin will not retry download (one attempt only). This property applies to the distribution file download as well as its shasum file download (see task "),t(c,{name:"installNode"}),e(") used to validate the distribution file's integrity. Connectivity errors (distribution server reachability, network failures) and "),t(i,{name:"retryHttpStatuses"},{default:n(()=>[e("some HTTP errors")]),_:1}),e(" trigger a retry of the download if more attempts are permitted thanks to this property. The retry strategy is based on the exponential backoff algorithm to determine the waiting time before the next download attempt: ")]),r("p",Ke,[r("math",Xe,[r("mrow",null,[r("mi",null,[t(l,null,{default:n(()=>[e("waiting time (ms)")]),_:1})]),Ze,ze,Qe,r("mi",null,[t(i,{name:"retryInitialIntervalMs"})]),et,r("msup",null,[r("mi",tt,[t(i,{name:"retryIntervalMultiplier"})]),nt]),ot,r("mi",null,[t(i,{name:"retryMaxIntervalMs"})]),rt])])])]),_:1})}const st=h(Ye,[["render",at]]),lt={},it=r("p",null," This property identifies HTTP error responses that may trigger a new download attempt based on their status code. ",-1);function pt(_,p){const s=m;return u(),f(s,{name:"retryHttpStatuses",type:"java.util.Set<java.lang.Integer>","default-value":"[408, 429, 500, 502, 503, 504]","task-names":["installNode"]},{default:n(()=>[it]),_:1})}const ct=h(lt,[["render",pt]]),ut={};function _t(_,p){const s=b,l=m;return u(),f(l,{name:"retryInitialIntervalMs",type:"java.lang.Integer","default-value":"1000","task-names":["installNode"]},{default:n(()=>[r("p",null,[e(" Interval (ms) between the first and the second download attempt, if permitted with the "),t(s,{name:"maxDownloadAttempts"}),e(" property. ")])]),_:1})}const dt=h(ut,[["render",_t]]),mt={},ht=r("p",null,"Multiplier used to compute exponential intervals between download attempts.",-1);function ft(_,p){const s=m;return u(),f(s,{name:"retryIntervalMultiplier",type:"java.lang.Double","default-value":"2.0","task-names":["installNode"]},{default:n(()=>[ht]),_:1})}const yt=h(mt,[["render",ft]]),gt={};function bt(_,p){const s=b,l=m;return u(),f(l,{name:"retryMaxIntervalMs",type:"java.lang.Integer","default-value":"30000","task-names":["installNode"]},{default:n(()=>[r("p",null,[e(" Maximum interval (ms) between each download attempts (see property "),t(s,{name:"maxDownloadAttempts"}),e("). ")])]),_:1})}const Pt=h(gt,[["render",bt]]),xt=r("p",null," The value for each property hereafter is provided as arguments of the package manager executable. ",-1),F="Configuring Gradle to build a Javascript application with node",S="Choose pre-installed packages or request Node.js distributions download, plug scripts from a package.json file to build/test/publish frontend artifacts with Gradle.",Rt=Ne({__name:"configuration",setup(_){const p=He(),s=`${p.public.canonicalBaseUrl}${p.public.paths.configuration}`;return Ve({link:[{rel:"canonical",href:s}]}),ae({description:S,ogDescription:S,ogTitle:F,ogUrl:s,title:F}),(l,c)=>{const i=se,d=le,a=w,o=b,v=pe,P=ce,I=Ae,M=Ce,j=de,N=me,$=he,H=fe,C=Be,U=Ge,T=k,y=Te,L=ye,V=ge,R=be,E=Pe,A=xe,O=Ue,W=we,B=ke,q=ve,J=Fe,G=Se,Y=De,K=Ie,X=Me,Z=st,z=ct,Q=dt,ee=yt,te=Pt,ne=je,oe=Le,re=ie,g=ue;return u(),$e("section",null,[t(i,null,{default:n(()=>[e("Configuration")]),_:1}),t(d,null,{default:n(()=>[e("Plugin DSL")]),_:1}),r("p",null,[e(" The "),t(a,null,{default:n(()=>[e("frontend")]),_:1}),e(" extension is the implementation of the plugin DSL, and holds all settings. ")]),t(v,{id:"plugin-dsl"},{groovy:n(()=>[r("pre",null,[t(a,null,{default:n(()=>[e(`frontend {
    `),t(o,{name:"nodeDistributionProvided"}),e(` = false
    `),t(o,{name:"nodeVersion"}),e(` = '20.14.0'
    `),t(o,{name:"nodeDistributionUrlRoot"}),e(` = 'https://nodejs.org/dist/'
    `),t(o,{name:"nodeDistributionUrlPathPattern"}),e(` = 'vVERSION/node-vVERSION-ARCH.TYPE'
    `),t(o,{name:"nodeDistributionServerUsername"}),e(` = 'username'
    `),t(o,{name:"nodeDistributionServerPassword"}),e(` = 'password'
    `),t(o,{name:"nodeInstallDirectory"}),e(` = project.layout.projectDirectory.dir("node")
    `),t(o,{name:"corepackVersion"}),e(` = 'latest'

    `),t(o,{name:"installScript"}),e(` = 'install'
    `),t(o,{name:"cleanScript"}),e(` = 'run clean'
    `),t(o,{name:"assembleScript"}),e(` = 'run assemble'
    `),t(o,{name:"checkScript"}),e(` = 'run check'
    `),t(o,{name:"publishScript"}),e(` = 'run publish'

    `),t(o,{name:"packageJsonDirectory"}),e(` = projectDir
    `),t(o,{name:"httpsProxyHost"}),e(` = '127.0.0.1'
    `),t(o,{name:"httpsProxyPort"}),e(` = 443
    `),t(o,{name:"httpsProxyUsername"}),e(` = 'username'
    `),t(o,{name:"httpsProxyPassword"}),e(` = 'password'
    `),t(o,{name:"httpProxyHost"}),e(` = '127.0.0.1'
    `),t(o,{name:"httpProxyPort"}),e(` = 80
    `),t(o,{name:"httpProxyUsername"}),e(` = 'username'
    `),t(o,{name:"httpProxyPassword"}),e(` = 'password'
    `),t(o,{name:"maxDownloadAttempts"}),e(` = 1
    `),t(o,{name:"retryHttpStatuses"}),e(` = [408, 429, 500, 502, 503, 504]
    `),t(o,{name:"retryInitialIntervalMs"}),e(` = 1000
    `),t(o,{name:"retryIntervalMultiplier"}),e(` = 2.0
    `),t(o,{name:"retryMaxIntervalMs"}),e(` = 30000
    `),t(o,{name:"verboseModeEnabled"}),e(` = false
    `),t(o,{name:"cacheDirectory"}),e(` = project.layout.projectDirectory.dir(".frontend-gradle-plugin")
}`)]),_:1})])]),kotlin:n(()=>[r("pre",null,[t(a,null,{default:n(()=>[e(`frontend {
    `),t(o,{name:"nodeDistributionProvided"}),e(`.set(false)
    `),t(o,{name:"nodeVersion"}),e(`.set("20.14.0")
    `),t(o,{name:"nodeDistributionUrlRoot"}),e(`.set("https://nodejs.org/dist/")
    `),t(o,{name:"nodeDistributionUrlPathPattern"}),e(`.set("vVERSION/node-vVERSION-ARCH.TYPE")
    `),t(o,{name:"nodeDistributionServerUsername"}),e(`.set("username")
    `),t(o,{name:"nodeDistributionServerPassword"}),e(`.set("password")
    `),t(o,{name:"nodeInstallDirectory"}),e(`.set(project.layout.projectDirectory.dir("node"))
    `),t(o,{name:"corepackVersion"}),e(`.set("latest")

    `),t(o,{name:"installScript"}),e(`.set("install")
    `),t(o,{name:"cleanScript"}),e(`.set("run clean")
    `),t(o,{name:"assembleScript"}),e(`.set("run assemble")
    `),t(o,{name:"checkScript"}),e(`.set("run check")
    `),t(o,{name:"publishScript"}),e(`.set("run publish")

    `),t(o,{name:"packageJsonDirectory"}),e(`.set(project.layout.projectDirectory)
    `),t(o,{name:"httpsProxyHost"}),e(`.set("127.0.0.1")
    `),t(o,{name:"httpsProxyPort"}),e(`.set(443)
    `),t(o,{name:"httpsProxyUsername"}),e(`.set("username")
    `),t(o,{name:"httpsProxyPassword"}),e(`.set("password")
    `),t(o,{name:"httpProxyHost"}),e(`.set("127.0.0.1")
    `),t(o,{name:"httpProxyPort"}),e(`.set(80)
    `),t(o,{name:"httpProxyUsername"}),e(`.set("username")
    `),t(o,{name:"httpProxyPassword"}),e(`.set("password")
    `),t(o,{name:"maxDownloadAttempts"}),e(`.set(1)
    `),t(o,{name:"retryHttpStatuses"}),e(`.set(setOf(408, 429, 500, 502, 503, 504))
    `),t(o,{name:"retryInitialIntervalMs"}),e(`.set(1000)
    `),t(o,{name:"retryIntervalMultiplier"}),e(`.set(2.0)
    `),t(o,{name:"retryMaxIntervalMs"}),e(`.set(30000)
    `),t(o,{name:"verboseModeEnabled"}),e(`.set(false)
    `),t(o,{name:"cacheDirectory"}),e(`.set(project.layout.projectDirectory.dir(".frontend-gradle-plugin"))
}`)]),_:1})])]),_:1}),t(d,null,{default:n(()=>[e("Properties")]),_:1}),r("section",null,[t(P,null,{default:n(()=>[e("Node.js settings")]),_:1}),t(I),t(M),t(j),t(N),t($),t(H),t(C),t(U)]),r("section",null,[t(P,{id:"script-settings"},{default:n(()=>[e("Script settings")]),_:1}),xt,r("p",null,[e(" Under Unix-like O/S, white space characters "),t(a,null,{default:n(()=>[e("' '")]),_:1}),e(" in an argument value must be escaped with a backslash character "),t(a,null,{default:n(()=>[e("'\\'")]),_:1}),e(". Under Windows O/S, the whole argument must be enclosed between double-quotes. ")]),r("ul",null,[r("li",null,[e(" Example on Unix-like O/S: "),t(a,null,{default:n(()=>[e("assembleScript = 'run assemble single\\ argument'")]),_:1})]),r("li",null,[e(" Example on Windows O/S: "),t(a,null,{default:n(()=>[e(`assembleScript = 'run assemble "single argument"'`)]),_:1})])]),r("p",null,[e(" Design of the plugin's tasks running a "),t(a,null,{default:n(()=>[e("npm")]),_:1}),e("/"),t(a,null,{default:n(()=>[e("pnpm")]),_:1}),e("/"),t(a,null,{default:n(()=>[e("yarn")]),_:1}),e(" executable (e.g. "),t(T,{name:"assembleFrontend"}),e(" task) rely on the assumption the "),t(a,null,{default:n(()=>[e("package.json")]),_:1}),e(" file contains all script definitions, and is the single resource defining how to build the frontend application, execute unit tests, lint source code, run a development server, publish artifacts... We recommend to keep these definitions in this file, in the "),t(a,null,{default:n(()=>[e("scripts")]),_:1}),e(" section, and avoid as much as possible using the properties below to run complex commands. Keeping these scripts in one place should also ease finding out where they are located. In an ideal situation, the properties below shall all have a value such as "),t(a,null,{default:n(()=>[e("run <script-name>")]),_:1}),e(", and nothing more. Example: ")]),t(v,{id:"script-property-example"},{groovy:n(()=>[r("pre",null,[t(a,null,{default:n(()=>[t(y,null,{default:n(()=>[e("// Instead of:")]),_:1}),e(`
assembleScript = 'run webpack -- --config webpack.config.js --profile'

`),t(y,null,{default:n(()=>[e("// Prefer:")]),_:1}),e(`
assembleScript = 'run build'
`),t(y,null,{default:n(()=>[e(`// with a package.json file containing:
// "scripts": {
//   "build": "webpack --config webpack/webpack.prod.js --profile"
// }`)]),_:1})]),_:1})])]),kotlin:n(()=>[r("pre",null,[t(a,null,{default:n(()=>[t(y,null,{default:n(()=>[e("// Instead of:")]),_:1}),e(`
assembleScript.set("run webpack -- --config webpack.config.js --profile")

`),t(y,null,{default:n(()=>[e("// Prefer:")]),_:1}),e(`
assembleScript.set("run build")
`),t(y,null,{default:n(()=>[e(`// with a package.json file containing:
// "scripts": {
//   "build": "webpack --config webpack/webpack.prod.js --profile"
// }`)]),_:1})]),_:1})])]),_:1}),t(L),t(V),t(R),t(E),t(A)]),r("section",null,[t(P,null,{default:n(()=>[e("Other settings")]),_:1}),t(O),t(W),t(B),t(q),t(J),t(G),t(Y),t(K),t(X),t(Z),t(z),t(Q),t(ee),t(te),t(ne),t(oe)]),r("section",null,[t(P,{id:"proxy-resolution-process"},{default:n(()=>[e(" About proxy resolution "),t(re,{path:`${l.$config.public.paths.configuration}#app`,class:"small text-info"},{default:n(()=>[e("↑")]),_:1},8,["path"])]),_:1}),r("p",null,[e(" As a prerequisite, the distribution server's IP address or domain name must not match an entry specified in the VM "),t(g,null,{default:n(()=>[t(a,null,{default:n(()=>[e("http.nonProxyHosts")]),_:1})]),_:1}),e(" network property, otherwise the plugin uses a direct connection. Then, the plugin relies on its own settings in priority, and finally on the VM "),t(g,null,{default:n(()=>[t(a,null,{default:n(()=>[e("network properties")]),_:1})]),_:1}),e(". The exact behaviour at runtime is introduced below: ")]),r("ul",null,[r("li",null,[e(" The distribution download URL uses the "),t(a,null,{default:n(()=>[e("https")]),_:1}),e(" protocol: "),r("ol",null,[r("li",null,[e(" If the "),t(o,{name:"httpsProxyHost"}),e(" property is not "),t(a,null,{default:n(()=>[e("null")]),_:1}),e(", the plugin uses the IP address or domain name defined with this property and the port defined with the "),t(o,{name:"httpsProxyPort"}),e(" property. ")]),r("li",null,[e(" If the VM "),t(g,null,{default:n(()=>[t(a,null,{default:n(()=>[e("https.proxyHost")]),_:1})]),_:1}),e(" network property is not "),t(a,null,{default:n(()=>[e("null")]),_:1}),e(", the plugin uses the IP address or domain name defined with this property and the port defined with the VM "),t(g,null,{default:n(()=>[t(a,null,{default:n(()=>[e("https.proxyPort")]),_:1})]),_:1}),e(" network property. ")])])]),r("li",null,[e(" The distribution download URL uses the "),t(a,null,{default:n(()=>[e("http")]),_:1}),e(" protocol: "),r("ol",null,[r("li",null,[e(" If the "),t(o,{name:"httpProxyHost"}),e(" property is not "),t(a,null,{default:n(()=>[e("null")]),_:1}),e(", the plugin uses the IP address or domain name defined with this property and the port defined with the "),t(o,{name:"httpProxyPort"}),e(" property. ")]),r("li",null,[e(" If the VM "),t(g,null,{default:n(()=>[t(a,null,{default:n(()=>[e("http.proxyHost")]),_:1})]),_:1}),e(" network property is not "),t(a,null,{default:n(()=>[e("null")]),_:1}),e(", the plugin uses the IP address or domain name defined with this property and the port defined with the VM "),t(g,null,{default:n(()=>[t(a,null,{default:n(()=>[e("http.proxyPort")]),_:1})]),_:1}),e(" network property. ")])])])])])])}}});export{Rt as default};
