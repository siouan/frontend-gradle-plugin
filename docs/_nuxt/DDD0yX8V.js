import{_ as K,u as W,a as J}from"./D8YflT2D.js";import{_ as L}from"./D14qE6Wt.js";import{a as V,b as _,_ as g}from"./BlmrrCf-.js";import{_ as Z}from"./BFUaQN98.js";import{_ as x}from"./DlAUqK2U.js";import{o as k,c as O,a as l,g as R,b as e,w as o,e as T,d as t,f as c,u as nn}from"./Bt6BF8tg.js";import{_ as tn}from"./ODRuMBaB.js";import{_ as en,a as sn,b as on,c as ln,d as rn,e as an,f as dn,g as un}from"./B_Fp2HLl.js";import{_ as v}from"./BzSX6JfU.js";import{_ as F}from"./d46FRxqf.js";import{_ as $}from"./bFTfBRhu.js";import{_ as Y}from"./Dd9XixDx.js";import{b as w,_ as pn,a as mn}from"./BSn2_kZs.js";import{_ as N}from"./B196FJuh.js";import{_ as G}from"./oBSre_-p.js";import{u as kn}from"./U9e_5WVs.js";import"./CAdOYEvR.js";import"./LJeWQp4g.js";const fn={},gn={viewBox:"0 0 510 500",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"},xn={id:"gradleBasePlugin"},yn={id:"frontendGradlePlugin"};function bn(a,n){const r=L,i=V;return k(),O("svg",gn,[l("defs",null,[n[22]||(n[22]=R('<g id="gradleTask"><rect width="100" height="30" fill="chartreuse" stroke="black" rx="3" ry="3"></rect></g><g id="frontendTask"><rect width="100" height="30" fill="cyan" stroke="black" rx="3" ry="3"></rect></g><g id="frontendTaskType"><rect width="100" height="30" fill="gainsboro" stroke="black" rx="3" ry="3"></rect></g><g id="cleanTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">clean</text></g><g id="checkTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">check</text></g><g id="assembleTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">assemble</text></g><g id="publishTask"><use xlink:href="#gradleTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">publish</text></g><g id="installNodeTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> installNode </text></g><g id="installGlobalYarnTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> installGlobalYarn </text></g><g id="enableYarnBerryTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> enableYarnBerry </text></g><g id="installYarnTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> installYarn </text></g><g id="installFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> installFrontend </text></g><g id="cleanFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> cleanFrontend </text></g><g id="checkFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> checkFrontend </text></g><g id="assembleFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> assembleFrontend </text></g><g id="publishFrontendTask"><use xlink:href="#frontendTask"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem"> publishFrontend </text></g><g id="RunNodeTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">RunNode</text></g><g id="RunNpmTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">RunNpm</text></g><g id="RunNpxTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">RunNpx</text></g><g id="RunYarnTaskType"><use xlink:href="#frontendTaskType"></use><text x="50" y="16" dominant-baseline="middle" text-anchor="middle" font-size="0.7rem">RunYarn</text></g><marker id="arrow" viewBox="0 0 10 10" refX="5" refY="5" markerWidth="6" markerHeight="6" orient="auto-start-reverse" fill="violet"><path d="M 0 0 L 10 5 L 0 10 z"></path></marker>',21)),l("g",xn,[n[3]||(n[3]=l("rect",{x:"0",y:"0",width:"380",height:"70",fill:"none",stroke:"grey"},null,-1)),n[4]||(n[4]=l("text",{x:"10",y:"18","font-size":"0.5rem",fill:"grey"},"Gradle Base plugin",-1)),e(r,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:o(()=>n[0]||(n[0]=[l("use",{x:"10",y:"30","xlink:href":"#cleanTask"},null,-1)])),_:1}),e(r,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:o(()=>n[1]||(n[1]=[l("use",{x:"140",y:"30","xlink:href":"#checkTask"},null,-1)])),_:1}),e(r,{path:"/current/userguide/base_plugin.html#sec:base_tasks"},{default:o(()=>n[2]||(n[2]=[l("use",{x:"270",y:"30","xlink:href":"#assembleTask"},null,-1)])),_:1})]),n[23]||(n[23]=l("g",{id:"gradlePublishingPlugin"},[l("rect",{x:"390",y:"0",width:"120",height:"70",fill:"none",stroke:"grey"}),l("text",{"text-anchor":"end",x:"500",y:"18","font-size":"0.5rem",fill:"grey"},"Gradle Publishing plugin"),l("use",{x:"400",y:"30","xlink:href":"#publishTask"})],-1)),l("g",yn,[n[18]||(n[18]=l("rect",{x:"0",y:"80",width:"510",height:"420",fill:"none",stroke:"grey"},null,-1)),n[19]||(n[19]=l("text",{"text-anchor":"end",x:"500",y:"238","font-size":"0.5rem",fill:"grey"},"Frontend Gradle plugin",-1)),e(i,{path:`${a.$config.public.paths.tasks}#cleanFrontend`},{default:o(()=>n[5]||(n[5]=[l("use",{x:"10",y:"90","xlink:href":"#cleanFrontendTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#checkFrontend`},{default:o(()=>n[6]||(n[6]=[l("use",{x:"140",y:"90","xlink:href":"#checkFrontendTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#assembleFrontend`},{default:o(()=>n[7]||(n[7]=[l("use",{x:"270",y:"90","xlink:href":"#assembleFrontendTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#publishFrontend`},{default:o(()=>n[8]||(n[8]=[l("use",{x:"400",y:"90","xlink:href":"#publishFrontendTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#installFrontend`},{default:o(()=>n[9]||(n[9]=[l("use",{x:"140",y:"150","xlink:href":"#installFrontendTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#installYarn`},{default:o(()=>n[10]||(n[10]=[l("use",{x:"270",y:"210","xlink:href":"#installYarnTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#enableYarnBerry`},{default:o(()=>n[11]||(n[11]=[l("use",{x:"270",y:"270","xlink:href":"#enableYarnBerryTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#installGlobalYarn`},{default:o(()=>n[12]||(n[12]=[l("use",{x:"270",y:"330","xlink:href":"#installGlobalYarnTask"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#installNode`},{default:o(()=>n[13]||(n[13]=[l("use",{x:"140",y:"390","xlink:href":"#installNodeTask"},null,-1)])),_:1},8,["path"]),n[20]||(n[20]=l("line",{x1:"0",y1:"430",x2:"510",y2:"430",stroke:"gainsboro","stroke-dasharray":"4 2"},null,-1)),n[21]||(n[21]=l("text",{"text-anchor":"middle",x:"255",y:"448","font-size":"0.5rem",fill:"darkgrey"}," Additional task types ",-1)),e(i,{path:`${a.$config.public.paths.tasks}#RunNode`},{default:o(()=>n[14]||(n[14]=[l("use",{x:"10",y:"460","xlink:href":"#RunNodeTaskType"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#RunNpm`},{default:o(()=>n[15]||(n[15]=[l("use",{x:"140",y:"460","xlink:href":"#RunNpmTaskType"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#RunNpx`},{default:o(()=>n[16]||(n[16]=[l("use",{x:"270",y:"460","xlink:href":"#RunNpxTaskType"},null,-1)])),_:1},8,["path"]),e(i,{path:`${a.$config.public.paths.tasks}#RunYarn`},{default:o(()=>n[17]||(n[17]=[l("use",{x:"400",y:"460","xlink:href":"#RunYarnTaskType"},null,-1)])),_:1},8,["path"])])]),n[24]||(n[24]=R('<use xlink:href="#gradleBasePlugin"></use><use xlink:href="#gradlePublishingPlugin"></use><use xlink:href="#frontendGradlePlugin"></use><line x1="60" y1="60" x2="60" y2="87" stroke="violet" marker-end="url(#arrow)"></line><line x1="190" y1="60" x2="190" y2="87" stroke="violet" marker-end="url(#arrow)"></line><line x1="320" y1="60" x2="320" y2="87" stroke="violet" marker-end="url(#arrow)"></line><line x1="450" y1="60" x2="450" y2="87" stroke="violet" marker-end="url(#arrow)"></line><path d="M 60 120 Q 60 133, 120 133 T 180 147" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="190" y1="120" x2="190" y2="147" stroke="violet" marker-end="url(#arrow)"></line><path d="M 320 120 Q 320 133, 260 133 T 200 147" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="400" y1="105" x2="373" y2="105" stroke="violet" marker-end="url(#arrow)"></line><line x1="190" y1="180" x2="190" y2="387" stroke="violet" marker-end="url(#arrow)"></line><path d="M 200 180 Q 200 193, 260 190 T 320 207" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path><line x1="320" y1="240" x2="320" y2="267" stroke="violet" marker-end="url(#arrow)"></line><line x1="320" y1="300" x2="320" y2="327" stroke="violet" marker-end="url(#arrow)"></line><path d="M 320 360 Q 320 373, 260 373 T 200 387" stroke="violet" fill="transparent" marker-end="url(#arrow)"></path>',16))])}const Tn=x(fn,[["render",bn]]),Fn={};function wn(a,n){const r=v,i=K,s=_,u=g,p=F,d=$,f=Y,y=w;return k(),T(y,{name:"installGlobalYarn"},{title:o(()=>[n[0]||(n[0]=t(" Install ")),e(r),n[1]||(n[1]=t(" globally in the ")),e(i),n[2]||(n[2]=t(" distribution "))]),description:o(()=>[l("p",null,[n[8]||(n[8]=t(" The task installs the latest ")),e(r),n[9]||(n[9]=t(" release as a global ")),e(i),n[10]||(n[10]=t(" dependency. This is a step required to spawn per-project installations, as explained in the ")),e(s,{href:"https://yarnpkg.com/getting-started/install#about-global-installs"},{default:o(()=>n[3]||(n[3]=[t("installation notes")])),_:1}),n[11]||(n[11]=t(" and ")),e(s,{href:"https://yarnpkg.com/getting-started/migration#step-by-step"},{default:o(()=>n[4]||(n[4]=[t("migration guide")])),_:1}),n[12]||(n[12]=t(" of ")),e(r),n[13]||(n[13]=t(". The download and installation is done by executing command ")),e(u,null,{default:o(()=>n[5]||(n[5]=[t("npm install -g yarn")])),_:1}),n[14]||(n[14]=t(", using the ")),e(u,null,{default:o(()=>n[6]||(n[6]=[t("npm")])),_:1}),n[15]||(n[15]=t(" executable located in the ")),e(i),n[16]||(n[16]=t(" distribution deployed by the ")),e(p,{name:"installNode"}),n[17]||(n[17]=t(" task, or in the provided distribution if the ")),e(d,{name:"nodeDistributionProvided"}),n[18]||(n[18]=t(" property is set to ")),e(u,null,{default:o(()=>n[7]||(n[7]=[t("true")])),_:1}),n[19]||(n[19]=t(". "))]),e(f,null,{default:o(()=>n[20]||(n[20]=[t(" This task should not be executed directly. Gradle executes it if the build requires it. ")])),_:1})]),_:1})}const _n=x(Fn,[["render",wn]]),vn={};function $n(a,n){const r=_,i=v,s=g,u=F,p=Y,d=w;return k(),T(d,{name:"enableYarnBerry"},{title:o(()=>n[0]||(n[0]=[t("Enable Yarn Berry installation")])),description:o(()=>[l("p",null,[n[5]||(n[5]=t(" The task enables Yarn Berry support as described in the ")),e(r,{href:"https://yarnpkg.com/getting-started/install#per-project-install"},{default:o(()=>n[1]||(n[1]=[t("installation notes")])),_:1}),n[6]||(n[6]=t(" and ")),e(r,{href:"https://yarnpkg.com/getting-started/migration#step-by-step"},{default:o(()=>n[2]||(n[2]=[t("migration guide")])),_:1}),n[7]||(n[7]=t(" of ")),e(i),n[8]||(n[8]=t(". This is done by executing command ")),e(s,null,{default:o(()=>n[3]||(n[3]=[t("yarn set version berry")])),_:1}),n[9]||(n[9]=t(", using the ")),e(s,null,{default:o(()=>n[4]||(n[4]=[t("yarn")])),_:1}),n[10]||(n[10]=t(" executable globally installed by the ")),e(u,{name:"installGlobalYarn"}),n[11]||(n[11]=t(" task. "))]),e(p,null,{default:o(()=>n[12]||(n[12]=[t(" This task should not be executed directly. Gradle executes it if the build requires it. ")])),_:1})]),_:1})}const Yn=x(vn,[["render",$n]]),Nn={};function Gn(a,n){const r=$,i=g,s=v,u=F,p=_,d=pn,f=mn,y=Y,b=w;return k(),T(b,{name:"installYarn"},{title:o(()=>n[0]||(n[0]=[t("Install Yarn")])),description:o(()=>[l("p",null,[n[4]||(n[4]=t(" If the ")),e(r,{name:"yarnEnabled"}),n[5]||(n[5]=t(" property is ")),e(i,null,{default:o(()=>n[1]||(n[1]=[t("true")])),_:1}),n[6]||(n[6]=t(", the task executes command ")),e(i,null,{default:o(()=>n[2]||(n[2]=[t("yarn set version <yarnVersion>")])),_:1}),n[7]||(n[7]=t(" in the project directory. In other words, the task installs the relevant Yarn distribution in the current project, based on the value of the ")),e(r,{name:"yarnVersion"}),n[8]||(n[8]=t(" property. Downloading and installing the distribution is entirely managed by the ")),e(s),n[9]||(n[9]=t(" distribution globally installed after execution of the ")),e(u,{name:"installGlobalYarn"}),n[10]||(n[10]=t(". To customize this process (proxy usage, etc), please refer to Yarn's ")),e(p,{href:"https://yarnpkg.com/configuration/yarnrc"},{default:o(()=>n[3]||(n[3]=[t("configuration options")])),_:1}),n[11]||(n[11]=t(". "))]),l("p",null,[n[13]||(n[13]=t(" If a ")),e(s),n[14]||(n[14]=t(" distribution is already installed in the local platform - either as a global installation or as an installation performed by another Gradle (sub-)project - and shall be used instead of a downloaded distribution, take a look at the ")),e(r,{name:"yarnDistributionProvided"}),n[15]||(n[15]=t(" property instead: when ")),e(i,null,{default:o(()=>n[12]||(n[12]=[t("true")])),_:1}),n[16]||(n[16]=t(", this task is ignored if invoked during a Gradle build, and its outcome will always be ")),e(d,{outcome:"SKIPPED"}),n[17]||(n[17]=t(". "))]),l("p",null,[n[19]||(n[19]=t(" The task takes advantage of ")),e(f,{path:"/performance/#incremental_build"},{default:o(()=>n[18]||(n[18]=[t("Gradle incremental build")])),_:1}),n[20]||(n[20]=t(", and is not executed again unless one of its inputs/outputs changed. Consequently, if the task takes part of a Gradle build, its outcome will be ")),e(d,{outcome:"UP-TO-DATE"}),n[21]||(n[21]=t(". "))]),e(y,null,{default:o(()=>n[22]||(n[22]=[t(" This task should not be executed directly. Gradle executes it if the build requires it. ")])),_:1})]),_:1})}const Rn=x(Nn,[["render",Gn]]),zn={};function Cn(a,n){const r=g,i=F,s=N,u=G,p=w;return k(),T(p,{name:"RunNpm",type:""},{title:o(()=>[n[1]||(n[1]=t("Run a custom command with ")),e(r,null,{default:o(()=>n[0]||(n[0]=[t("npm")])),_:1})]),description:o(()=>[l("p",null,[n[4]||(n[4]=t(" The plugin provides the task type ")),e(r,null,{default:o(()=>n[2]||(n[2]=[t("org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm")])),_:1}),n[5]||(n[5]=t(" that allows creating a custom task to run a frontend script. The ")),e(r,null,{default:o(()=>n[3]||(n[3]=[t("script")])),_:1}),n[6]||(n[6]=t(" property must be set with the corresponding command. Then, choose the appropriate task dependency: make the task either depends on ")),e(i,{name:"installNode"}),n[7]||(n[7]=t(" task or on ")),e(i,{name:"installFrontend"}),n[8]||(n[8]=t(" task. The code hereafter shows the configuration required to run a linter: "))]),e(u,{id:"run-npm-example"},{groovy:o(()=>[l("pre",null,[e(r,null,{default:o(()=>[n[10]||(n[10]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm
tasks.register('npmVersion', RunNpm) {
    `)),e(s,null,{default:o(()=>n[9]||(n[9]=[t(`// dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')`)])),_:1}),n[11]||(n[11]=t(`
    script = '--version'
}`))]),_:1})])]),kotlin:o(()=>[l("pre",null,[e(r,null,{default:o(()=>[n[13]||(n[13]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunNpm
tasks.register<RunNpm>("npmVersion") {
    `)),e(s,null,{default:o(()=>n[12]||(n[12]=[t(`// dependsOn(tasks.named("installNode"))
    // dependsOn(tasks.named("installFrontend"))`)])),_:1}),n[14]||(n[14]=t(`
    script.set("--version")
}`))]),_:1})])]),_:1})]),_:1})}const Ln=x(zn,[["render",Cn]]),Vn={};function On(a,n){const r=g,i=$,s=F,u=N,p=G,d=w;return k(),T(d,{name:"RunYarn",type:""},{title:o(()=>[n[1]||(n[1]=t("Run a custom command with ")),e(r,null,{default:o(()=>n[0]||(n[0]=[t("yarn")])),_:1})]),description:o(()=>[l("p",null,[n[5]||(n[5]=t(" The plugin provides the task type ")),e(r,null,{default:o(()=>n[2]||(n[2]=[t("org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn")])),_:1}),n[6]||(n[6]=t(" that allows creating a custom task to run a frontend script. The ")),e(r,null,{default:o(()=>n[3]||(n[3]=[t("script")])),_:1}),n[7]||(n[7]=t(" property must be set with the corresponding command. The ")),e(i,{name:"yarnEnabled"}),n[8]||(n[8]=t(" property must be set to ")),e(r,null,{default:o(()=>n[4]||(n[4]=[t("true")])),_:1}),n[9]||(n[9]=t(". Then, choose the appropriate task dependency: make the task either depends on ")),e(s,{name:"installNode"}),n[10]||(n[10]=t(" task or on ")),e(s,{name:"installFrontend"}),n[11]||(n[11]=t(" task. The code hereafter shows the configuration required to run end-to-end tests: "))]),e(p,{id:"run-yarn-example"},{groovy:o(()=>[l("pre",null,[e(r,null,{default:o(()=>[n[13]||(n[13]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn
tasks.register('yarnVersion', RunYarn) {
    `)),e(u,null,{default:o(()=>n[12]||(n[12]=[t(`// dependsOn tasks.named('installNode')
    // dependsOn tasks.named('installFrontend')`)])),_:1}),n[14]||(n[14]=t(`
    script = '--version'
}`))]),_:1})])]),kotlin:o(()=>[l("pre",null,[e(r,null,{default:o(()=>[n[16]||(n[16]=t(`import org.siouan.frontendgradleplugin.infrastructure.gradle.RunYarn
tasks.register<RunYarn>("yarnVersion") {
    `)),e(u,null,{default:o(()=>n[15]||(n[15]=[t(`// dependsOn(tasks.named("installNode"))
    // dependsOn(tasks.named("installFrontend"))`)])),_:1}),n[17]||(n[17]=t(`
    script.set("--version")
}`))]),_:1})])]),_:1})]),_:1})}const Bn=x(Vn,[["render",On]]),Pn={class:"text-center"},z="Gradle tasks to run node, npm, npx, yarn commands",C="Gradle tasks and types provided by the plugin to run node/npm/npx/yarn: integration, dependencies, customization, recommendations",nt=c({__name:"node-corepack-npm-pnpm-yarn-tasks",setup(a){const n=nn(),r=`${n.public.canonicalBaseUrl}${n.public.paths.tasks}`;return kn({link:[{rel:"canonical",href:r}]}),W({description:C,ogDescription:C,ogTitle:z,ogUrl:r,title:z}),(i,s)=>{const u=J,p=L,d=g,f=Z,y=Tn,b=tn,B=en,P=_n,S=Yn,I=Rn,A=sn,D=on,E=ln,j=rn,q=an,M=dn,X=Ln,h=un,Q=Bn,U=V,m=N,H=G;return k(),O("section",null,[e(u,null,{default:o(()=>s[0]||(s[0]=[t("Tasks")])),_:1}),s[41]||(s[41]=l("p",null,"The plugin registers multiple tasks, that may have dependencies with each other, and also with:",-1)),l("ul",null,[l("li",null,[s[5]||(s[5]=t(" Gradle lifecycle tasks defined in the ")),e(p,{path:"/current/userguide/base_plugin.html"},{default:o(()=>s[1]||(s[1]=[t("Gradle Base plugin")])),_:1}),s[6]||(s[6]=t(": ")),e(d,null,{default:o(()=>s[2]||(s[2]=[t("clean")])),_:1}),s[7]||(s[7]=t(", ")),e(d,null,{default:o(()=>s[3]||(s[3]=[t("assemble")])),_:1}),s[8]||(s[8]=t(", ")),e(d,null,{default:o(()=>s[4]||(s[4]=[t("check")])),_:1}),s[9]||(s[9]=t(". "))]),l("li",null,[s[11]||(s[11]=t(" Tasks defined in the Gradle Publishing plugin: ")),e(d,null,{default:o(()=>s[10]||(s[10]=[t("publish")])),_:1}),s[12]||(s[12]=t(". "))])]),e(f,null,{default:o(()=>s[13]||(s[13]=[t("Dependency tree")])),_:1}),l("p",Pn,[e(y,{class:"w-75"})]),e(f,null,{default:o(()=>s[14]||(s[14]=[t("Reference")])),_:1}),l("section",null,[e(b,null,{default:o(()=>s[15]||(s[15]=[t("Built-in tasks")])),_:1}),e(B),e(P),e(S),e(I),e(A),e(D),e(E),e(j),e(q)]),l("section",null,[e(b,null,{default:o(()=>s[16]||(s[16]=[t("Additional types")])),_:1}),e(M),e(X),e(h),e(Q)]),l("section",null,[e(b,{id:"tweaking-tasks"},{default:o(()=>[s[18]||(s[18]=t(" Tweaking the built-in tasks ")),e(U,{path:`${i.$config.public.paths.tasks}#app`,class:"small text-info"},{default:o(()=>s[17]||(s[17]=[t("↑")])),_:1},8,["path"])]),_:1}),l("p",null,[s[20]||(s[20]=t(" If you need to customize the plugin's built-in tasks (e.g. declare additional I/O or dependencies), it is important to conform to the ")),e(p,{path:"/current/userguide/task_configuration_avoidance.html#sec:old_vs_new_configuration_api_overview"},{default:o(()=>s[19]||(s[19]=[t("Configuration avoidance API")])),_:1}),s[21]||(s[21]=t(": use references of task providers instead of references of tasks, and continue taking advantage of the lazy configuration strategy the plugin already implements. The examples below introduce the implementation expected with simple cases: "))]),e(H,{id:"lazy-configuration-examples"},{groovy:o(()=>[l("pre",null,[e(d,null,{default:o(()=>[e(m,null,{default:o(()=>s[22]||(s[22]=[t(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)])),_:1}),s[26]||(s[26]=t(`
installFrontend {
    dependsOn 'otherTask'
    inputs.files('package.json', 'package-lock.json')
}
`)),e(m,null,{default:o(()=>s[23]||(s[23]=[t(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later. Let's also reinforce this behaviour
// by using its provider to retrieve the task.`)])),_:1}),s[27]||(s[27]=t(`
tasks.named('installFrontend') {
    dependsOn tasks.named('otherTask')
    inputs.files('package.json', 'package-lock.json')
}

`)),e(m,null,{default:o(()=>s[24]||(s[24]=[t(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)])),_:1}),s[28]||(s[28]=t(`
task eagerTask {
    dependsOn 'installFrontend'
}
`)),e(m,null,{default:o(()=>s[25]||(s[25]=[t(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)])),_:1}),s[29]||(s[29]=t(`
tasks.register('lazyTask') {
    dependsOn tasks.named('installFrontend')
}`))]),_:1})])]),kotlin:o(()=>[l("pre",null,[e(d,null,{default:o(()=>[e(m,null,{default:o(()=>s[30]||(s[30]=[t(`// Configuring a predefined task.
// LEGACY SYNTAX: task 'installFrontend' is immediately created and configured, as well as task
// 'otherTask', even if both tasks are not executed.`)])),_:1}),s[34]||(s[34]=t(`
installFrontend {
    dependsOn("otherTask")
    inputs.files("package.json", "package-lock.json")
}
`)),e(m,null,{default:o(()=>s[31]||(s[31]=[t(`// MODERN SYNTAX: task 'installFrontend' is created and configured only when Gradle is about to execute it.
// Consequently, task 'otherTask' is also created and configured later.`)])),_:1}),s[35]||(s[35]=t(`
tasks.named<InstallTask>("installFrontend") {
    dependsOn(tasks.named("otherTask"))
    inputs.files("package.json", "package-lock.json")
}

`)),e(m,null,{default:o(()=>s[32]||(s[32]=[t(`// Defining a new task
// LEGACY SYNTAX: task 'eagerTask' is immediately created and configured, as well as task
// 'installFrontend', even if both tasks are not executed.`)])),_:1}),s[36]||(s[36]=t(`
task eagerTask {
    dependsOn("installFrontend")
}
`)),e(m,null,{default:o(()=>s[33]||(s[33]=[t(`// MODERN SYNTAX: task 'lazyTask' is created and configured only when Gradle is about to execute it.
// Consequently, task 'installFrontend' is also created and configured later. Let's also reinforce this
// behaviour by using its provider to retrieve the task.`)])),_:1}),s[37]||(s[37]=t(`
tasks.register("lazyTask") {
    dependsOn(tasks.named("installFrontend"))
}`))]),_:1})])]),_:1}),l("p",null,[s[39]||(s[39]=t(" If your application uses the legacy syntax, you may find further instructions to migrate to the modern syntax in this Gradle ")),e(p,{path:"/current/userguide/task_configuration_avoidance.html#sec:task_configuration_avoidance_migration_guidelines"},{default:o(()=>s[38]||(s[38]=[t("guide")])),_:1}),s[40]||(s[40]=t(". "))])])])}}});export{nt as default};
